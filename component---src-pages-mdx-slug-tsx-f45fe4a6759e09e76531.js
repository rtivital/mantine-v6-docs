(self.webpackChunkmantine_docs=self.webpackChunkmantine_docs||[]).push([[342],{59713:function(e){e.exports=function(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e},e.exports.default=e.exports,e.exports.__esModule=!0},37316:function(e){e.exports=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l},e.exports.default=e.exports,e.exports.__esModule=!0},66794:function(e,a,t){var n=t(51207);e.exports=r;var l=Object.hasOwnProperty;function r(){if(!(this instanceof r))return new r;this.reset()}function i(e,a){return"string"!=typeof e?"":(a||(e=e.toLowerCase()),e.replace(n,"").replace(/ /g,"-"))}r.prototype.slug=function(e,a){for(var t=this,n=i(e,!0===a),r=n;l.call(t.occurrences,n);)t.occurrences[r]++,n=r+"-"+t.occurrences[r];return t.occurrences[n]=0,n},r.prototype.reset=function(){this.occurrences=Object.create(null)},r.slug=i},51207:function(e){e.exports=/[\0-\x1F!-,\.\/:-@\[-\^`\{-\xA9\xAB-\xB4\xB6-\xB9\xBB-\xBF\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0378\u0379\u037E\u0380-\u0385\u0387\u038B\u038D\u03A2\u03F6\u0482\u0530\u0557\u0558\u055A-\u055F\u0589-\u0590\u05BE\u05C0\u05C3\u05C6\u05C8-\u05CF\u05EB-\u05EE\u05F3-\u060F\u061B-\u061F\u066A-\u066D\u06D4\u06DD\u06DE\u06E9\u06FD\u06FE\u0700-\u070F\u074B\u074C\u07B2-\u07BF\u07F6-\u07F9\u07FB\u07FC\u07FE\u07FF\u082E-\u083F\u085C-\u085F\u086B-\u089F\u08B5\u08BE-\u08D2\u08E2\u0964\u0965\u0970\u0984\u098D\u098E\u0991\u0992\u09A9\u09B1\u09B3-\u09B5\u09BA\u09BB\u09C5\u09C6\u09C9\u09CA\u09CF-\u09D6\u09D8-\u09DB\u09DE\u09E4\u09E5\u09F2-\u09FB\u09FD\u09FF\u0A00\u0A04\u0A0B-\u0A0E\u0A11\u0A12\u0A29\u0A31\u0A34\u0A37\u0A3A\u0A3B\u0A3D\u0A43-\u0A46\u0A49\u0A4A\u0A4E-\u0A50\u0A52-\u0A58\u0A5D\u0A5F-\u0A65\u0A76-\u0A80\u0A84\u0A8E\u0A92\u0AA9\u0AB1\u0AB4\u0ABA\u0ABB\u0AC6\u0ACA\u0ACE\u0ACF\u0AD1-\u0ADF\u0AE4\u0AE5\u0AF0-\u0AF8\u0B00\u0B04\u0B0D\u0B0E\u0B11\u0B12\u0B29\u0B31\u0B34\u0B3A\u0B3B\u0B45\u0B46\u0B49\u0B4A\u0B4E-\u0B55\u0B58-\u0B5B\u0B5E\u0B64\u0B65\u0B70\u0B72-\u0B81\u0B84\u0B8B-\u0B8D\u0B91\u0B96-\u0B98\u0B9B\u0B9D\u0BA0-\u0BA2\u0BA5-\u0BA7\u0BAB-\u0BAD\u0BBA-\u0BBD\u0BC3-\u0BC5\u0BC9\u0BCE\u0BCF\u0BD1-\u0BD6\u0BD8-\u0BE5\u0BF0-\u0BFF\u0C0D\u0C11\u0C29\u0C3A-\u0C3C\u0C45\u0C49\u0C4E-\u0C54\u0C57\u0C5B-\u0C5F\u0C64\u0C65\u0C70-\u0C7F\u0C84\u0C8D\u0C91\u0CA9\u0CB4\u0CBA\u0CBB\u0CC5\u0CC9\u0CCE-\u0CD4\u0CD7-\u0CDD\u0CDF\u0CE4\u0CE5\u0CF0\u0CF3-\u0CFF\u0D04\u0D0D\u0D11\u0D45\u0D49\u0D4F-\u0D53\u0D58-\u0D5E\u0D64\u0D65\u0D70-\u0D79\u0D80\u0D81\u0D84\u0D97-\u0D99\u0DB2\u0DBC\u0DBE\u0DBF\u0DC7-\u0DC9\u0DCB-\u0DCE\u0DD5\u0DD7\u0DE0-\u0DE5\u0DF0\u0DF1\u0DF4-\u0E00\u0E3B-\u0E3F\u0E4F\u0E5A-\u0E80\u0E83\u0E85\u0E8B\u0EA4\u0EA6\u0EBE\u0EBF\u0EC5\u0EC7\u0ECE\u0ECF\u0EDA\u0EDB\u0EE0-\u0EFF\u0F01-\u0F17\u0F1A-\u0F1F\u0F2A-\u0F34\u0F36\u0F38\u0F3A-\u0F3D\u0F48\u0F6D-\u0F70\u0F85\u0F98\u0FBD-\u0FC5\u0FC7-\u0FFF\u104A-\u104F\u109E\u109F\u10C6\u10C8-\u10CC\u10CE\u10CF\u10FB\u1249\u124E\u124F\u1257\u1259\u125E\u125F\u1289\u128E\u128F\u12B1\u12B6\u12B7\u12BF\u12C1\u12C6\u12C7\u12D7\u1311\u1316\u1317\u135B\u135C\u1360-\u137F\u1390-\u139F\u13F6\u13F7\u13FE-\u1400\u166D\u166E\u1680\u169B-\u169F\u16EB-\u16ED\u16F9-\u16FF\u170D\u1715-\u171F\u1735-\u173F\u1754-\u175F\u176D\u1771\u1774-\u177F\u17D4-\u17D6\u17D8-\u17DB\u17DE\u17DF\u17EA-\u180A\u180E\u180F\u181A-\u181F\u1879-\u187F\u18AB-\u18AF\u18F6-\u18FF\u191F\u192C-\u192F\u193C-\u1945\u196E\u196F\u1975-\u197F\u19AC-\u19AF\u19CA-\u19CF\u19DA-\u19FF\u1A1C-\u1A1F\u1A5F\u1A7D\u1A7E\u1A8A-\u1A8F\u1A9A-\u1AA6\u1AA8-\u1AAF\u1ABF-\u1AFF\u1B4C-\u1B4F\u1B5A-\u1B6A\u1B74-\u1B7F\u1BF4-\u1BFF\u1C38-\u1C3F\u1C4A-\u1C4C\u1C7E\u1C7F\u1C89-\u1C8F\u1CBB\u1CBC\u1CC0-\u1CCF\u1CD3\u1CFB-\u1CFF\u1DFA\u1F16\u1F17\u1F1E\u1F1F\u1F46\u1F47\u1F4E\u1F4F\u1F58\u1F5A\u1F5C\u1F5E\u1F7E\u1F7F\u1FB5\u1FBD\u1FBF-\u1FC1\u1FC5\u1FCD-\u1FCF\u1FD4\u1FD5\u1FDC-\u1FDF\u1FED-\u1FF1\u1FF5\u1FFD-\u203E\u2041-\u2053\u2055-\u2070\u2072-\u207E\u2080-\u208F\u209D-\u20CF\u20F1-\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F-\u215F\u2189-\u24B5\u24EA-\u2BFF\u2C2F\u2C5F\u2CE5-\u2CEA\u2CF4-\u2CFF\u2D26\u2D28-\u2D2C\u2D2E\u2D2F\u2D68-\u2D6E\u2D70-\u2D7E\u2D97-\u2D9F\u2DA7\u2DAF\u2DB7\u2DBF\u2DC7\u2DCF\u2DD7\u2DDF\u2E00-\u2E2E\u2E30-\u3004\u3008-\u3020\u3030\u3036\u3037\u303D-\u3040\u3097\u3098\u309B\u309C\u30A0\u30FB\u3100-\u3104\u3130\u318F-\u319F\u31BB-\u31EF\u3200-\u33FF\u4DB6-\u4DFF\u9FF0-\u9FFF\uA48D-\uA4CF\uA4FE\uA4FF\uA60D-\uA60F\uA62C-\uA63F\uA673\uA67E\uA6F2-\uA716\uA720\uA721\uA789\uA78A\uA7C0\uA7C1\uA7C7-\uA7F6\uA828-\uA83F\uA874-\uA87F\uA8C6-\uA8CF\uA8DA-\uA8DF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA954-\uA95F\uA97D-\uA97F\uA9C1-\uA9CE\uA9DA-\uA9DF\uA9FF\uAA37-\uAA3F\uAA4E\uAA4F\uAA5A-\uAA5F\uAA77-\uAA79\uAAC3-\uAADA\uAADE\uAADF\uAAF0\uAAF1\uAAF7-\uAB00\uAB07\uAB08\uAB0F\uAB10\uAB17-\uAB1F\uAB27\uAB2F\uAB5B\uAB68-\uAB6F\uABEB\uABEE\uABEF\uABFA-\uABFF\uD7A4-\uD7AF\uD7C7-\uD7CA\uD7FC-\uD7FF\uE000-\uF8FF\uFA6E\uFA6F\uFADA-\uFAFF\uFB07-\uFB12\uFB18-\uFB1C\uFB29\uFB37\uFB3D\uFB3F\uFB42\uFB45\uFBB2-\uFBD2\uFD3E-\uFD4F\uFD90\uFD91\uFDC8-\uFDEF\uFDFC-\uFDFF\uFE10-\uFE1F\uFE30-\uFE32\uFE35-\uFE4C\uFE50-\uFE6F\uFE75\uFEFD-\uFF0F\uFF1A-\uFF20\uFF3B-\uFF3E\uFF40\uFF5B-\uFF65\uFFBF-\uFFC1\uFFC8\uFFC9\uFFD0\uFFD1\uFFD8\uFFD9\uFFDD-\uFFFF]|\uD800[\uDC0C\uDC27\uDC3B\uDC3E\uDC4E\uDC4F\uDC5E-\uDC7F\uDCFB-\uDD3F\uDD75-\uDDFC\uDDFE-\uDE7F\uDE9D-\uDE9F\uDED1-\uDEDF\uDEE1-\uDEFF\uDF20-\uDF2C\uDF4B-\uDF4F\uDF7B-\uDF7F\uDF9E\uDF9F\uDFC4-\uDFC7\uDFD0\uDFD6-\uDFFF]|\uD801[\uDC9E\uDC9F\uDCAA-\uDCAF\uDCD4-\uDCD7\uDCFC-\uDCFF\uDD28-\uDD2F\uDD64-\uDDFF\uDF37-\uDF3F\uDF56-\uDF5F\uDF68-\uDFFF]|\uD802[\uDC06\uDC07\uDC09\uDC36\uDC39-\uDC3B\uDC3D\uDC3E\uDC56-\uDC5F\uDC77-\uDC7F\uDC9F-\uDCDF\uDCF3\uDCF6-\uDCFF\uDD16-\uDD1F\uDD3A-\uDD7F\uDDB8-\uDDBD\uDDC0-\uDDFF\uDE04\uDE07-\uDE0B\uDE14\uDE18\uDE36\uDE37\uDE3B-\uDE3E\uDE40-\uDE5F\uDE7D-\uDE7F\uDE9D-\uDEBF\uDEC8\uDEE7-\uDEFF\uDF36-\uDF3F\uDF56-\uDF5F\uDF73-\uDF7F\uDF92-\uDFFF]|\uD803[\uDC49-\uDC7F\uDCB3-\uDCBF\uDCF3-\uDCFF\uDD28-\uDD2F\uDD3A-\uDEFF\uDF1D-\uDF26\uDF28-\uDF2F\uDF51-\uDFDF\uDFF7-\uDFFF]|\uD804[\uDC47-\uDC65\uDC70-\uDC7E\uDCBB-\uDCCF\uDCE9-\uDCEF\uDCFA-\uDCFF\uDD35\uDD40-\uDD43\uDD47-\uDD4F\uDD74\uDD75\uDD77-\uDD7F\uDDC5-\uDDC8\uDDCD-\uDDCF\uDDDB\uDDDD-\uDDFF\uDE12\uDE38-\uDE3D\uDE3F-\uDE7F\uDE87\uDE89\uDE8E\uDE9E\uDEA9-\uDEAF\uDEEB-\uDEEF\uDEFA-\uDEFF\uDF04\uDF0D\uDF0E\uDF11\uDF12\uDF29\uDF31\uDF34\uDF3A\uDF45\uDF46\uDF49\uDF4A\uDF4E\uDF4F\uDF51-\uDF56\uDF58-\uDF5C\uDF64\uDF65\uDF6D-\uDF6F\uDF75-\uDFFF]|\uD805[\uDC4B-\uDC4F\uDC5A-\uDC5D\uDC60-\uDC7F\uDCC6\uDCC8-\uDCCF\uDCDA-\uDD7F\uDDB6\uDDB7\uDDC1-\uDDD7\uDDDE-\uDDFF\uDE41-\uDE43\uDE45-\uDE4F\uDE5A-\uDE7F\uDEB9-\uDEBF\uDECA-\uDEFF\uDF1B\uDF1C\uDF2C-\uDF2F\uDF3A-\uDFFF]|\uD806[\uDC3B-\uDC9F\uDCEA-\uDCFE\uDD00-\uDD9F\uDDA8\uDDA9\uDDD8\uDDD9\uDDE2\uDDE5-\uDDFF\uDE3F-\uDE46\uDE48-\uDE4F\uDE9A-\uDE9C\uDE9E-\uDEBF\uDEF9-\uDFFF]|\uD807[\uDC09\uDC37\uDC41-\uDC4F\uDC5A-\uDC71\uDC90\uDC91\uDCA8\uDCB7-\uDCFF\uDD07\uDD0A\uDD37-\uDD39\uDD3B\uDD3E\uDD48-\uDD4F\uDD5A-\uDD5F\uDD66\uDD69\uDD8F\uDD92\uDD99-\uDD9F\uDDAA-\uDEDF\uDEF7-\uDFFF]|\uD808[\uDF9A-\uDFFF]|\uD809[\uDC6F-\uDC7F\uDD44-\uDFFF]|[\uD80A\uD80B\uD80E-\uD810\uD812-\uD819\uD823-\uD82B\uD82D\uD82E\uD830-\uD833\uD837\uD839\uD83D-\uD83F\uD87B-\uD87D\uD87F-\uDB3F\uDB41-\uDBFF][\uDC00-\uDFFF]|\uD80D[\uDC2F-\uDFFF]|\uD811[\uDE47-\uDFFF]|\uD81A[\uDE39-\uDE3F\uDE5F\uDE6A-\uDECF\uDEEE\uDEEF\uDEF5-\uDEFF\uDF37-\uDF3F\uDF44-\uDF4F\uDF5A-\uDF62\uDF78-\uDF7C\uDF90-\uDFFF]|\uD81B[\uDC00-\uDE3F\uDE80-\uDEFF\uDF4B-\uDF4E\uDF88-\uDF8E\uDFA0-\uDFDF\uDFE2\uDFE4-\uDFFF]|\uD821[\uDFF8-\uDFFF]|\uD822[\uDEF3-\uDFFF]|\uD82C[\uDD1F-\uDD4F\uDD53-\uDD63\uDD68-\uDD6F\uDEFC-\uDFFF]|\uD82F[\uDC6B-\uDC6F\uDC7D-\uDC7F\uDC89-\uDC8F\uDC9A-\uDC9C\uDC9F-\uDFFF]|\uD834[\uDC00-\uDD64\uDD6A-\uDD6C\uDD73-\uDD7A\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDE41\uDE45-\uDFFF]|\uD835[\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3\uDFCC\uDFCD]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85-\uDE9A\uDEA0\uDEB0-\uDFFF]|\uD838[\uDC07\uDC19\uDC1A\uDC22\uDC25\uDC2B-\uDCFF\uDD2D-\uDD2F\uDD3E\uDD3F\uDD4A-\uDD4D\uDD4F-\uDEBF\uDEFA-\uDFFF]|\uD83A[\uDCC5-\uDCCF\uDCD7-\uDCFF\uDD4C-\uDD4F\uDD5A-\uDFFF]|\uD83B[\uDC00-\uDDFF\uDE04\uDE20\uDE23\uDE25\uDE26\uDE28\uDE33\uDE38\uDE3A\uDE3C-\uDE41\uDE43-\uDE46\uDE48\uDE4A\uDE4C\uDE50\uDE53\uDE55\uDE56\uDE58\uDE5A\uDE5C\uDE5E\uDE60\uDE63\uDE65\uDE66\uDE6B\uDE73\uDE78\uDE7D\uDE7F\uDE8A\uDE9C-\uDEA0\uDEA4\uDEAA\uDEBC-\uDFFF]|\uD83C[\uDC00-\uDD2F\uDD4A-\uDD4F\uDD6A-\uDD6F\uDD8A-\uDFFF]|\uD869[\uDED7-\uDEFF]|\uD86D[\uDF35-\uDF3F]|\uD86E[\uDC1E\uDC1F]|\uD873[\uDEA2-\uDEAF]|\uD87A[\uDFE1-\uDFFF]|\uD87E[\uDE1E-\uDFFF]|\uDB40[\uDC00-\uDCFF\uDDF0-\uDFFF]/g},17753:function(e,a,t){"use strict";t.d(a,{$:function(){return W}});var n=t(27378),l=t(88371),r=t(85767),i=t(8850),o=t(42982),u=t(11693),d=t(6057),s=t(41275),p=t(85136),m=t(32043),c=t(21221);function f(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return h(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return h(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function h(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var y=Object.defineProperty,b=Object.getOwnPropertySymbols,g=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,q=function(e,a,t){return a in e?y(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},V=function(e,a){for(var t in a||(a={}))g.call(a,t)&&q(e,t,a[t]);if(b)for(var n,l=f(b(a));!(n=l()).done;){t=n.value;v.call(a,t)&&q(e,t,a[t])}return e},w=function(e,a){var t={};for(var n in e)g.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&b)for(var l,r=f(b(e));!(l=r()).done;){n=l.value;a.indexOf(n)<0&&v.call(e,n)&&(t[n]=e[n])}return t};function D(e){var a=e,t=a.icon,l=w(a,["icon"]);return n.createElement(u.z,V({component:"a",target:"_blank",rel:"noopener noreferrer",leftIcon:t,styles:function(e){return{root:{border:0,height:(0,d.h)(42),paddingLeft:(0,d.h)(20),paddingRight:(0,d.h)(20)},leftIcon:{marginRight:e.spacing.md}}}},l))}function C(e){var a=e,t=a.sx,l=w(a,["sx"]);return n.createElement(D,V({sx:[function(e){return V({backgroundColor:p.$.discordColor},e.fn.hover({backgroundColor:e.fn.lighten(p.$.discordColor,.1)}))}].concat((0,o.Z)((0,s.R)(t))),icon:n.createElement(m.D,{size:16}),href:p.$.discordLink},l),"Join Discord community")}function x(e){var a=e,t=a.sx,l=w(a,["sx"]);return n.createElement(D,V({sx:[function(e){return V({backgroundColor:p.$.twitterColor},e.fn.hover({backgroundColor:e.fn.lighten(p.$.twitterColor,.1)}))}].concat((0,o.Z)((0,s.R)(t))),icon:n.createElement(c.Z,{size:16}),href:p.$.twitterLink},l),"Follow Mantine on Twitter")}var P=t(82880),S=t(71082),k=t(21658),F=(0,k.k)((function(e){var a;return{wrapper:(a={"& + &":{marginLeft:(0,d.h)(60)}},a["@media (max-width: "+(0,d.em)(1e3)+")"]={"& + &":{marginLeft:(0,d.h)(40)}},a),link:{display:"block",color:"dark"===e.colorScheme?e.colors.dark[1]:e.colors.gray[6],fontSize:e.fontSizes.sm,paddingTop:(0,d.h)(3),paddingBottom:(0,d.h)(3),"&:hover":{textDecoration:"underline"}},title:{fontSize:e.fontSizes.lg,fontWeight:700,fontFamily:"Greycliff CF, "+e.fontFamily,marginBottom:"calc("+e.spacing.xs+" / 2)",color:"dark"===e.colorScheme?e.white:e.black}}}));function R(e){var a=e.data,t=e.title,l=F().classes,i=a.map((function(e,a){var t="gatsby"===e.type?{to:e.link}:{href:e.link};return n.createElement(r.x,Object.assign({className:l.link,component:"gatsby"===e.type?S.Link:"a"},t,{key:a}),e.label)}));return n.createElement("div",{className:l.wrapper},n.createElement(r.x,{className:l.title},t),i)}var A=[{title:"About",data:[{type:"gatsby",label:"Contribute",link:"/pages/contributing/"},{type:"gatsby",label:"About Mantine",link:"/pages/about/"},{type:"gatsby",label:"Changelog",link:"/pages/changelog/"},{type:"link",label:"Releases",link:p.$.gitHubLinks.releases}]},{title:"Community",data:[{type:"link",label:"Chat on Discord",link:p.$.discordLink},{type:"link",label:"Follow on Twitter",link:p.$.twitterLink},{type:"link",label:"Follow on Github",link:"https://github.com/rtivital"},{type:"link",label:"GitHub discussions",link:p.$.gitHubLinks.discussions}]},{title:"Project",data:[{type:"link",label:"Mantine UI",link:p.$.uiLink},{type:"link",label:"Documentation",link:p.$.docsLink},{type:"link",label:"Github organization",link:p.$.gitHubLinks.organization},{type:"link",label:"npm organization",link:p.$.npmLink}]}],N=t(4942),I=t(29090),E=t(43361);function L(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function O(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?L(Object(t),!0).forEach((function(a){(0,N.Z)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):L(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var M=(0,d.h)(400),T=(0,d.h)(460),z=(0,d.h)(320),B=(0,k.k)((function(e){var a,t,n,l,r,i,o,u;return{spacer:(a={height:M},a["@media (max-width: "+(0,d.em)(800)+")"]={height:T},a["@media (max-width: "+(0,d.em)(640)+")"]={height:z},a),wrapper:(t={backgroundColor:"dark"===e.colorScheme?e.colors.dark[8]:e.colors.gray[0],position:"fixed",bottom:0,left:0,right:0,height:M},t["@media (max-width: "+(0,d.em)(800)+")"]={height:T},t["@media (max-width: "+(0,d.em)(640)+")"]={height:z},t),withNavbar:(n={paddingLeft:"calc("+(0,d.h)(I.aO)+" + "+e.spacing.md+" * 2)",paddingRight:"calc("+e.spacing.md+" * 2)"},n["@media (max-width: "+(0,d.em)(E.Bs)+")"]={paddingLeft:"calc("+(0,d.h)(I.aO)+" + "+e.spacing.md+")",paddingRight:e.spacing.md},n["@media (max-width: "+(0,d.em)(I.jO)+")"]={paddingLeft:e.spacing.md,paddingRight:e.spacing.md},n),inner:(l={paddingTop:"calc("+e.spacing.xl+" * 2)",paddingBottom:"calc("+e.spacing.xl+" * 2)",display:"flex",justifyContent:"space-between"},l["@media (max-width: "+(0,d.em)(1e3)+")"]={flexDirection:"column"},l["@media (max-width: "+(0,d.em)(640)+")"]={paddingBottom:e.spacing.md},l),logoSection:(r={maxWidth:(0,d.h)(300)},r["@media (max-width: "+(0,d.em)(1e3)+")"]={marginBottom:e.spacing.xl},r["@media (max-width: "+(0,d.em)(640)+")"]={marginBottom:0},r),description:{marginTop:e.spacing.xs,color:"dark"===e.colorScheme?e.colors.dark[2]:e.colors.gray[6]},title:{marginBottom:e.spacing.sm,lineHeight:1},afterFooter:{borderTop:(0,d.h)(1)+" solid "+("dark"===e.colorScheme?e.colors.dark[4]:e.colors.gray[2]),paddingTop:e.spacing.md},afterFooterNote:{color:"dark"===e.colorScheme?e.colors.dark[2]:e.colors.gray[6],"& a":O(O({},e.fn.focusStyles()),{},{color:"dark"===e.colorScheme?e.colors.dark[2]:e.colors.gray[6]})},groups:(i={display:"flex"},i["@media (max-width: "+(0,d.em)(640)+")"]={display:"none"},i),social:(o={display:"flex"},o["@media (max-width: "+(0,d.em)(640)+")"]={display:"block"},o),socialButton:(u={},u["@media (max-width: "+(0,d.em)(640)+")"]={flex:1,width:"100%",marginLeft:0,marginTop:e.spacing.md},u)}}));function W(e){var a,t=e.withNavbar,o=B(),u=o.classes,d=o.cx,s=A.map((function(e){return n.createElement(R,{data:e.data,title:e.title,key:e.title})}));return n.createElement(n.Fragment,null,n.createElement("div",{className:u.spacer}),n.createElement("div",{className:d(u.wrapper,(a={},a[u.withNavbar]=t,a))},n.createElement(l.W,{size:1100},n.createElement("div",{className:u.inner},n.createElement("div",{className:u.logoSection},n.createElement(P.T,null),n.createElement(r.x,{className:u.description,size:"sm"},"Build fully functional accessible web applications faster than ever")),n.createElement("div",{className:u.groups},s)),n.createElement("div",{className:u.afterFooter},n.createElement(i.Z,{position:"apart"},n.createElement(r.x,{size:"xs",className:u.afterFooterNote},"Built by ",n.createElement("a",{href:"https://github.com/rtivital"},"Vitaly Rtishchev")," and"," ",n.createElement("a",{href:"https://github.com/mantinedev/mantine/graphs/contributors"},"these awesome people")),n.createElement("div",{className:u.social},n.createElement(C,{className:u.socialButton}),n.createElement(x,{className:u.socialButton,ml:"md"})))))))}},11954:function(e,a,t){"use strict";function n(e,a){return"text"===a?"linear-gradient(52deg, "+e.colors.blue["dark"===e.colorScheme?5:7]+" 3%, "+e.colors.cyan["dark"===e.colorScheme?4:5]+" 97%)":"linear-gradient(52deg, "+e.colors.blue[(e.colorScheme,7)]+" 3%, "+e.colors.cyan["dark"===e.colorScheme?7:5]+" 97%)"}t.d(a,{u:function(){return n}})},43361:function(e,a,t){"use strict";t.d(a,{Bs:function(){return n},x6:function(){return l},pp:function(){return r},s$:function(){return i},v_:function(){return o}});var n=1080,l=260,r=820,i=46,o=38},86560:function(e,a,t){"use strict";t.d(a,{y:function(){return l}});var n=t(27378);function l(e){var a=e.title,t=e.description,l=e.disableTitleTemplate,r=t||"React components and hooks library with native dark theme support and focus on usability, accessibility and developer experience";return n.createElement(n.Fragment,null,n.createElement("title",null,l?a:a+" | Mantine"),n.createElement("meta",{name:"viewport",content:"width=device-width, user-scalable=no"}),n.createElement("meta",{name:"description",content:r}),n.createElement("meta",{name:"og:title",content:a}),n.createElement("meta",{name:"og:image",content:"https://raw.githubusercontent.com/mantinedev/mantine/master/.demo/Hero.png"}),n.createElement("meta",{name:"og:image:width",content:"1280"}),n.createElement("meta",{name:"og:image:height",content:"640"}),n.createElement("meta",{name:"og:description",content:r}),n.createElement("meta",{name:"og:type",content:"website"}),n.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),n.createElement("meta",{name:"twitter:creator",content:"@mantinedev"}),n.createElement("meta",{name:"twitter:title",content:a}),n.createElement("meta",{name:"twitter:description",content:r}))}},91561:function(e,a,t){"use strict";t.r(a),t.d(a,{Head:function(){return il},default:function(){return rl}});var n={};t.r(n),t.d(n,{Accordion:function(){return ge},Alert:function(){return ve},AppShell:function(){return qe},Autocomplete:function(){return Ae},Avatar:function(){return Ne},Badge:function(){return Ie},Blockquote:function(){return Ee},Breadcrumbs:function(){return Le},Burger:function(){return Oe},Button:function(){return Me.z},Calendar:function(){return Vn},Carousel:function(){return Yn},Checkbox:function(){return Te},Chip:function(){return ze},ColorInput:function(){return Xe},ColorPicker:function(){return Be},DateInput:function(){return kn},DatePicker:function(){return Cn},DatePickerInput:function(){return Sn},DateTimePicker:function(){return Fn},Dialog:function(){return _e},Divider:function(){return Je},Drawer:function(){return Qe},Dropzone:function(){return Bn},DropzoneFullScreen:function(){return Wn},FileInput:function(){return pa},HoverCard:function(){return ma},Image:function(){return ca},Indicator:function(){return fa},Input:function(){return Ve},InputWrapper:function(){return we},JsonInput:function(){return Da},List:function(){return Ca},Menu:function(){return xa},Modal:function(){return Pa},MonthPicker:function(){return Dn},MonthPickerInput:function(){return Pn},MultiSelect:function(){return Oa},NativeSelect:function(){return Ya},NavLink:function(){return Ka},Notification:function(){return Ga},NumberInput:function(){return lt},Pagination:function(){return rt},PasswordInput:function(){return Ct},PinInput:function(){return Nt},Popover:function(){return We},Prism:function(){return jn},Progress:function(){return It},Radio:function(){return Lt},RadioGroup:function(){return Et},RangeSlider:function(){return $t.U},Rating:function(){return Ot},RichTextEditor:function(){return Un},RingProgress:function(){return Mt},ScrollArea:function(){return Tt},SegmentedControl:function(){return zt},Select:function(){return Zt},Slider:function(){return $t.i},Spoiler:function(){return Xt},SpotlightProvider:function(){return Hn},Stepper:function(){return _t},Switch:function(){return Jt},Tabs:function(){return Qt},TextInput:function(){return ft},Textarea:function(){return en},TimeInput:function(){return Rn},Timeline:function(){return an},Tooltip:function(){return tn},TransferList:function(){return nn},YearPicker:function(){return wn},YearPickerInput:function(){return xn}});var l=t(42982),r=t(27378),i=t(86560),o=t(77757),u=t(48689),d=t(85767),s=t(6057),p=t(91594),m=t(60198),c=t(14355),f=t(17782),h=(0,f.Z)("pencil","IconPencil",[["path",{d:"M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]]),y=(0,f.Z)("license","IconLicense",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]]),b=t(71082),g=t(21658),v=(0,g.k)((function(e){var a;return{item:{display:"flex",alignItems:"center",minHeight:(0,s.h)(20),overflowX:"auto","& + &":{marginTop:e.spacing.xs}},label:(a={color:"dark"===e.colorScheme?e.colors.dark[2]:e.colors.gray[6],width:(0,s.h)(100),height:(0,s.h)(20),lineHeight:(0,s.h)(20)},a["@media (max-width: "+(0,s.em)(500)+")"]={display:"none"},a)}}));function q(e){var a=e.label,t=e.children,n=e.align,l=v().classes;return r.createElement("div",{className:l.item,style:{alignItems:n}},r.createElement(d.x,{className:l.label,size:"sm"},a),t)}var V=t(90821),w=t(1636),D=t(57483),C=t(66847),x=t(4942);function P(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function S(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?P(Object(t),!0).forEach((function(a){(0,x.Z)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):P(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var k=(0,g.k)((function(e){return{wrapper:{display:"flex",alignItems:"center","& + &":{marginTop:(0,s.h)(5)}},icon:{marginRight:e.spacing.sm,marginTop:(0,s.h)(1)},code:{marginBottom:0,cursor:"pointer",paddingLeft:0,marginLeft:0},copy:S(S({},e.fn.focusStyles()),{},{padding:0,border:0,appearance:"none",backgroundColor:"transparent",textAlign:"left",display:"block",width:"100%",flex:1,overflowX:"hidden",WebkitTapHighlightColor:"transparent"})}}));function F(e){var a=e.code,t=e.icon,n=e.language,l=(0,w.V)(),i=k().classes,o=(0,D.a)("(max-width: "+(0,s.em)(500)+")");return r.createElement("div",{className:i.wrapper},t&&r.createElement("div",{className:i.icon},t),r.createElement(V.u,{label:l.copied?"Copied":"Copy",position:"right",transition:"fade",withArrow:!0,arrowSize:6,offset:10,color:l.copied?"teal":void 0,sx:{flex:1},disabled:o},r.createElement("button",{className:i.copy,type:"button",onClick:function(){return l.copy(a)}},r.createElement(C.p,{className:i.code,language:n||"tsx",styles:{code:{padding:0,margin:0},line:{padding:0}},noCopy:!0},a))))}function R(e){var a=e.code;return r.createElement(q,{label:"Import"},r.createElement(F,{code:a}))}var A=t(39505),N=(0,g.k)((function(e){return{wrapper:{display:"flex",alignItems:"center"},link:{color:"dark"===e.colorScheme?e.colors.dark[0]:e.colors.gray[9],display:"flex",alignItems:"center",lineHeight:1},icon:{marginRight:(0,s.h)(12),display:"flex",alignItems:"center"}}}));function I(e){var a=e.label,t=e.icon,n=e.children,l=e.link,i=N().classes;return r.createElement(q,{label:a},r.createElement("div",{className:i.wrapper},r.createElement(A.e,{className:i.link,href:l,size:"sm"},r.createElement("div",{className:i.icon},t),n)))}var E=t(11954),L=t(43361),O=(0,g.k)((function(e){var a,t,n,l;return{wrapper:(a={position:"relative",zIndex:4,backgroundColor:"dark"===e.colorScheme?e.colors.dark[8]:e.colors.gray[0],paddingLeft:"calc("+e.spacing.xl+" * 2)",paddingRight:"calc("+e.spacing.xl+" * 2)"},a["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.xl,paddingRight:e.spacing.xl},a),header:(t={paddingTop:(0,s.h)(50),maxWidth:(0,s.h)(1082),marginLeft:"auto",marginRight:"auto",paddingBottom:"calc("+e.spacing.xl+" * 1.5)"},t["@media (max-width: "+(0,s.em)(L.Bs)+")"]={maxWidth:"100%",paddingRight:0,paddingBottom:e.spacing.xl},t),withTabs:{paddingBottom:"calc("+e.spacing.xl+" * 1.5)"},title:(n={fontSize:(0,s.h)(44),marginBottom:"calc("+e.spacing.xs+" / 2)",fontWeight:900,color:"dark"===e.colorScheme?e.white:e.black,display:"flex",alignItems:"center",gap:e.spacing.xl},n["@media (max-width: "+(0,s.em)(L.Bs)+")"]={fontSize:(0,s.h)(32),lineHeight:1.2},n),description:(l={maxWidth:(0,s.h)(450),color:"dark"===e.colorScheme?e.colors.dark[1]:e.colors.gray[6],marginBottom:e.spacing.xl},l["@media (max-width: "+(0,s.em)(L.Bs)+")"]={fontSize:e.fontSizes.md},l)}}));function M(e){var a,t=e.frontmatter,n=O(),l=n.classes,i=n.cx,f=Array.isArray(t.props);return!!(t.import||t.source||t.installation)||f||t.release?r.createElement("div",{className:l.wrapper},r.createElement("div",{className:i(l.header,(a={},a[l.withTabs]=f,a))},r.createElement(o.D,{className:l.title},t.pageTitle||t.title,t.polymorphic&&r.createElement(u.C,{component:b.Link,to:"/guides/polymorphic/",variant:"gradient",sx:function(e){return{backgroundImage:(0,E.u)(e,"bg"),cursor:"pointer"}}},"polymorphic")),r.createElement(d.x,{size:"lg",className:l.description},t.description),t.import&&r.createElement(R,{code:t.import}),t.source&&r.createElement(I,{label:"Source",icon:r.createElement(p.E,{size:(0,s.h)(14)}),link:"https://github.com/mantinedev/mantine/blob/master/src/"+t.source},"View source code"),t.release&&r.createElement(I,{label:"Source code",icon:r.createElement(p.E,{size:(0,s.h)(14)}),link:t.release},"Release on GitHub"),t.date&&r.createElement(I,{label:"Release date",icon:r.createElement(c.Z,{size:(0,s.h)(14),stroke:1.5}),link:t.release},t.date),t.docs&&r.createElement(I,{label:"Docs",icon:r.createElement(h,{size:(0,s.h)(14),stroke:1.5}),link:"https://github.com/mantinedev/mantine/blob/master/docs/src/docs/"+t.docs},"Edit this page"),t.package&&r.createElement(I,{label:"Package",icon:r.createElement(m._,{size:(0,s.h)(14)}),link:"https://www.npmjs.com/package/"+t.package.replace("mantine-","@mantine/")},t.package.replace("mantine-","@mantine/")),t.license&&r.createElement(I,{label:"License",icon:r.createElement(y,{size:(0,s.h)(14),stroke:1.5}),link:"https://github.com/mantinedev/mantine/blob/master/LICENSE"},"MIT"))):null}var T=t(29499),z=t(10312),B=t(14466),W=t(34124),j=t(21955),U=t(26311),H=t(73869),Y=t(52519),K=t(78260),G=t(16272);function Z(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function $(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?Z(Object(t),!0).forEach((function(a){(0,x.Z)(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Z(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var X=(0,g.k)((function(e){var a;return{control:$($({},e.fn.focusStyles()),{},{display:"flex",alignItems:"center",textDecoration:"none",justifyContent:"space-between",color:"dark"===e.colorScheme?e.white:e.black,padding:e.spacing.md,borderRadius:e.radius.md,backgroundColor:"dark"===e.colorScheme?e.colors.dark[6]:e.white,border:(0,s.h)(1)+" solid "+("dark"===e.colorScheme?e.colors.dark[4]:e.colors.gray[3]),transition:"box-shadow 100ms ease, transform 100ms ease"},e.fn.hover({backgroundColor:"dark"===e.colorScheme?e.colors.dark[5]:e.white,boxShadow:e.shadows.md,transform:"dark"===e.colorScheme?"none":"scale(1.01)"})),body:{ref:(0,G.A)("body")},next:(a={},a["& ."+(0,G.A)("body")]={marginRight:e.spacing.md},a)}}));function _(e){var a=e.data,t=e.type,n=e.className,l=X(),i=l.classes,o=l.cx;return r.createElement(b.Link,{to:a.slug,className:o(i.control,i[t],n)},"prev"===t&&r.createElement(Y.Z,{size:(0,s.h)(22),stroke:1.5}),r.createElement("div",{className:i.body},r.createElement(d.x,{size:"lg",align:"next"===t?"left":"right"},"next"===t?"Up next":"Go back"),r.createElement(d.x,{color:"dimmed",size:"sm",align:"next"===t?"left":"right"},a.title," – ",a.package||(0,H.j)(a.group))),"next"===t&&r.createElement(K.Z,{size:(0,s.h)(22),stroke:1.5}))}function J(e){var a=e.siblings;return r.createElement(U.M,{mt:40,cols:2,breakpoints:[{maxWidth:1e3,cols:1}]},a.prev&&r.createElement(_,{type:"prev",data:a.prev}),a.next&&r.createElement(_,{type:"next",data:a.next}))}var Q=t(66794),ee=t.n(Q),ae=t(24976),te=t(36317),ne=t(34422),le=(0,g.k)((function(e){var a;return{wrapper:(a={boxSizing:"border-box",paddingLeft:e.spacing.md,position:"sticky",top:e.spacing.xl,right:0,paddingTop:(0,s.h)(55),flex:"0 0 "+(0,s.h)(L.x6-20)},a["@media (max-width: "+(0,s.em)(L.Bs)+")"]={display:"none"},a),withTabs:{paddingTop:0,top:"calc("+(0,s.h)(60)+" + "+e.spacing.xl+")"},inner:{paddingTop:0,paddingBottom:e.spacing.xl,paddingLeft:e.spacing.md,display:"flex",flexDirection:"column",justifyContent:"space-between"},items:{borderLeft:(0,s.h)(1)+" solid "+("dark"===e.colorScheme?e.colors.dark[4]:e.colors.gray[3])},link:{display:"block",color:"dark"===e.colorScheme?e.colors.dark[1]:e.colors.gray[7],borderLeft:(0,s.h)(1)+" solid transparent",padding:(0,s.h)(8)+" "+e.spacing.md,marginLeft:-1},linkActive:{borderLeftColor:e.colors.blue[5],backgroundColor:"dark"===e.colorScheme?e.fn.rgba(e.colors.blue[9],.45):e.colors.blue[0],color:"dark"===e.colorScheme?e.colors.blue[1]:e.colors.blue[8]},header:{display:"flex",alignItems:"center",marginBottom:e.spacing.md},title:{marginLeft:e.spacing.md}}}));function re(e){return 0===e.length?-1:e.reduce((function(e,a,t){return Math.abs(e.position)<Math.abs(a.y)?e:{index:t,position:a.y}}),{index:0,position:e[0].y}).index}function ie(e){var a,t=e.headings,n=e.withTabs,l=(0,ae.rZ)(),i=le(),o=i.classes,u=i.cx,p=new(ee()),m=(0,r.useState)(0),c=m[0],f=m[1],h=(0,T.useLocation)().pathname,y=(0,r.useRef)([]),g=t.filter((function(e){return e.depth>1}));(0,r.useEffect)((function(){p.reset(),y.current=g.map((function(e){return document.getElementById(p.slug(e.value))}))}),[t]);var v=function(){f(re(y.current.map((function(e){return e.getBoundingClientRect()}))))};if((0,r.useEffect)((function(){return f(re(y.current.map((function(e){return e.getBoundingClientRect()})))),window.addEventListener("scroll",v),function(){return window.removeEventListener("scroll",v)}}),[]),0===g.length)return null;var q=g.map((function(e,a){var t,n=p.slug(e.value);return r.createElement(d.x,{key:n,component:"a",size:"sm",className:u(o.link,(t={},t[o.linkActive]=c===a,t)),href:"#"+n,sx:{paddingLeft:"calc("+(e.depth-1)+" * "+l.spacing.lg+")"},onClick:function(e){e.preventDefault(),(0,b.navigate)(h+"#"+n,{replace:!0})}},e.value)}));return r.createElement("nav",{className:u(o.wrapper,(a={},a[o.withTabs]=n,a))},r.createElement("div",{className:o.inner},r.createElement("div",null,r.createElement("div",{className:o.header},r.createElement(ne.Z,{size:20,stroke:1.5}),r.createElement(d.x,{className:o.title},"Table of contents")),r.createElement(te.x.Autosize,{mah:"calc(100vh - "+(0,s.h)(140)+")",type:"scroll",offsetScrollbars:!0},r.createElement("div",{className:o.items},q)))))}var oe=t(17753),ue=(0,g.k)((function(e){return{content:{minHeight:"calc(100vh - "+(0,s.h)(350)+")",position:"relative",zIndex:1,backgroundColor:"dark"===e.colorScheme?e.colors.dark[7]:e.white,boxShadow:"dark"===e.colorScheme?"none":e.shadows.sm,paddingBottom:(0,s.h)(80)}}}));function de(e){var a=e.children,t=ue().classes;return r.createElement(r.Fragment,null,r.createElement("div",{className:t.content},a),r.createElement(oe.$,{withNavbar:!0}))}var se=t(46821),pe=t(33599),me=t(80737),ce=JSON.parse('{"Accordion":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Accordion/Accordion.tsx","displayName":"@mantine/core/Accordion","props":{"chevron":{"defaultValue":null,"description":"Replaces chevron on all items","name":"chevron","required":false,"type":{"name":"ReactNode"}},"chevronPosition":{"defaultValue":null,"description":"Determines position of the chevron","name":"chevronPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"AccordionChevronPosition","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"chevronSize":{"defaultValue":null,"description":"Chevron size","name":"chevronSize","required":false,"type":{"name":"string | number"}},"children":{"defaultValue":null,"description":"Accordion content","name":"children","required":true,"type":{"name":"ReactNode"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string | string[]"}},"disableChevronRotation":{"defaultValue":null,"description":"Determines whether chevron rotation should be disabled","name":"disableChevronRotation","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Base id, used to generate ids that connect labels with controls, by default generated randomly","name":"id","required":false,"type":{"name":"string"}},"loop":{"defaultValue":null,"description":"Determines whether arrow key presses should loop though items (first to last and last to first)","name":"loop","required":false,"type":{"name":"boolean"}},"multiple":{"defaultValue":null,"description":"Determines whether multiple items can be opened at a time","name":"multiple","required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Callback for controlled component","name":"onChange","required":false,"type":{"name":"(value: AccordionValue<Multiple>) => void"}},"order":{"defaultValue":null,"description":"Heading order, has no effect on visuals","name":"order","required":false,"type":{"name":"2 | 3 | 4 | 5 | 6","raw":"AccordionHeadingOrder","value":[{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, ignored when variant=\\"default\\"","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms, set 0 to disable transitions","name":"transitionDuration","required":false,"type":{"name":"number"}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"string | string[]"}},"variant":{"defaultValue":null,"description":"Controls visuals","name":"variant","required":false,"type":{"name":"\\"default\\" | \\"contained\\" | \\"filled\\" | \\"separated\\"","raw":"AccordionVariant","value":[{"value":"\\"default\\""},{"value":"\\"contained\\""},{"value":"\\"filled\\""},{"value":"\\"separated\\""}]}}}},"Accordion.Panel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Accordion/Accordion.tsx","displayName":"Accordion.Panel","props":{"children":{"defaultValue":null,"description":"Panel content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"ActionIcon":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ActionIcon/ActionIcon.tsx","displayName":"@mantine/core/ActionIcon","props":{"children":{"defaultValue":null,"description":"Icon","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"Indicates disabled state","name":"disabled","required":false,"type":{"name":"boolean"}},"gradient":{"defaultValue":null,"description":"Gradient input, only used when variant=\\"gradient\\", theme.defaultGradient by default","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"loaderProps":{"defaultValue":null,"description":"Props added to Loader component (only visible when `loading` prop is set)","name":"loaderProps","required":false,"type":{"name":"LoaderProps"}},"loading":{"defaultValue":null,"description":"Indicates loading state","name":"loading","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Predefined button size or any valid CSS value to set width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Controls appearance, subtle by default","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"transparent\\" | \\"light\\" | \\"default\\" | \\"filled\\" | \\"gradient\\" | \\"subtle\\">"}}}},"Affix":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Affix/Affix.tsx","displayName":"@mantine/core/Affix","props":{"position":{"defaultValue":null,"description":"Affix position on screen, defaults to { bottom: 0, right: 0 }","name":"position","required":false,"type":{"name":"{ top?: string | number; left?: string | number; bottom?: string | number; right?: string | number; }"}},"target":{"defaultValue":null,"description":"Element where portal should be rendered, by default new div element is created and appended to document.body","name":"target","required":false,"type":{"name":"HTMLDivElement"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered within portal, defaults to true","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Root element z-index property","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Alert":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Alert/Alert.tsx","displayName":"@mantine/core/Alert","props":{"children":{"defaultValue":null,"description":"Alert message","name":"children","required":true,"type":{"name":"ReactNode"}},"closeButtonLabel":{"defaultValue":null,"description":"Close button aria-label","name":"closeButtonLabel","required":false,"type":{"name":"string"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Icon displayed next to the title","name":"icon","required":false,"type":{"name":"ReactNode"}},"onClose":{"defaultValue":null,"description":"Called when close button is clicked","name":"onClose","required":false,"type":{"name":"() => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"title":{"defaultValue":null,"description":"Alert title","name":"title","required":false,"type":{"name":"ReactNode"}},"variant":{"defaultValue":null,"description":"Controls Alert background, color and border styles, \\"light\\" by default","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"light\\" | \\"filled\\">"}},"withCloseButton":{"defaultValue":null,"description":"Determines whether close button should be displayed, false by default","name":"withCloseButton","required":false,"type":{"name":"boolean"}}}},"Anchor":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Anchor/Anchor.tsx","displayName":"@mantine/core/Anchor","props":{"align":{"defaultValue":null,"description":"Sets text-align css property","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"center\\" | \\"end\\" | \\"start\\" | \\"justify\\" | \\"match-parent\\"","raw":"TextAlign","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"center\\""},{"value":"\\"end\\""},{"value":"\\"start\\""},{"value":"\\"justify\\""},{"value":"\\"match-parent\\""}]}},"children":{"defaultValue":null,"description":"Text content","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors or any valid CSS color","name":"color","required":false,"type":{"name":"DefaultMantineColor | \\"dimmed\\""}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"inherit":{"defaultValue":null,"description":"Inherit font properties from parent element","name":"inherit","required":false,"type":{"name":"boolean"}},"inline":{"defaultValue":null,"description":"Sets line-height to 1 for centering","name":"inline","required":false,"type":{"name":"boolean"}},"italic":{"defaultValue":null,"description":"Adds font-style: italic style","name":"italic","required":false,"type":{"name":"boolean"}},"lineClamp":{"defaultValue":null,"description":"CSS -webkit-line-clamp property","name":"lineClamp","required":false,"type":{"name":"number"}},"size":{"defaultValue":null,"description":"Key of theme.fontSizes or any valid CSS value to set font-size","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"span":{"defaultValue":null,"description":"Shorthand for component=\\"span\\"","name":"span","required":false,"type":{"name":"boolean"}},"strikethrough":{"defaultValue":null,"description":"Add strikethrough styles","name":"strikethrough","required":false,"type":{"name":"boolean"}},"transform":{"defaultValue":null,"description":"Sets text-transform css property","name":"transform","required":false,"type":{"name":"\\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"none\\" | \\"capitalize\\" | \\"full-size-kana\\" | \\"full-width\\" | \\"lowercase\\" | \\"uppercase\\"","raw":"TextTransform","value":[{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"none\\""},{"value":"\\"capitalize\\""},{"value":"\\"full-size-kana\\""},{"value":"\\"full-width\\""},{"value":"\\"lowercase\\""},{"value":"\\"uppercase\\""}]}},"truncate":{"defaultValue":null,"description":"CSS truncate overflowing text with an ellipsis","name":"truncate","required":false,"type":{"name":"boolean"}},"underline":{"defaultValue":null,"description":"Underline the text","name":"underline","required":false,"type":{"name":"boolean"}},"weight":{"defaultValue":null,"description":"Sets font-weight css property","name":"weight","required":false,"type":{"name":"FontWeight"}}}},"AppShell":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AppShell/AppShell.tsx","displayName":"@mantine/core/AppShell","props":{"aside":{"defaultValue":null,"description":"<Aside /> component","name":"aside","required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"asideOffsetBreakpoint":{"defaultValue":null,"description":"Breakpoint at which Aside component should no longer be offset with padding-right, applicable only for fixed position","name":"asideOffsetBreakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"children":{"defaultValue":null,"description":"AppShell content","name":"children","required":true,"type":{"name":"ReactNode"}},"fixed":{"defaultValue":null,"description":"true to switch from static layout to fixed","name":"fixed","required":false,"type":{"name":"boolean"}},"footer":{"defaultValue":null,"description":"<Footer /> component","name":"footer","required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"header":{"defaultValue":null,"description":"<Header /> component","name":"header","required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"hidden":{"defaultValue":null,"description":"true to hide all AppShell parts and render only children","name":"hidden","required":false,"type":{"name":"boolean"}},"layout":{"defaultValue":null,"description":"Determines how Navbar and Aside components are positioned relative to Header and Footer components","name":"layout","required":false,"type":{"name":"\\"default\\" | \\"alt\\"","raw":"\\"default\\" | \\"alt\\"","value":[{"value":"\\"default\\""},{"value":"\\"alt\\""}]}},"navbar":{"defaultValue":null,"description":"<Navbar /> component","name":"navbar","required":false,"type":{"name":"ReactElement<any, string | JSXElementConstructor<any>>"}},"navbarOffsetBreakpoint":{"defaultValue":null,"description":"Breakpoint at which Navbar component should no longer be offset with padding-left, applicable only for fixed position","name":"navbarOffsetBreakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"padding":{"defaultValue":null,"description":"Content padding","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"zIndex":{"defaultValue":null,"description":"zIndex prop passed to Navbar and Header components","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"AspectRatio":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AspectRatio/AspectRatio.tsx","displayName":"@mantine/core/AspectRatio","props":{"ratio":{"defaultValue":null,"description":"Aspect ratio, e.g. 16 / 9, 4 / 3, 1920 / 1080","name":"ratio","required":true,"type":{"name":"number"}}}},"Autocomplete":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Autocomplete/Autocomplete.tsx","displayName":"@mantine/core/Autocomplete","props":{"data":{"defaultValue":null,"description":"Select data used to render items in dropdown","name":"data","required":true,"type":{"name":"(string | AutocompleteItem)[]"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled input defaultValue","name":"defaultValue","required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownComponent":{"defaultValue":null,"description":"Change dropdown component, can be used to add native scrollbars","name":"dropdownComponent","required":false,"type":{"name":"any"}},"dropdownPosition":{"defaultValue":null,"description":"Dropdown positioning behavior","name":"dropdownPosition","required":false,"type":{"name":"\\"bottom\\" | \\"top\\" | \\"flip\\"","raw":"\\"bottom\\" | \\"top\\" | \\"flip\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"top\\""},{"value":"\\"flip\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"filter":{"defaultValue":null,"description":"Function based on which items in dropdown are filtered","name":"filter","required":false,"type":{"name":"(value: string, item: AutocompleteItem) => boolean"}},"hoverOnSearchChange":{"defaultValue":null,"description":"Hovers the first result when input changes","name":"hoverOnSearchChange","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"initiallyOpened":{"defaultValue":null,"description":"Initial dropdown opened state","name":"initiallyOpened","required":false,"type":{"name":"boolean"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"itemComponent":{"defaultValue":null,"description":"Change item renderer","name":"itemComponent","required":false,"type":{"name":"FC<any>"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"limit":{"defaultValue":null,"description":"Limit amount of items displayed at a time for searchable select","name":"limit","required":false,"type":{"name":"number"}},"maxDropdownHeight":{"defaultValue":null,"description":"Maximum dropdown height","name":"maxDropdownHeight","required":false,"type":{"name":"string | number"}},"nothingFound":{"defaultValue":null,"description":"Nothing found label","name":"nothingFound","required":false,"type":{"name":"ReactNode"}},"onChange":{"defaultValue":null,"description":"Controlled input onChange handler","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"onDropdownClose":{"defaultValue":null,"description":"Called when dropdown is closed","name":"onDropdownClose","required":false,"type":{"name":"() => void"}},"onDropdownOpen":{"defaultValue":null,"description":"Called when dropdown is opened","name":"onDropdownOpen","required":false,"type":{"name":"() => void"}},"onItemSubmit":{"defaultValue":null,"description":"Called when item from dropdown was selected","name":"onItemSubmit","required":false,"type":{"name":"(item: AutocompleteItem) => void"}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"shadow":{"defaultValue":null,"description":"Dropdown shadow from theme or any value to set box-shadow","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"switchDirectionOnFlip":{"defaultValue":null,"description":"Whether to switch item order and keyboard navigation on dropdown position flip","name":"switchDirectionOnFlip","required":false,"type":{"name":"boolean"}},"transition":{"defaultValue":null,"description":"Dropdown body appear/disappear transition","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Dropdown body transition duration","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Dropdown body transition timing function, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Controlled input value","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Whether to render the dropdown in a Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Avatar":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Avatar/Avatar.tsx","displayName":"@mantine/core/Avatar","props":{"alt":{"defaultValue":null,"description":"Image alt text or title for placeholder variant","name":"alt","required":false,"type":{"name":"string"}},"children":{"defaultValue":null,"description":"Custom placeholder","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"gradient":{"defaultValue":null,"description":"Gradient input, only used when variant=\\"gradient\\", theme.defaultGradient by default","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"imageProps":{"defaultValue":null,"description":"<img /> element attributes","name":"imageProps","required":false,"type":{"name":"Record<string, any>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Avatar width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"src":{"defaultValue":null,"description":"Image url","name":"src","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Controls appearance","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"light\\" | \\"filled\\" | \\"gradient\\">"}}}},"BackgroundImage":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/BackgroundImage/BackgroundImage.tsx","displayName":"@mantine/core/BackgroundImage","props":{"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, 0 by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"src":{"defaultValue":null,"description":"Image url","name":"src","required":true,"type":{"name":"string"}}}},"Badge":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Badge/Badge.tsx","displayName":"@mantine/core/Badge","props":{"children":{"defaultValue":null,"description":"Badge label","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"fullWidth":{"defaultValue":null,"description":"Sets badge width to 100% of parent element, hides overflow text with text-overflow: ellipsis","name":"fullWidth","required":false,"type":{"name":"boolean"}},"gradient":{"defaultValue":null,"description":"Controls gradient, applied to gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"leftSection":{"defaultValue":null,"description":"Section rendered on the left side of label","name":"leftSection","required":false,"type":{"name":"ReactNode"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"rightSection":{"defaultValue":null,"description":"Section rendered on the right side of label","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":null,"description":"Badge height and font size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Controls appearance","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"light\\" | \\"filled\\" | \\"gradient\\" | \\"dot\\">"}}}},"Blockquote":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Blockquote/Blockquote.tsx","displayName":"@mantine/core/Blockquote","props":{"cite":{"defaultValue":null,"description":"Describe a reference to a cited quote","name":"cite","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Icon color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Icon, defaults to quote icon","name":"icon","required":false,"type":{"name":"ReactNode"}}}},"Box":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Box/Box.tsx","description":"","displayName":"@mantine/core/Box","props":{}},"Breadcrumbs":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Breadcrumbs/Breadcrumbs.tsx","displayName":"@mantine/core/Breadcrumbs","props":{"children":{"defaultValue":null,"description":"React nodes that should be separated","name":"children","required":true,"type":{"name":"ReactNode"}},"separator":{"defaultValue":null,"description":"Separator between breadcrumbs","name":"separator","required":false,"type":{"name":"ReactNode"}}}},"Burger":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Burger/Burger.tsx","displayName":"@mantine/core/Burger","props":{"color":{"defaultValue":null,"description":"Burger color value, not connected to theme.colors, defaults to theme.black with light color scheme and theme.white with dark","name":"color","required":false,"type":{"name":"string"}},"opened":{"defaultValue":null,"description":"Burger state: true for cross, false for burger","name":"opened","required":true,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined burger size or number to set width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}}}},"Button":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Button/Button.tsx","displayName":"@mantine/core/Button","props":{"children":{"defaultValue":null,"description":"Button label","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Button color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"compact":{"defaultValue":null,"description":"Reduces vertical and horizontal spacing","name":"compact","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"Disabled state","name":"disabled","required":false,"type":{"name":"boolean"}},"fullWidth":{"defaultValue":null,"description":"Sets button width to 100% of parent element","name":"fullWidth","required":false,"type":{"name":"boolean"}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"leftIcon":{"defaultValue":null,"description":"Adds icon before button label","name":"leftIcon","required":false,"type":{"name":"ReactNode"}},"loaderPosition":{"defaultValue":null,"description":"Loader position relative to button label","name":"loaderPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"center\\"","raw":"\\"left\\" | \\"right\\" | \\"center\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"center\\""}]}},"loaderProps":{"defaultValue":null,"description":"Props spread to Loader component","name":"loaderProps","required":false,"type":{"name":"LoaderProps"}},"loading":{"defaultValue":null,"description":"Indicate loading state","name":"loading","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"rightIcon":{"defaultValue":null,"description":"Adds icon after button label","name":"rightIcon","required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":null,"description":"Predefined button size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Button type attribute","name":"type","required":false,"type":{"name":"\\"button\\" | \\"reset\\" | \\"submit\\"","raw":"\\"button\\" | \\"reset\\" | \\"submit\\"","value":[{"value":"\\"button\\""},{"value":"\\"reset\\""},{"value":"\\"submit\\""}]}},"uppercase":{"defaultValue":null,"description":"Set text-transform to uppercase","name":"uppercase","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":null,"description":"Controls button appearance","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"white\\" | \\"light\\" | \\"default\\" | \\"filled\\" | \\"gradient\\" | \\"subtle\\">"}}}},"Card":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Card/Card.tsx","displayName":"@mantine/core/Card","props":{"children":{"defaultValue":null,"description":"Card content","name":"children","required":true,"type":{"name":"ReactNode"}},"padding":{"defaultValue":null,"description":"Card padding used to offset Card.Section, use it instead of p prop","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"shadow":{"defaultValue":null,"description":"Predefined box-shadow from theme.shadows (xs, sm, md, lg, xl) or any valid css box-shadow property","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"withBorder":{"defaultValue":null,"description":"Adds border styles","name":"withBorder","required":false,"type":{"name":"boolean"}}}},"Center":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Center/Center.tsx","displayName":"@mantine/core/Center","props":{"children":{"defaultValue":null,"description":"Content that should be centered vertically and horizontally","name":"children","required":true,"type":{"name":"ReactNode"}},"inline":{"defaultValue":null,"description":"Set to true to use inline-flex instead of flex","name":"inline","required":false,"type":{"name":"boolean"}}}},"Checkbox":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Checkbox/Checkbox.tsx","displayName":"@mantine/core/Checkbox","props":{"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"description":{"defaultValue":null,"description":"Description, displayed after the label","name":"description","required":false,"type":{"name":"ReactNode"}},"error":{"defaultValue":null,"description":"Error message displayed after the input","name":"error","required":false,"type":{"name":"ReactNode"}},"icon":{"defaultValue":null,"description":"Icon rendered when checkbox has checked or indeterminate state","name":"icon","required":false,"type":{"name":"FC<{ indeterminate: boolean; className: string; }>"}},"indeterminate":{"defaultValue":null,"description":"Indeterminate state of checkbox, if set, `checked` prop is ignored","name":"indeterminate","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Checkbox label","name":"label","required":false,"type":{"name":"ReactNode"}},"labelPosition":{"defaultValue":null,"description":"Position of the label","name":"labelPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Controls label font-size and checkbox width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"wrapperProps":{"defaultValue":null,"description":"Props added to the root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Chip":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Chip/Chip.tsx","displayName":"@mantine/core/Chip","props":{"checked":{"defaultValue":null,"description":"Checked state for controlled component","name":"checked","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Chip label","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Active color from theme, defaults to theme.primaryColor","name":"color","required":false,"type":{"name":"MantineColor"}},"defaultChecked":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultChecked","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Static id to bind input with label","name":"id","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Calls when checked state changes","name":"onChange","required":false,"type":{"name":"(checked: boolean) => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Predefined chip size","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Chip input type","name":"type","required":false,"type":{"name":"\\"checkbox\\" | \\"radio\\"","raw":"\\"checkbox\\" | \\"radio\\"","value":[{"value":"\\"checkbox\\""},{"value":"\\"radio\\""}]}},"variant":{"defaultValue":null,"description":"Controls chip appearance, defaults to filled with dark theme and to outline in light theme","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"light\\" | \\"filled\\">"}},"wrapperProps":{"defaultValue":null,"description":"Props spread to wrapper element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"CloseButton":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/CloseButton/CloseButton.tsx","displayName":"@mantine/core/CloseButton","props":{"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"Indicates disabled state","name":"disabled","required":false,"type":{"name":"boolean"}},"gradient":{"defaultValue":null,"description":"Gradient input, only used when variant=\\"gradient\\", theme.defaultGradient by default","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"iconSize":{"defaultValue":null,"description":"Width and height of X icon","name":"iconSize","required":false,"type":{"name":"string | number"}},"loaderProps":{"defaultValue":null,"description":"Props added to Loader component (only visible when `loading` prop is set)","name":"loaderProps","required":false,"type":{"name":"LoaderProps"}},"loading":{"defaultValue":null,"description":"Indicates loading state","name":"loading","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Predefined button size or any valid CSS value to set width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Controls appearance, subtle by default","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"transparent\\" | \\"light\\" | \\"default\\" | \\"filled\\" | \\"gradient\\" | \\"subtle\\">"}}}},"Code":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Code/Code.tsx","displayName":"@mantine/core/Code","props":{"block":{"defaultValue":null,"description":"True for code block, false for inline code","name":"block","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Code content","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Code color and background from theme, defaults to gray in light theme and to dark in dark theme","name":"color","required":false,"type":{"name":"MantineColor"}}}},"Collapse":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Collapse/Collapse.tsx","displayName":"@mantine/core/Collapse","props":{"animateOpacity":{"defaultValue":null,"description":"Should opacity be animated","name":"animateOpacity","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Content that should be collapsed","name":"children","required":true,"type":{"name":"ReactNode"}},"in":{"defaultValue":null,"description":"Opened state","name":"in","required":true,"type":{"name":"boolean"}},"onTransitionEnd":{"defaultValue":null,"description":"Called each time transition ends","name":"onTransitionEnd","required":false,"type":{"name":"() => void"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Transition timing function","name":"transitionTimingFunction","required":false,"type":{"name":"string"}}}},"ColorInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ColorInput/ColorInput.tsx","displayName":"@mantine/core/ColorInput","props":{"closeOnColorSwatchClick":{"defaultValue":null,"description":"Determines whether the dropdown should be closed when color swatch is clicked, false by default","name":"closeOnColorSwatchClick","required":false,"type":{"name":"boolean"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled component default value","name":"defaultValue","required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"disallowInput":{"defaultValue":null,"description":"Disallow free input","name":"disallowInput","required":false,"type":{"name":"boolean"}},"dropdownZIndex":{"defaultValue":null,"description":"Dropdown element z-index","name":"dropdownZIndex","required":false,"type":{"name":"number"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"eyeDropperIcon":{"defaultValue":null,"description":"Replaces default eye dropper icon","name":"eyeDropperIcon","required":false,"type":{"name":"ReactNode"}},"fixOnBlur":{"defaultValue":null,"description":"call onChange with last valid value onBlur","name":"fixOnBlur","required":false,"type":{"name":"boolean"}},"format":{"defaultValue":null,"description":"Color format","name":"format","required":false,"type":{"name":"\\"hex\\" | \\"hexa\\" | \\"rgba\\" | \\"rgb\\" | \\"hsl\\" | \\"hsla\\"","raw":"ColorFormat","value":[{"value":"\\"hex\\""},{"value":"\\"hexa\\""},{"value":"\\"rgba\\""},{"value":"\\"rgb\\""},{"value":"\\"hsl\\""},{"value":"\\"hsla\\""}]}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"onChange":{"defaultValue":null,"description":"Called when color changes","name":"onChange","required":false,"type":{"name":"(color: string) => void"}},"onChangeEnd":{"defaultValue":null,"description":"Called when user stops dragging thumb or changes value with arrows","name":"onChangeEnd","required":false,"type":{"name":"(color: string) => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"shadow":{"defaultValue":null,"description":"Dropdown box-shadow, key of theme.shadows","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"swatches":{"defaultValue":null,"description":"Predefined colors","name":"swatches","required":false,"type":{"name":"string[]"}},"swatchesPerRow":{"defaultValue":null,"description":"Number of swatches displayed in one row","name":"swatchesPerRow","required":false,"type":{"name":"number"}},"transition":{"defaultValue":null,"description":"Dropdown transition name or object","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Dropdown appear/disappear transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Dropdown transition timing function, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Controlled component value","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withEyeDropper":{"defaultValue":null,"description":"Determines whether eye dropper button should be displayed in the right section, true by default","name":"withEyeDropper","required":false,"type":{"name":"boolean"}},"withPicker":{"defaultValue":null,"description":"Set to false to display swatches only","name":"withPicker","required":false,"type":{"name":"boolean"}},"withPreview":{"defaultValue":null,"description":"Display swatch with color preview on the left side of input","name":"withPreview","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Whether to render the dropdown in a Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"ColorPicker":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ColorPicker/ColorPicker.tsx","displayName":"@mantine/core/ColorPicker","props":{"alphaLabel":{"defaultValue":null,"description":"Alpha slider aria-label","name":"alphaLabel","required":false,"type":{"name":"string"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled component default value","name":"defaultValue","required":false,"type":{"name":"string"}},"focusable":{"defaultValue":null,"description":"Should interactive elements be focusable","name":"focusable","required":false,"type":{"name":"boolean"}},"format":{"defaultValue":null,"description":"Color format","name":"format","required":false,"type":{"name":"\\"hex\\" | \\"hexa\\" | \\"rgba\\" | \\"rgb\\" | \\"hsl\\" | \\"hsla\\"","raw":"ColorFormat","value":[{"value":"\\"hex\\""},{"value":"\\"hexa\\""},{"value":"\\"rgba\\""},{"value":"\\"rgb\\""},{"value":"\\"hsl\\""},{"value":"\\"hsla\\""}]}},"fullWidth":{"defaultValue":null,"description":"Force picker to take 100% width of its container","name":"fullWidth","required":false,"type":{"name":"boolean"}},"hueLabel":{"defaultValue":null,"description":"Hue slider aria-label","name":"hueLabel","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when color changes","name":"onChange","required":false,"type":{"name":"(color: string) => void"}},"onChangeEnd":{"defaultValue":null,"description":"Called when user stops dragging thumb or changes value with arrows","name":"onChangeEnd","required":false,"type":{"name":"(color: string) => void"}},"onColorSwatchClick":{"defaultValue":null,"description":"Called when color swatch is clicked","name":"onColorSwatchClick","required":false,"type":{"name":"(color: string) => void"}},"saturationLabel":{"defaultValue":null,"description":"Saturation slider aria-label","name":"saturationLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Predefined component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"swatches":{"defaultValue":null,"description":"Predefined colors","name":"swatches","required":false,"type":{"name":"string[]"}},"swatchesPerRow":{"defaultValue":null,"description":"Number of swatches displayed in one row","name":"swatchesPerRow","required":false,"type":{"name":"number"}},"value":{"defaultValue":null,"description":"Controlled component value","name":"value","required":false,"type":{"name":"string"}},"withPicker":{"defaultValue":null,"description":"Set to false to display swatches only","name":"withPicker","required":false,"type":{"name":"boolean"}}}},"ColorSwatch":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ColorSwatch/ColorSwatch.tsx","displayName":"@mantine/core/ColorSwatch","props":{"children":{"defaultValue":null,"description":"ColorSwatch children","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Swatch background-color in any css valid format (hex, rgb, etc.)","name":"color","required":true,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Width and height","name":"size","required":false,"type":{"name":"string | number"}},"withShadow":{"defaultValue":null,"description":"Determines whether swatch should have inner shadow","name":"withShadow","required":false,"type":{"name":"boolean"}}}},"Container":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Container/Container.tsx","displayName":"@mantine/core/Container","props":{"fluid":{"defaultValue":null,"description":"If fluid is set to true, size prop is ignored and Container can expand to 100% of width","name":"fluid","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined container max-width or number for max-width","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sizes":{"defaultValue":null,"description":"Container sizes","name":"sizes","required":false,"type":{"name":"Record<MantineSize, string | number>"}}}},"CopyButton":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/CopyButton/CopyButton.tsx","displayName":"@mantine/core/CopyButton","props":{"children":{"defaultValue":null,"description":"Function called with current status","name":"children","required":true,"type":{"name":"(payload: { copied: boolean; copy(): void; }) => ReactNode"}},"timeout":{"defaultValue":null,"description":"Copied status timeout in ms","name":"timeout","required":false,"type":{"name":"number"}},"value":{"defaultValue":null,"description":"Value that should be copied to the clipboard","name":"value","required":true,"type":{"name":"string"}}}},"Dialog":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Dialog/Dialog.tsx","displayName":"@mantine/core/Dialog","props":{"children":{"defaultValue":null,"description":"Dialog content","name":"children","required":false,"type":{"name":"ReactNode"}},"keepMounted":{"defaultValue":null,"description":"If set dialog will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when close button is clicked","name":"onClose","required":false,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Opened state","name":"opened","required":true,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Dialog position (fixed in viewport)","name":"position","required":false,"type":{"name":"{ top?: string | number; left?: string | number; bottom?: string | number; right?: string | number; }"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"shadow":{"defaultValue":null,"description":"Predefined box-shadow from theme.shadows (xs, sm, md, lg, xl) or any valid css box-shadow property","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Dialog width","name":"size","required":false,"type":{"name":"string | number"}},"transition":{"defaultValue":null,"description":"Appear/disappear transition","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Duration in ms of modal transitions, set to 0 to disable all animations","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Transition timing function, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"withBorder":{"defaultValue":null,"description":"Adds border styles","name":"withBorder","required":false,"type":{"name":"boolean"}},"withCloseButton":{"defaultValue":null,"description":"Display close button at the top right corner","name":"withCloseButton","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":{"value":"getDefaultZIndex(\'modal\')"},"description":"Dialog container z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Divider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Divider/Divider.tsx","displayName":"@mantine/core/Divider","props":{"color":{"defaultValue":null,"description":"Key of theme.colors, defaults to \\"gray\\" in light color scheme and to \\"dark\\" in dark color scheme","name":"color","required":false,"type":{"name":"MantineColor"}},"label":{"defaultValue":null,"description":"Text inside the divider, only applicable when orientation=\\"horizontal\\"","name":"label","required":false,"type":{"name":"ReactNode"}},"labelPosition":{"defaultValue":null,"description":"Label position, only applicable when orientation=\\"horizontal\\"","name":"labelPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"center\\"","raw":"\\"left\\" | \\"right\\" | \\"center\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"center\\""}]}},"labelProps":{"defaultValue":null,"description":"Props added to the label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"orientation":{"defaultValue":null,"description":"Divider orientation","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"\\"horizontal\\" | \\"vertical\\"","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"size":{"defaultValue":null,"description":"Sets height when orientation=\\"horizontal\\" and width when orientation=\\"vertical\\"","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Controls appearance","name":"variant","required":false,"type":{"name":"Variants<\\"dashed\\" | \\"dotted\\" | \\"solid\\">"}}}},"Drawer":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Drawer/Drawer.tsx","displayName":"Drawer","props":{"children":{"defaultValue":null,"description":"Modal content","name":"children","required":false,"type":{"name":"ReactNode"}},"closeButtonProps":{"defaultValue":null,"description":"Props added to close button","name":"closeButtonProps","required":false,"type":{"name":"ModalBaseCloseButtonProps"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when modal/drawer is closed","name":"onClose","required":true,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Determines whether modal/drawer is opened","name":"opened","required":true,"type":{"name":"boolean"}},"overlayProps":{"defaultValue":null,"description":"Props added to Overlay component, use configure opacity, background color, styles and other properties","name":"overlayProps","required":false,"type":{"name":"ModalBaseOverlayProps"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"position":{"defaultValue":null,"description":"Side of the screen where drawer will be opened, \'left\' by default","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","raw":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""}]}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"scrollAreaComponent":{"defaultValue":null,"description":"Scroll area component, ScrollArea.Autosize by default","name":"scrollAreaComponent","required":false,"type":{"name":"ScrollAreaComponent"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"title":{"defaultValue":null,"description":"Modal title","name":"title","required":false,"type":{"name":"ReactNode"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"withCloseButton":{"defaultValue":null,"description":"Determines whether close button should be rendered, true by default","name":"withCloseButton","required":false,"type":{"name":"boolean"}},"withOverlay":{"defaultValue":null,"description":"Determines whether overlay should be rendered, true by default","name":"withOverlay","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"Drawer.Root":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Drawer/Drawer.tsx","displayName":"Drawer.Root","props":{"children":{"defaultValue":null,"description":"Child component","name":"children","required":false,"type":{"name":"ReactNode"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when modal/drawer is closed","name":"onClose","required":true,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Determines whether modal/drawer is opened","name":"opened","required":true,"type":{"name":"boolean"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"position":{"defaultValue":null,"description":"Side of the screen where drawer will be opened, \'left\' by default","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","raw":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""}]}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"scrollAreaComponent":{"defaultValue":null,"description":"Scroll area component, ScrollArea.Autosize by default","name":"scrollAreaComponent","required":false,"type":{"name":"ScrollAreaComponent"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"Drawer.NativeScrollArea":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Drawer/Drawer.tsx","description":"","displayName":"Drawer.NativeScrollArea","props":{}},"FileButton":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/FileButton/FileButton.tsx","displayName":"@mantine/core/FileButton","props":{"accept":{"defaultValue":null,"description":"File input accept attribute, for example, \\"image/png,image/jpeg\\"","name":"accept","required":false,"type":{"name":"string"}},"capture":{"defaultValue":null,"description":"Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute.","name":"capture","required":false,"type":{"name":"boolean | \\"user\\" | \\"environment\\""}},"children":{"defaultValue":null,"description":"Function that receives button props and returns react node that should be rendered","name":"children","required":true,"type":{"name":"(props: { onClick(): void; }) => ReactNode"}},"disabled":{"defaultValue":null,"description":"Disables file picker","name":"disabled","required":false,"type":{"name":"boolean"}},"form":{"defaultValue":null,"description":"Input form attribute","name":"form","required":false,"type":{"name":"string"}},"inputProps":{"defaultValue":null,"description":"Spreads props to input element used to capture files","name":"inputProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, \\"key\\" | keyof InputHTMLAttributes<...>>"}},"multiple":{"defaultValue":null,"description":"Determines whether user can pick more than one file","name":"multiple","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Input name attribute","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when files are picked","name":"onChange","required":true,"type":{"name":"(payload: Multiple extends true ? File[] : File) => void"}},"resetRef":{"defaultValue":null,"description":"Function that should be called when value changes to null or empty array","name":"resetRef","required":false,"type":{"name":"ForwardedRef<() => void>"}}}},"FileInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/FileInput/FileInput.tsx","displayName":"@mantine/core/FileInput","props":{"accept":{"defaultValue":null,"description":"File input accept attribute, for example, \\"image/png,image/jpeg\\"","name":"accept","required":false,"type":{"name":"string"}},"capture":{"defaultValue":null,"description":"Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute.","name":"capture","required":false,"type":{"name":"boolean | \\"user\\" | \\"environment\\""}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Allow to clear value","name":"clearable","required":false,"type":{"name":"boolean"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled input default value","name":"defaultValue","required":false,"type":{"name":"File"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"fileInputProps":{"defaultValue":null,"description":"Spreads props to input element used to capture files","name":"fileInputProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, \\"key\\" | keyof InputHTMLAttributes<...>>"}},"form":{"defaultValue":null,"description":"Input form attribute","name":"form","required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"multiple":{"defaultValue":null,"description":"Determines whether user can pick more than one file","name":"multiple","required":false,"type":{"name":"false"}},"name":{"defaultValue":null,"description":"Input name attribute","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when user picks files","name":"onChange","required":false,"type":{"name":"(payload: File) => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can change value","name":"readOnly","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Controlled input value","name":"value","required":false,"type":{"name":"File"}},"valueComponent":{"defaultValue":null,"description":"Current value renderer","name":"valueComponent","required":false,"type":{"name":"FC<{ value: File | File[]; }>"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Flex":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Flex/Flex.tsx","displayName":"@mantine/core/Flex","props":{"align":{"defaultValue":null,"description":"align-items CSS property","name":"align","required":false,"type":{"name":"SystemProp<AlignItems>"}},"columnGap":{"defaultValue":null,"description":"column-gap CSS property","name":"columnGap","required":false,"type":{"name":"SystemProp<SpacingValue>"}},"direction":{"defaultValue":null,"description":"flex-direction CSS property","name":"direction","required":false,"type":{"name":"SystemProp<FlexDirection>"}},"gap":{"defaultValue":null,"description":"gap CSS property","name":"gap","required":false,"type":{"name":"SystemProp<SpacingValue>"}},"justify":{"defaultValue":null,"description":"justify-content CSS property","name":"justify","required":false,"type":{"name":"SystemProp<JustifyContent>"}},"rowGap":{"defaultValue":null,"description":"row-gap CSS property","name":"rowGap","required":false,"type":{"name":"SystemProp<SpacingValue>"}},"wrap":{"defaultValue":null,"description":"flex-wrap CSS property","name":"wrap","required":false,"type":{"name":"SystemProp<FlexWrap>"}}}},"FocusTrap":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/FocusTrap/FocusTrap.tsx","displayName":"@mantine/core/FocusTrap","props":{"active":{"defaultValue":{"value":"true"},"description":"Determines whether focus should be trapped within child element","name":"active","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Element at which focus should be trapped, should support ref prop","name":"children","required":true,"type":{"name":"any"}},"refProp":{"defaultValue":{"value":"ref"},"description":"Prop that should be used to access component ref","name":"refProp","required":false,"type":{"name":"string"}}}},"Grid":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Grid/Grid.tsx","displayName":"@mantine/core/Grid","props":{"align":{"defaultValue":null,"description":"Set grid align-content property","name":"align","required":false,"type":{"name":"AlignContent"}},"children":{"defaultValue":null,"description":"<Col /> components only","name":"children","required":true,"type":{"name":"ReactNode"}},"columns":{"defaultValue":null,"description":"Amount of columns in each row","name":"columns","required":false,"type":{"name":"number"}},"grow":{"defaultValue":null,"description":"Should columns in the last row take 100% of grid width","name":"grow","required":false,"type":{"name":"boolean"}},"gutter":{"defaultValue":null,"description":"Spacing between columns, key of theme.spacing or number for value","name":"gutter","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"gutterLg":{"defaultValue":null,"description":"Gutter when screen size is larger than theme.breakpoints.lg","name":"gutterLg","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"gutterMd":{"defaultValue":null,"description":"Gutter when screen size is larger than theme.breakpoints.md","name":"gutterMd","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"gutterSm":{"defaultValue":null,"description":"Gutter when screen size is larger than theme.breakpoints.sm","name":"gutterSm","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"gutterXl":{"defaultValue":null,"description":"Gutter when screen size is larger than theme.breakpoints.xl","name":"gutterXl","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"gutterXs":{"defaultValue":null,"description":"Gutter when screen size is larger than theme.breakpoints.xs","name":"gutterXs","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"justify":{"defaultValue":null,"description":"Set grid justify-content property","name":"justify","required":false,"type":{"name":"JustifyContent"}}}},"Group":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Group/Group.tsx","displayName":"@mantine/core/Group","props":{"align":{"defaultValue":null,"description":"Defines align-items css property","name":"align","required":false,"type":{"name":"AlignItems"}},"grow":{"defaultValue":null,"description":"Defines flex-grow property for each element, true -> 1, false -> 0","name":"grow","required":false,"type":{"name":"boolean"}},"noWrap":{"defaultValue":null,"description":"Defined flex-wrap property","name":"noWrap","required":false,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Defines justify-content property","name":"position","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"center\\" | \\"apart\\"","raw":"GroupPosition","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"center\\""},{"value":"\\"apart\\""}]}},"spacing":{"defaultValue":null,"description":"Space between elements","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Highlight":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Highlight/Highlight.tsx","displayName":"@mantine/core/Highlight","props":{"align":{"defaultValue":null,"description":"Sets text-align css property","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"center\\" | \\"end\\" | \\"start\\" | \\"justify\\" | \\"match-parent\\"","raw":"TextAlign","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"center\\""},{"value":"\\"end\\""},{"value":"\\"start\\""},{"value":"\\"justify\\""},{"value":"\\"match-parent\\""}]}},"children":{"defaultValue":null,"description":"Full string part of which will be highlighted","name":"children","required":true,"type":{"name":"string"}},"color":{"defaultValue":null,"description":"Key of theme.colors or any valid CSS color","name":"color","required":false,"type":{"name":"DefaultMantineColor | \\"dimmed\\""}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"highlight":{"defaultValue":null,"description":"Substring or an array of substrings to highlight in children","name":"highlight","required":true,"type":{"name":"string | string[]"}},"highlightColor":{"defaultValue":null,"description":"Color from theme that is used for highlighting","name":"highlightColor","required":false,"type":{"name":"MantineColor"}},"highlightStyles":{"defaultValue":null,"description":"Styles applied to highlighted part","name":"highlightStyles","required":false,"type":{"name":"CSSObject | ((theme: MantineTheme) => CSSObject)"}},"inherit":{"defaultValue":null,"description":"Inherit font properties from parent element","name":"inherit","required":false,"type":{"name":"boolean"}},"inline":{"defaultValue":null,"description":"Sets line-height to 1 for centering","name":"inline","required":false,"type":{"name":"boolean"}},"italic":{"defaultValue":null,"description":"Adds font-style: italic style","name":"italic","required":false,"type":{"name":"boolean"}},"lineClamp":{"defaultValue":null,"description":"CSS -webkit-line-clamp property","name":"lineClamp","required":false,"type":{"name":"number"}},"size":{"defaultValue":null,"description":"Key of theme.fontSizes or any valid CSS value to set font-size","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"span":{"defaultValue":null,"description":"Shorthand for component=\\"span\\"","name":"span","required":false,"type":{"name":"boolean"}},"strikethrough":{"defaultValue":null,"description":"Add strikethrough styles","name":"strikethrough","required":false,"type":{"name":"boolean"}},"transform":{"defaultValue":null,"description":"Sets text-transform css property","name":"transform","required":false,"type":{"name":"\\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"none\\" | \\"capitalize\\" | \\"full-size-kana\\" | \\"full-width\\" | \\"lowercase\\" | \\"uppercase\\"","raw":"TextTransform","value":[{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"none\\""},{"value":"\\"capitalize\\""},{"value":"\\"full-size-kana\\""},{"value":"\\"full-width\\""},{"value":"\\"lowercase\\""},{"value":"\\"uppercase\\""}]}},"truncate":{"defaultValue":null,"description":"CSS truncate overflowing text with an ellipsis","name":"truncate","required":false,"type":{"name":"boolean"}},"underline":{"defaultValue":null,"description":"Underline the text","name":"underline","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":null,"description":"Link or text variant","name":"variant","required":false,"type":{"name":"Variants<\\"text\\" | \\"gradient\\">"}},"weight":{"defaultValue":null,"description":"Sets font-weight css property","name":"weight","required":false,"type":{"name":"FontWeight"}}}},"HoverCard":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/HoverCard/HoverCard.tsx","displayName":"@mantine/core/HoverCard","props":{"arrowOffset":{"defaultValue":null,"description":"Arrow offset","name":"arrowOffset","required":false,"type":{"name":"number"}},"arrowPosition":{"defaultValue":null,"description":"Arrow position *","name":"arrowPosition","required":false,"type":{"name":"\\"center\\" | \\"side\\"","raw":"ArrowPosition","value":[{"value":"\\"center\\""},{"value":"\\"side\\""}]}},"arrowRadius":{"defaultValue":null,"description":"Arrow border-radius","name":"arrowRadius","required":false,"type":{"name":"number"}},"arrowSize":{"defaultValue":null,"description":"Arrow size","name":"arrowSize","required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"HoverCard.Target and HoverCard.Dropdown components","name":"children","required":false,"type":{"name":"ReactNode"}},"closeDelay":{"defaultValue":null,"description":"Close delay in ms","name":"closeDelay","required":false,"type":{"name":"number"}},"disabled":{"defaultValue":null,"description":"If set, popover dropdown will not render","name":"disabled","required":false,"type":{"name":"boolean"}},"exitTransitionDuration":{"defaultValue":null,"description":"Exit transition duration in ms","name":"exitTransitionDuration","required":false,"type":{"name":"number"}},"initiallyOpened":{"defaultValue":null,"description":"Initial opened state","name":"initiallyOpened","required":false,"type":{"name":"boolean"}},"keepMounted":{"defaultValue":null,"description":"If set dropdown will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"middlewares":{"defaultValue":null,"description":"Floating ui middlewares to configure position handling","name":"middlewares","required":false,"type":{"name":"PopoverMiddlewares"}},"offset":{"defaultValue":null,"description":"Space between target element and dropdown","name":"offset","required":false,"type":{"name":"number"}},"onClose":{"defaultValue":null,"description":"Called when dropdown is closed","name":"onClose","required":false,"type":{"name":"() => void"}},"onOpen":{"defaultValue":null,"description":"Called when dropdown is opened","name":"onOpen","required":false,"type":{"name":"() => void"}},"onPositionChange":{"defaultValue":null,"description":"Called when dropdown position changes","name":"onPositionChange","required":false,"type":{"name":"(position: FloatingPosition) => void"}},"openDelay":{"defaultValue":null,"description":"Open delay in ms","name":"openDelay","required":false,"type":{"name":"number"}},"position":{"defaultValue":null,"description":"Dropdown position relative to target","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left-end\\" | \\"left-start\\" | \\"right-end\\" | \\"right-start\\" | \\"top-end\\" | \\"top-start\\"","raw":"FloatingPosition","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""},{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"left-end\\""},{"value":"\\"left-start\\""},{"value":"\\"right-end\\""},{"value":"\\"right-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""}]}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be automatically returned to control when dropdown closes, false by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadow or any other valid css box-shadow value","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"transition":{"defaultValue":null,"description":"One of premade transitions ot transition object","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"width":{"defaultValue":null,"description":"Dropdown width, or \'target\' to make dropdown width the same as target element","name":"width","required":false,"type":{"name":"PopoverWidth"}},"withArrow":{"defaultValue":null,"description":"Determines whether component should have an arrow","name":"withArrow","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether dropdown should be rendered within Portal, defaults to false","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"HoverCard.Dropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/HoverCard/HoverCard.tsx","displayName":"HoverCard.Dropdown","props":{"children":{"defaultValue":null,"description":"Dropdown content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"Image":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Image/Image.tsx","displayName":"@mantine/core/Image","props":{"alt":{"defaultValue":null,"description":"Image alt text, used as title for placeholder if image was not loaded","name":"alt","required":false,"type":{"name":"string"}},"caption":{"defaultValue":null,"description":"Image figcaption, displayed below image","name":"caption","required":false,"type":{"name":"ReactNode"}},"fit":{"defaultValue":null,"description":"Image object-fit property","name":"fit","required":false,"type":{"name":"\\"contain\\" | \\"fill\\" | \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"none\\" | \\"cover\\" | \\"scale-down\\"","raw":"ObjectFit","value":[{"value":"\\"contain\\""},{"value":"\\"fill\\""},{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"none\\""},{"value":"\\"cover\\""},{"value":"\\"scale-down\\""}]}},"height":{"defaultValue":null,"description":"Image height, defaults to original image height adjusted to given width","name":"height","required":false,"type":{"name":"string | number"}},"imageProps":{"defaultValue":null,"description":"Props spread to img element","name":"imageProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, \\"key\\" | keyof ImgHTMLAttributes<...>>"}},"imageRef":{"defaultValue":null,"description":"Get image element ref","name":"imageRef","required":false,"type":{"name":"ForwardedRef<HTMLImageElement>"}},"placeholder":{"defaultValue":null,"description":"Customize placeholder content","name":"placeholder","required":false,"type":{"name":"ReactNode"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, 0 by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"src":{"defaultValue":null,"description":"Image src","name":"src","required":false,"type":{"name":"string"}},"width":{"defaultValue":null,"description":"Image width, defaults to 100%, cannot exceed 100%","name":"width","required":false,"type":{"name":"string | number"}},"withPlaceholder":{"defaultValue":null,"description":"Enable placeholder when image is loading and when image fails to load","name":"withPlaceholder","required":false,"type":{"name":"boolean"}}}},"Indicator":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Indicator/Indicator.tsx","displayName":"@mantine/core/Indicator","props":{"children":{"defaultValue":null,"description":"Element that should have an indicator","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Color from theme.colors or any other valid CSS color value","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"When component is disabled it renders children without indicator","name":"disabled","required":false,"type":{"name":"boolean"}},"dot":{"defaultValue":null,"description":"","name":"dot","required":false,"type":{"name":"boolean"}},"inline":{"defaultValue":null,"description":"Determines whether indicator container should be an inline element","name":"inline","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Indicator label","name":"label","required":false,"type":{"name":"ReactNode"}},"offset":{"defaultValue":null,"description":"Changes position offset, usually used when element has border-radius","name":"offset","required":false,"type":{"name":"number"}},"overflowCount":{"defaultValue":null,"description":"Indicator count overflowCount","name":"overflowCount","required":false,"type":{"name":"number"}},"position":{"defaultValue":null,"description":"Indicator position relative to child element","name":"position","required":false,"type":{"name":"\\"bottom-end\\" | \\"bottom-start\\" | \\"top-end\\" | \\"top-start\\" | \\"bottom-center\\" | \\"top-center\\" | \\"middle-center\\" | \\"middle-end\\" | \\"middle-start\\"","raw":"\\"bottom-end\\" | \\"bottom-start\\" | \\"top-end\\" | \\"top-start\\" | \\"bottom-center\\" | \\"top-center\\" | \\"middle-center\\" | \\"middle-end\\" | \\"middle-start\\"","value":[{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""},{"value":"\\"bottom-center\\""},{"value":"\\"top-center\\""},{"value":"\\"middle-center\\""},{"value":"\\"middle-end\\""},{"value":"\\"middle-start\\""}]}},"processing":{"defaultValue":null,"description":"Indicator processing animation","name":"processing","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, 1000rem by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"showZero":{"defaultValue":null,"description":"When showZero is true and label is zero  renders children with indicator","name":"showZero","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Indicator width and height","name":"size","required":false,"type":{"name":"string | number"}},"withBorder":{"defaultValue":null,"description":"Determines whether indicator should have border","name":"withBorder","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Indicator z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"InlineInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/InlineInput/InlineInput.tsx","displayName":"@mantine/core/InlineInput","props":{"description":{"defaultValue":null,"description":"","name":"description","required":true,"type":{"name":"ReactNode"}},"disabled":{"defaultValue":null,"description":"","name":"disabled","required":true,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"","name":"error","required":true,"type":{"name":"ReactNode"}},"id":{"defaultValue":null,"description":"","name":"id","required":true,"type":{"name":"string"}},"label":{"defaultValue":null,"description":"","name":"label","required":true,"type":{"name":"ReactNode"}},"labelPosition":{"defaultValue":null,"description":"","name":"labelPosition","required":true,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"size":{"defaultValue":null,"description":"","name":"size","required":true,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Input":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Input/Input.tsx","displayName":"@mantine/core/Input","props":{"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Determines whether input has error styles","name":"error","required":false,"type":{"name":"ReactNode"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"multiline":{"defaultValue":null,"description":"Will input have multiple lines?","name":"multiline","required":false,"type":{"name":"boolean"}},"pointer":{"defaultValue":null,"description":"Determines whether cursor on input should be pointer","name":"pointer","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"InputBase":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/InputBase/InputBase.tsx","displayName":"@mantine/core/InputBase","props":{"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"JsonInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/JsonInput/JsonInput.tsx","displayName":"@mantine/core/JsonInput","props":{"autosize":{"defaultValue":null,"description":"If true textarea will grow with content until maxRows are reached","name":"autosize","required":false,"type":{"name":"boolean"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled input","name":"defaultValue","required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"deserialize":{"defaultValue":null,"description":"Function to deserialize string value, used for value formatting and input json validation, must throw error if string cannot be processed, JSON.parse by default","name":"deserialize","required":false,"type":{"name":"(text: string, reviver?: (this: any, key: string, value: any) => any) => any"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"formatOnBlur":{"defaultValue":null,"description":"Format json on blur","name":"formatOnBlur","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"id":{"defaultValue":null,"description":"Id is used to bind input and label, if not passed unique id will be generated for each input","name":"id","required":false,"type":{"name":"string"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"maxRows":{"defaultValue":null,"description":"Defines maxRows in autosize variant, not applicable to regular variant","name":"maxRows","required":false,"type":{"name":"number"}},"minRows":{"defaultValue":null,"description":"Defined minRows in autosize variant and rows in regular variant","name":"minRows","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"onChange value for controlled input","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"serialize":{"defaultValue":null,"description":"Function to serialize value into string, used for value formatting, JSON.stringify by default","name":"serialize","required":false,"type":{"name":"{ (value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string; (value: any, replacer?: (string | number)[], space?: string | number): string; }"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"validationError":{"defaultValue":null,"description":"Error message shown when json is not valid","name":"validationError","required":false,"type":{"name":"ReactNode"}},"value":{"defaultValue":null,"description":"Value for controlled input","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Kbd":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Kbd/Kbd.tsx","displayName":"@mantine/core/Kbd","props":{"children":{"defaultValue":null,"description":"Keyboard key","name":"children","required":true,"type":{"name":"ReactNode"}},"size":{"defaultValue":null,"description":"Controls component size, \'sm\' by default","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"List":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/List/List.tsx","displayName":"@mantine/core/List","props":{"center":{"defaultValue":null,"description":"Center items with icon","name":"center","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"<List.Item /> components only","name":"children","required":true,"type":{"name":"ReactNode"}},"icon":{"defaultValue":null,"description":"Icon that should replace list item dot","name":"icon","required":false,"type":{"name":"ReactNode"}},"listStyleType":{"defaultValue":null,"description":"List style","name":"listStyleType","required":false,"type":{"name":"ListStyleType"}},"size":{"defaultValue":null,"description":"Font size from theme or number to set value","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"spacing":{"defaultValue":null,"description":"Spacing between items from theme or number to set value","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"List type: ol or ul","name":"type","required":false,"type":{"name":"\\"ordered\\" | \\"unordered\\"","raw":"\\"ordered\\" | \\"unordered\\"","value":[{"value":"\\"ordered\\""},{"value":"\\"unordered\\""}]}},"withPadding":{"defaultValue":null,"description":"Include padding-left to offset list from main content","name":"withPadding","required":false,"type":{"name":"boolean"}}}},"Loader":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Loader/Loader.tsx","displayName":"@mantine/core/Loader","props":{"color":{"defaultValue":null,"description":"Loader color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"size":{"defaultValue":null,"description":"Defines width of loader","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Loader appearance","name":"variant","required":false,"type":{"name":"\\"bars\\" | \\"oval\\" | \\"dots\\"","raw":"LoaderType","value":[{"value":"\\"bars\\""},{"value":"\\"oval\\""},{"value":"\\"dots\\""}]}}}},"LoadingOverlay":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/LoadingOverlay/LoadingOverlay.tsx","displayName":"@mantine/core/LoadingOverlay","props":{"exitTransitionDuration":{"defaultValue":null,"description":"Exit transition duration in ms","name":"exitTransitionDuration","required":false,"type":{"name":"number"}},"keepMounted":{"defaultValue":null,"description":"If set loading overlay will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"loader":{"defaultValue":null,"description":"Provide custom loader","name":"loader","required":false,"type":{"name":"ReactNode"}},"loaderProps":{"defaultValue":null,"description":"Loader component props","name":"loaderProps","required":false,"type":{"name":"LoaderProps"}},"overlayBlur":{"defaultValue":null,"description":"Sets overlay blur","name":"overlayBlur","required":false,"type":{"name":"string | number"}},"overlayColor":{"defaultValue":null,"description":"Sets overlay color, defaults to theme.white in light theme and to theme.colors.dark[5] in dark theme","name":"overlayColor","required":false,"type":{"name":"string"}},"overlayOpacity":{"defaultValue":null,"description":"Sets overlay opacity","name":"overlayOpacity","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, 0 by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Animation duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"visible":{"defaultValue":null,"description":"If visible overlay will take 100% width and height of first parent with relative position and overlay all of its content","name":"visible","required":true,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Loading overlay z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Mark":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Mark/Mark.tsx","displayName":"@mantine/core/Mark","props":{"color":{"defaultValue":null,"description":"Background color from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}}}},"MediaQuery":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/MediaQuery/MediaQuery.tsx","displayName":"@mantine/core/MediaQuery","props":{"children":{"defaultValue":null,"description":"Child that should be shown at given breakpoint, it must accept className prop","name":"children","required":true,"type":{"name":"ReactNode"}},"largerThan":{"defaultValue":null,"description":"Styles applied to child when viewport is larger than given breakpoint","name":"largerThan","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"query":{"defaultValue":null,"description":"Any other media query","name":"query","required":false,"type":{"name":"string"}},"smallerThan":{"defaultValue":null,"description":"Styles applied to child when viewport is smaller than given breakpoint","name":"smallerThan","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Menu":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/Menu.tsx","displayName":"@mantine/core/Menu","props":{"arrowOffset":{"defaultValue":null,"description":"Arrow offset","name":"arrowOffset","required":false,"type":{"name":"number"}},"arrowPosition":{"defaultValue":null,"description":"Arrow position *","name":"arrowPosition","required":false,"type":{"name":"\\"center\\" | \\"side\\"","raw":"ArrowPosition","value":[{"value":"\\"center\\""},{"value":"\\"side\\""}]}},"arrowRadius":{"defaultValue":null,"description":"Arrow border-radius","name":"arrowRadius","required":false,"type":{"name":"number"}},"arrowSize":{"defaultValue":null,"description":"Arrow size","name":"arrowSize","required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"Menu content","name":"children","required":false,"type":{"name":"ReactNode"}},"clickOutsideEvents":{"defaultValue":null,"description":"Events that trigger outside clicks","name":"clickOutsideEvents","required":false,"type":{"name":"string[]"}},"closeDelay":{"defaultValue":null,"description":"Close delay in ms, applicable only to trigger=\\"hover\\" variant","name":"closeDelay","required":false,"type":{"name":"number"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether dropdown should be closed on outside clicks, default to true","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether dropdown should be closed when Escape key is pressed, defaults to true","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"closeOnItemClick":{"defaultValue":null,"description":"Determines whether Menu should be closed when item is clicked","name":"closeOnItemClick","required":false,"type":{"name":"boolean"}},"defaultOpened":{"defaultValue":null,"description":"Uncontrolled menu initial opened state","name":"defaultOpened","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"If set, popover dropdown will not render","name":"disabled","required":false,"type":{"name":"boolean"}},"exitTransitionDuration":{"defaultValue":null,"description":"Exit transition duration in ms","name":"exitTransitionDuration","required":false,"type":{"name":"number"}},"id":{"defaultValue":null,"description":"id base to create accessibility connections","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set dropdown will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"loop":{"defaultValue":null,"description":"Determines whether arrow key presses should loop though items (first to last and last to first)","name":"loop","required":false,"type":{"name":"boolean"}},"middlewares":{"defaultValue":null,"description":"Floating ui middlewares to configure position handling","name":"middlewares","required":false,"type":{"name":"PopoverMiddlewares"}},"offset":{"defaultValue":null,"description":"Space between target element and dropdown","name":"offset","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when menu opened state changes","name":"onChange","required":false,"type":{"name":"(opened: boolean) => void"}},"onClose":{"defaultValue":null,"description":"Called when Menu is closed","name":"onClose","required":false,"type":{"name":"() => void"}},"onOpen":{"defaultValue":null,"description":"Called when Menu is opened","name":"onOpen","required":false,"type":{"name":"() => void"}},"onPositionChange":{"defaultValue":null,"description":"Called when dropdown position changes","name":"onPositionChange","required":false,"type":{"name":"(position: FloatingPosition) => void"}},"openDelay":{"defaultValue":null,"description":"Open delay in ms, applicable only to trigger=\\"hover\\" variant","name":"openDelay","required":false,"type":{"name":"number"}},"opened":{"defaultValue":null,"description":"Controlled menu opened state","name":"opened","required":false,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Dropdown position relative to target","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left-end\\" | \\"left-start\\" | \\"right-end\\" | \\"right-start\\" | \\"top-end\\" | \\"top-start\\"","raw":"FloatingPosition","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""},{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"left-end\\""},{"value":"\\"left-start\\""},{"value":"\\"right-end\\""},{"value":"\\"right-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""}]}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be automatically returned to control when dropdown closes, false by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadow or any other valid css box-shadow value","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"transition":{"defaultValue":null,"description":"One of premade transitions ot transition object","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"trigger":{"defaultValue":null,"description":"Event which should open menu","name":"trigger","required":false,"type":{"name":"\\"click\\" | \\"hover\\"","raw":"MenuTriggerEvent","value":[{"value":"\\"click\\""},{"value":"\\"hover\\""}]}},"width":{"defaultValue":null,"description":"Dropdown width, or \'target\' to make dropdown width the same as target element","name":"width","required":false,"type":{"name":"PopoverWidth"}},"withArrow":{"defaultValue":null,"description":"Determines whether component should have an arrow","name":"withArrow","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether dropdown should be rendered within Portal, defaults to false","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Menu.Item":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/Menu.tsx","displayName":"Menu.Item","props":{"children":{"defaultValue":null,"description":"Item label","name":"children","required":false,"type":{"name":"ReactNode"}},"closeMenuOnClick":{"defaultValue":null,"description":"Determines whether menu should be closed when item is clicked, overrides closeOnItemClick prop on Menu component","name":"closeMenuOnClick","required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Icon rendered on the left side of the label","name":"icon","required":false,"type":{"name":"ReactNode"}},"rightSection":{"defaultValue":null,"description":"Section rendered on the right side of the label","name":"rightSection","required":false,"type":{"name":"ReactNode"}}}},"Menu.Dropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/Menu.tsx","displayName":"Menu.Dropdown","props":{"children":{"defaultValue":null,"description":"Item label","name":"children","required":false,"type":{"name":"ReactNode"}}}},"Modal":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Modal/Modal.tsx","displayName":"Modal","props":{"centered":{"defaultValue":null,"description":"Determines whether the modal should be centered vertically, false by default","name":"centered","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Modal content","name":"children","required":false,"type":{"name":"ReactNode"}},"closeButtonProps":{"defaultValue":null,"description":"Props added to close button","name":"closeButtonProps","required":false,"type":{"name":"ModalBaseCloseButtonProps"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"fullScreen":{"defaultValue":null,"description":"Determines whether the modal should take the entire screen","name":"fullScreen","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when modal/drawer is closed","name":"onClose","required":true,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Determines whether modal/drawer is opened","name":"opened","required":true,"type":{"name":"boolean"}},"overlayProps":{"defaultValue":null,"description":"Props added to Overlay component, use configure opacity, background color, styles and other properties","name":"overlayProps","required":false,"type":{"name":"ModalBaseOverlayProps"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"scrollAreaComponent":{"defaultValue":null,"description":"Scroll area component, ScrollArea.Autosize by default","name":"scrollAreaComponent","required":false,"type":{"name":"ScrollAreaComponent"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"title":{"defaultValue":null,"description":"Modal title","name":"title","required":false,"type":{"name":"ReactNode"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"withCloseButton":{"defaultValue":null,"description":"Determines whether close button should be rendered, true by default","name":"withCloseButton","required":false,"type":{"name":"boolean"}},"withOverlay":{"defaultValue":null,"description":"Determines whether overlay should be rendered, true by default","name":"withOverlay","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"xOffset":{"defaultValue":null,"description":"Left/right modal offset, 5vw by default","name":"xOffset","required":false,"type":{"name":"MarginLeft<string | number>"}},"yOffset":{"defaultValue":null,"description":"Top/bottom modal offset, 5vh by default","name":"yOffset","required":false,"type":{"name":"MarginTop<string | number>"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"Modal.Root":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Modal/Modal.tsx","displayName":"Modal.Root","props":{"centered":{"defaultValue":null,"description":"Determines whether the modal should be centered vertically, false by default","name":"centered","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Child component","name":"children","required":false,"type":{"name":"ReactNode"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"fullScreen":{"defaultValue":null,"description":"Determines whether the modal should take the entire screen","name":"fullScreen","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when modal/drawer is closed","name":"onClose","required":true,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Determines whether modal/drawer is opened","name":"opened","required":true,"type":{"name":"boolean"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"scrollAreaComponent":{"defaultValue":null,"description":"Scroll area component, ScrollArea.Autosize by default","name":"scrollAreaComponent","required":false,"type":{"name":"ScrollAreaComponent"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"xOffset":{"defaultValue":null,"description":"Left/right modal offset, 5vw by default","name":"xOffset","required":false,"type":{"name":"MarginLeft<string | number>"}},"yOffset":{"defaultValue":null,"description":"Top/bottom modal offset, 5vh by default","name":"yOffset","required":false,"type":{"name":"MarginTop<string | number>"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"Modal.NativeScrollArea":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Modal/Modal.tsx","description":"","displayName":"Modal.NativeScrollArea","props":{}},"ModalBase":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ModalBase/ModalBase.tsx","displayName":"ModalBase","props":{"children":{"defaultValue":null,"description":"Child component","name":"children","required":false,"type":{"name":"ReactNode"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when modal/drawer is closed","name":"onClose","required":true,"type":{"name":"() => void"}},"opened":{"defaultValue":null,"description":"Determines whether modal/drawer is opened","name":"opened","required":true,"type":{"name":"boolean"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"ModalBase.NativeScrollArea":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ModalBase/ModalBase.tsx","description":"","displayName":"ModalBase.NativeScrollArea","props":{}},"MultiSelect":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/MultiSelect/MultiSelect.tsx","displayName":"@mantine/core/MultiSelect","props":{"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearSearchOnBlur":{"defaultValue":null,"description":"Clear search field value on blur","name":"clearSearchOnBlur","required":false,"type":{"name":"boolean"}},"clearSearchOnChange":{"defaultValue":null,"description":"Clear search value when item is selected","name":"clearSearchOnChange","required":false,"type":{"name":"boolean"}},"clearable":{"defaultValue":null,"description":"Allow to clear item","name":"clearable","required":false,"type":{"name":"boolean"}},"creatable":{"defaultValue":null,"description":"Allow creatable option","name":"creatable","required":false,"type":{"name":"boolean"}},"data":{"defaultValue":null,"description":"Select data used to render items in dropdown","name":"data","required":true,"type":{"name":"(string | SelectItem)[]"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled input defaultValue","name":"defaultValue","required":false,"type":{"name":"string[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disableSelectedItemFiltering":{"defaultValue":null,"description":"Disable removing selected items from the list","name":"disableSelectedItemFiltering","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownComponent":{"defaultValue":null,"description":"Change dropdown component, can be used to add custom scrollbars","name":"dropdownComponent","required":false,"type":{"name":"any"}},"dropdownPosition":{"defaultValue":null,"description":"Dropdown positioning behavior","name":"dropdownPosition","required":false,"type":{"name":"\\"bottom\\" | \\"top\\" | \\"flip\\"","raw":"\\"bottom\\" | \\"top\\" | \\"flip\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"top\\""},{"value":"\\"flip\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"filter":{"defaultValue":null,"description":"Function based on which items in dropdown are filtered","name":"filter","required":false,"type":{"name":"(value: string, selected: boolean, item: SelectItem) => boolean"}},"getCreateLabel":{"defaultValue":null,"description":"Function to get create Label","name":"getCreateLabel","required":false,"type":{"name":"(query: string) => ReactNode"}},"hoverOnSearchChange":{"defaultValue":null,"description":"Hovers the first result when search query changes","name":"hoverOnSearchChange","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"initiallyOpened":{"defaultValue":null,"description":"Initial dropdown opened state","name":"initiallyOpened","required":false,"type":{"name":"boolean"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"itemComponent":{"defaultValue":null,"description":"Change item renderer","name":"itemComponent","required":false,"type":{"name":"FC<any>"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"limit":{"defaultValue":null,"description":"Limit amount of items displayed at a time for searchable select","name":"limit","required":false,"type":{"name":"number"}},"maxDropdownHeight":{"defaultValue":null,"description":"Maximum dropdown height","name":"maxDropdownHeight","required":false,"type":{"name":"string | number"}},"maxSelectedValues":{"defaultValue":null,"description":"Limit amount of items selected","name":"maxSelectedValues","required":false,"type":{"name":"number"}},"nothingFound":{"defaultValue":null,"description":"Nothing found label","name":"nothingFound","required":false,"type":{"name":"ReactNode"}},"onChange":{"defaultValue":null,"description":"Controlled input onChange handler","name":"onChange","required":false,"type":{"name":"(value: string[]) => void"}},"onCreate":{"defaultValue":null,"description":"Called when create option is selected","name":"onCreate","required":false,"type":{"name":"(query: string) => string | SelectItem"}},"onDropdownClose":{"defaultValue":null,"description":"Called when dropdown is closed","name":"onDropdownClose","required":false,"type":{"name":"() => void"}},"onDropdownOpen":{"defaultValue":null,"description":"Called when dropdown is opened","name":"onDropdownOpen","required":false,"type":{"name":"() => void"}},"onSearchChange":{"defaultValue":null,"description":"Called each time search query changes","name":"onSearchChange","required":false,"type":{"name":"(query: string) => void"}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label\\nSets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"searchValue":{"defaultValue":null,"description":"Controlled search input value","name":"searchValue","required":false,"type":{"name":"string"}},"searchable":{"defaultValue":null,"description":"Enable items searching","name":"searchable","required":false,"type":{"name":"boolean"}},"selectOnBlur":{"defaultValue":null,"description":"Select highlighted item on blur","name":"selectOnBlur","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Dropdown shadow from theme or any value to set box-shadow","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"shouldCreate":{"defaultValue":null,"description":"Function to determine if create label should be displayed","name":"shouldCreate","required":false,"type":{"name":"(query: string, data: SelectItem[]) => boolean"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"switchDirectionOnFlip":{"defaultValue":null,"description":"Whether to switch item order and keyboard navigation on dropdown position flip","name":"switchDirectionOnFlip","required":false,"type":{"name":"boolean"}},"transition":{"defaultValue":null,"description":"Dropdown body appear/disappear transition","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Dropdown body transition duration","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Dropdown body transition timing function, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Controlled input value","name":"value","required":false,"type":{"name":"string[]"}},"valueComponent":{"defaultValue":null,"description":"Component used to render values","name":"valueComponent","required":false,"type":{"name":"FC<any>"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Whether to render the dropdown in a Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"NativeSelect":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/NativeSelect/NativeSelect.tsx","displayName":"@mantine/core/NativeSelect","props":{"data":{"defaultValue":null,"description":"Data used to render options","name":"data","required":true,"type":{"name":"(string | SelectItem)[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"id":{"defaultValue":null,"description":"id is used to bind input and label, if not passed unique id will be generated for each input","name":"id","required":false,"type":{"name":"string"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"NavLink":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/NavLink/NavLink.tsx","displayName":"@mantine/core/NavLink","props":{"active":{"defaultValue":null,"description":"Determines whether link should have active styles","name":"active","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Child links","name":"children","required":false,"type":{"name":"ReactNode"}},"childrenOffset":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set collapsed links padding-left","name":"childrenOffset","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"color":{"defaultValue":null,"description":"Key of theme.colors, active link color","name":"color","required":false,"type":{"name":"MantineColor"}},"defaultOpened":{"defaultValue":null,"description":"Uncontrolled nested items collapse initial state","name":"defaultOpened","required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"Secondary link description","name":"description","required":false,"type":{"name":"ReactNode"}},"disableRightSectionRotation":{"defaultValue":null,"description":"If set to true, right section will not rotate when collapse is opened","name":"disableRightSectionRotation","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"Adds disabled styles to root element","name":"disabled","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Icon displayed on the left side of the label","name":"icon","required":false,"type":{"name":"ReactNode"}},"label":{"defaultValue":null,"description":"Main link content","name":"label","required":false,"type":{"name":"ReactNode"}},"noWrap":{"defaultValue":null,"description":"If prop is set then label and description will not wrap on the next line","name":"noWrap","required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Called when open state changes","name":"onChange","required":false,"type":{"name":"(opened: boolean) => void"}},"opened":{"defaultValue":null,"description":"Controlled nested items collapse state","name":"opened","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Section displayed on the right side of the label","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"variant":{"defaultValue":null,"description":"Active link variant","name":"variant","required":false,"type":{"name":"Variants<\\"light\\" | \\"filled\\" | \\"subtle\\">"}}}},"Notification":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Notification/Notification.tsx","displayName":"@mantine/core/Notification","props":{"children":{"defaultValue":null,"description":"Notification body, place main text here","name":"children","required":false,"type":{"name":"ReactNode"}},"closeButtonProps":{"defaultValue":null,"description":"Props spread to close button","name":"closeButtonProps","required":false,"type":{"name":"Record<string, any>"}},"color":{"defaultValue":null,"description":"Notification line or icon color","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Notification icon, replaces color line","name":"icon","required":false,"type":{"name":"ReactNode"}},"loading":{"defaultValue":null,"description":"Replaces colored line or icon with Loader component","name":"loading","required":false,"type":{"name":"boolean"}},"onClose":{"defaultValue":null,"description":"Called when close button is clicked","name":"onClose","required":false,"type":{"name":"() => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"title":{"defaultValue":null,"description":"Notification title, displayed before body","name":"title","required":false,"type":{"name":"ReactNode"}},"withCloseButton":{"defaultValue":null,"description":"Determines whether close button should be visible, true by default","name":"withCloseButton","required":false,"type":{"name":"boolean"}}}},"NumberInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/NumberInput/NumberInput.tsx","displayName":"@mantine/core/NumberInput","props":{"decimalSeparator":{"defaultValue":null,"description":"The decimal separator","name":"decimalSeparator","required":false,"type":{"name":"string"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"number | \\"\\""}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"formatter":{"defaultValue":null,"description":"Formats the number into the input","name":"formatter","required":false,"type":{"name":"Formatter"}},"handlersRef":{"defaultValue":null,"description":"Get increment/decrement handlers","name":"handlersRef","required":false,"type":{"name":"ForwardedRef<NumberInputHandlers>"}},"hideControls":{"defaultValue":null,"description":"Removes increment/decrement controls","name":"hideControls","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"max":{"defaultValue":null,"description":"Maximum possible value","name":"max","required":false,"type":{"name":"number"}},"min":{"defaultValue":null,"description":"Minimal possible value","name":"min","required":false,"type":{"name":"number"}},"noClampOnBlur":{"defaultValue":null,"description":"Prevent value clamp on blur","name":"noClampOnBlur","required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: number | \\"\\") => void"}},"parser":{"defaultValue":null,"description":"Parses the value from formatter, should be used with formatter at the same time","name":"parser","required":false,"type":{"name":"Parser"}},"precision":{"defaultValue":null,"description":"Amount of digits after the decimal point","name":"precision","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"removeTrailingZeros":{"defaultValue":null,"description":"Only works if a precision is given, removes the trailing zeros, false by default","name":"removeTrailingZeros","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"startValue":{"defaultValue":null,"description":"First value if no initial value was set and increment/decrement is triggered using controls or up/down arrows","name":"startValue","required":false,"type":{"name":"number"}},"step":{"defaultValue":null,"description":"Number by which value will be incremented/decremented with controls and up/down arrows","name":"step","required":false,"type":{"name":"number"}},"stepHoldDelay":{"defaultValue":null,"description":"Initial delay in milliseconds before stepping the value.","name":"stepHoldDelay","required":false,"type":{"name":"number"}},"stepHoldInterval":{"defaultValue":null,"description":"Delay before stepping the value. Can be a number of milliseconds or a function that receives the current step count and returns the delay in milliseconds.","name":"stepHoldInterval","required":false,"type":{"name":"number | ((stepCount: number) => number)"}},"type":{"defaultValue":null,"description":"Input type, defaults to text","name":"type","required":false,"type":{"name":"\\"number\\" | \\"text\\"","raw":"\\"number\\" | \\"text\\"","value":[{"value":"\\"number\\""},{"value":"\\"text\\""}]}},"value":{"defaultValue":null,"description":"Input value for controlled component","name":"value","required":false,"type":{"name":"number | \\"\\""}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Overlay":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Overlay/Overlay.tsx","displayName":"@mantine/core/Overlay","props":{"blur":{"defaultValue":null,"description":"Overlay background blur, 0 by default","name":"blur","required":false,"type":{"name":"string | number"}},"center":{"defaultValue":null,"description":"Determines whether content inside overlay should be vertically and horizontally centered, false by default","name":"center","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Content rendered inside overlay","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Overlay background-color, #000 by default","name":"color","required":false,"type":{"name":"BackgroundColor"}},"fixed":{"defaultValue":null,"description":"Determines whether overlay should have fixed position instead of absolute, false by default","name":"fixed","required":false,"type":{"name":"boolean"}},"gradient":{"defaultValue":null,"description":"Changes overlay to gradient, if set color prop is ignored","name":"gradient","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"zIndex":{"defaultValue":null,"description":"Overlay z-index, 200 by default","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Pagination":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Pagination/Pagination.tsx","displayName":"@mantine/core/Pagination","props":{"align":{"defaultValue":null,"description":"Defines align-items css property","name":"align","required":false,"type":{"name":"AlignItems"}},"boundaries":{"defaultValue":null,"description":"Amount of elements visible on left/right edges","name":"boundaries","required":false,"type":{"name":"number"}},"color":{"defaultValue":null,"description":"Active item color from theme, defaults to theme.primaryColor","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"Determines whether all controls should be disabled","name":"disabled","required":false,"type":{"name":"boolean"}},"getItemAriaLabel":{"defaultValue":null,"description":"Callback to control aria-labels","name":"getItemAriaLabel","required":false,"type":{"name":"(page: number | \\"first\\" | \\"last\\" | \\"dots\\" | \\"next\\" | \\"prev\\") => string"}},"grow":{"defaultValue":null,"description":"Defines flex-grow property for each element, true -> 1, false -> 0","name":"grow","required":false,"type":{"name":"boolean"}},"initialPage":{"defaultValue":null,"description":"Active initial page for uncontrolled component","name":"initialPage","required":false,"type":{"name":"number"}},"itemComponent":{"defaultValue":null,"description":"Change item component","name":"itemComponent","required":false,"type":{"name":"FC<PaginationItemProps>"}},"noWrap":{"defaultValue":null,"description":"Defined flex-wrap property","name":"noWrap","required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Callback fired after change of each page","name":"onChange","required":false,"type":{"name":"(page: number) => void"}},"page":{"defaultValue":null,"description":"Controlled active page number","name":"page","required":false,"type":{"name":"number"}},"position":{"defaultValue":null,"description":"Defines justify-content property","name":"position","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"center\\" | \\"apart\\"","raw":"GroupPosition","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"center\\""},{"value":"\\"apart\\""}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"siblings":{"defaultValue":null,"description":"Siblings amount on left/right side of selected page","name":"siblings","required":false,"type":{"name":"number"}},"size":{"defaultValue":null,"description":"Sets item width and height","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"spacing":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value, defaults to theme.spacing.xs / 2","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"total":{"defaultValue":null,"description":"Total amount of pages","name":"total","required":true,"type":{"name":"number"}},"withControls":{"defaultValue":null,"description":"Show/hide prev/next controls","name":"withControls","required":false,"type":{"name":"boolean"}},"withEdges":{"defaultValue":null,"description":"Show/hide jump to start/end controls","name":"withEdges","required":false,"type":{"name":"boolean"}}}},"Paper":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Paper/Paper.tsx","displayName":"@mantine/core/Paper","props":{"children":{"defaultValue":null,"description":"Paper children","name":"children","required":false,"type":{"name":"ReactNode"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"shadow":{"defaultValue":null,"description":"Predefined box-shadow from theme.shadows (xs, sm, md, lg, xl) or any valid css box-shadow property","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"withBorder":{"defaultValue":null,"description":"Adds border styles","name":"withBorder","required":false,"type":{"name":"boolean"}}}},"PasswordInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/PasswordInput/PasswordInput.tsx","displayName":"@mantine/core/PasswordInput","props":{"defaultVisible":{"defaultValue":null,"description":"Determines whether input content should be visible (uncontrolled)","name":"defaultVisible","required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"onVisibilityChange":{"defaultValue":null,"description":"Called when visibility changes","name":"onVisibilityChange","required":false,"type":{"name":"(visible: boolean) => void"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"toggleTabIndex":{"defaultValue":null,"description":"Toggle button tabIndex, set to 0 to make button focusable with tab key","name":"toggleTabIndex","required":false,"type":{"name":"0 | -1","raw":"0 | -1","value":[{"value":"0"},{"value":"-1"}]}},"type":{"defaultValue":null,"description":"Input element type","name":"type","required":false,"type":{"name":"HTMLInputTypeAttribute"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"visibilityToggleIcon":{"defaultValue":null,"description":"Provide your own visibility toggle icon","name":"visibilityToggleIcon","required":false,"type":{"name":"FC<{ reveal: boolean; size: string | number; }>"}},"visibilityToggleLabel":{"defaultValue":null,"description":"aria-label for visibility toggle button","name":"visibilityToggleLabel","required":false,"type":{"name":"string"}},"visible":{"defaultValue":null,"description":"Determines whether input content should be visible (controlled)","name":"visible","required":false,"type":{"name":"boolean"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"PinInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/PinInput/PinInput.tsx","displayName":"@mantine/core/PinInput","props":{"autoFocus":{"defaultValue":null,"description":"If set, first input is focused when component is mounted","name":"autoFocus","required":false,"type":{"name":"boolean"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string"}},"disabled":{"defaultValue":null,"description":"Sets inputs disabled attribute","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Adds error styles to all inputs","name":"error","required":false,"type":{"name":"boolean"}},"form":{"defaultValue":null,"description":"Hidden input form attribute","name":"form","required":false,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"id":{"defaultValue":null,"description":"The top-level id that is used as a base in all input fields","name":"id","required":false,"type":{"name":"string"}},"inputMode":{"defaultValue":null,"description":"inputmode attr, inferred from type prop if not specified","name":"inputMode","required":false,"type":{"name":"\\"text\\" | \\"none\\" | \\"search\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\"","raw":"\\"text\\" | \\"none\\" | \\"search\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\"","value":[{"value":"\\"text\\""},{"value":"\\"none\\""},{"value":"\\"search\\""},{"value":"\\"tel\\""},{"value":"\\"url\\""},{"value":"\\"email\\""},{"value":"\\"numeric\\""},{"value":"\\"decimal\\""}]}},"inputType":{"defaultValue":null,"description":"Inputs type attribute, inferred from type prop if not specified","name":"inputType","required":false,"type":{"name":"HTMLInputTypeAttribute"}},"length":{"defaultValue":null,"description":"Number of input boxes","name":"length","required":false,"type":{"name":"number"}},"manageFocus":{"defaultValue":null,"description":"Determines whether focus should be moved automatically to the next input once filled","name":"manageFocus","required":false,"type":{"name":"boolean"}},"mask":{"defaultValue":null,"description":"Changes input type to \\"password\\"","name":"mask","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Hidden input name attribute","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"onComplete":{"defaultValue":null,"description":"Called when user enters value to all inputs","name":"onComplete","required":false,"type":{"name":"(value: string) => void"}},"oneTimeCode":{"defaultValue":null,"description":"Determines whether autocomplete=\\"one-time-code\\" attribute should be set on all inputs","name":"oneTimeCode","required":false,"type":{"name":"boolean"}},"placeholder":{"defaultValue":null,"description":"Placeholder for every input field","name":"placeholder","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can edit input content","name":"readOnly","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input width and height","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"spacing":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set spacing between inputs","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"The type of allowed values","name":"type","required":false,"type":{"name":"\\"number\\" | RegExp | \\"alphanumeric\\""}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Popover":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Popover/Popover.tsx","displayName":"@mantine/core/Popover","props":{"arrowOffset":{"defaultValue":null,"description":"Arrow offset","name":"arrowOffset","required":false,"type":{"name":"number"}},"arrowPosition":{"defaultValue":null,"description":"Arrow position *","name":"arrowPosition","required":false,"type":{"name":"\\"center\\" | \\"side\\"","raw":"ArrowPosition","value":[{"value":"\\"center\\""},{"value":"\\"side\\""}]}},"arrowRadius":{"defaultValue":null,"description":"Arrow border-radius","name":"arrowRadius","required":false,"type":{"name":"number"}},"arrowSize":{"defaultValue":null,"description":"Arrow size","name":"arrowSize","required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"Popover.Target and Popover.Dropdown components","name":"children","required":true,"type":{"name":"ReactNode"}},"clickOutsideEvents":{"defaultValue":null,"description":"Events that trigger outside clicks","name":"clickOutsideEvents","required":false,"type":{"name":"string[]"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether dropdown should be closed on outside clicks, default to true","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether dropdown should be closed when Escape key is pressed, defaults to true","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"defaultOpened":{"defaultValue":null,"description":"Initial opened state for uncontrolled component","name":"defaultOpened","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":null,"description":"If set, popover dropdown will not render","name":"disabled","required":false,"type":{"name":"boolean"}},"exitTransitionDuration":{"defaultValue":null,"description":"Exit transition duration in ms","name":"exitTransitionDuration","required":false,"type":{"name":"number"}},"id":{"defaultValue":null,"description":"id base to create accessibility connections","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set dropdown will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"middlewares":{"defaultValue":null,"description":"Floating ui middlewares to configure position handling","name":"middlewares","required":false,"type":{"name":"PopoverMiddlewares"}},"offset":{"defaultValue":null,"description":"Space between target element and dropdown","name":"offset","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called with current state when dropdown opens or closes","name":"onChange","required":false,"type":{"name":"(opened: boolean) => void"}},"onClose":{"defaultValue":null,"description":"Called when dropdown closes","name":"onClose","required":false,"type":{"name":"() => void"}},"onOpen":{"defaultValue":null,"description":"Called when dropdown opens","name":"onOpen","required":false,"type":{"name":"() => void"}},"onPositionChange":{"defaultValue":null,"description":"Called when dropdown position changes","name":"onPositionChange","required":false,"type":{"name":"(position: FloatingPosition) => void"}},"opened":{"defaultValue":null,"description":"Controls dropdown opened state","name":"opened","required":false,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Dropdown position relative to target","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left-end\\" | \\"left-start\\" | \\"right-end\\" | \\"right-start\\" | \\"top-end\\" | \\"top-start\\"","raw":"FloatingPosition","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""},{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"left-end\\""},{"value":"\\"left-start\\""},{"value":"\\"right-end\\""},{"value":"\\"right-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""}]}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be automatically returned to control when dropdown closes, false by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadow or any other valid css box-shadow value","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"transition":{"defaultValue":null,"description":"One of premade transitions ot transition object","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped within dropdown, default to false","name":"trapFocus","required":false,"type":{"name":"boolean"}},"width":{"defaultValue":null,"description":"Dropdown width, or \'target\' to make dropdown width the same as target element","name":"width","required":false,"type":{"name":"PopoverWidth"}},"withArrow":{"defaultValue":null,"description":"Determines whether component should have an arrow","name":"withArrow","required":false,"type":{"name":"boolean"}},"withRoles":{"defaultValue":null,"description":"Determines whether dropdown and target element should have accessible roles, defaults to true","name":"withRoles","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether dropdown should be rendered within Portal, defaults to false","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Popover.Dropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Popover/Popover.tsx","displayName":"Popover.Dropdown","props":{"children":{"defaultValue":null,"description":"Dropdown content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"Portal":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Portal/Portal.tsx","displayName":"@mantine/core/Portal","props":{"children":{"defaultValue":null,"description":"Portal children, for example, modal or popover","name":"children","required":true,"type":{"name":"ReactNode"}},"target":{"defaultValue":null,"description":"Element where portal should be rendered, by default new div element is created and appended to document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}}}},"Progress":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Progress/Progress.tsx","displayName":"@mantine/core/Progress","props":{"animate":{"defaultValue":null,"description":"Whether to animate striped progress bars","name":"animate","required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"Progress color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"label":{"defaultValue":null,"description":"Text to be placed inside the progress bar","name":"label","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sections":{"defaultValue":null,"description":"Replaces value if present, renders multiple sections instead of single one","name":"sections","required":false,"type":{"name":"ProgressSection[]"}},"size":{"defaultValue":null,"description":"Height of progress bar","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"striped":{"defaultValue":null,"description":"Adds stripes","name":"striped","required":false,"type":{"name":"boolean"}},"value":{"defaultValue":null,"description":"Percent of filled bar (0-100)","name":"value","required":false,"type":{"name":"number"}}}},"Radio":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Radio/Radio.tsx","displayName":"@mantine/core/Radio","props":{"color":{"defaultValue":null,"description":"Active radio color from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"description":{"defaultValue":null,"description":"description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"icon":{"defaultValue":null,"description":"Replace default icon","name":"icon","required":false,"type":{"name":"FC<Pick<SVGProps<SVGSVGElement>, \\"string\\" | \\"clipPath\\" | \\"color\\" | \\"cursor\\" | \\"direction\\" | \\"display\\" | \\"filter\\" | \\"fontFamily\\" | \\"fontSize\\" | \\"fontSizeAdjust\\" | ... 459 more ... | \\"zoomAndPan\\">>"}},"label":{"defaultValue":null,"description":"Radio label","name":"label","required":false,"type":{"name":"ReactNode"}},"labelPosition":{"defaultValue":null,"description":"Position of label","name":"labelPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"size":{"defaultValue":null,"description":"Predefined label fontSize, radio width, height and border-radius","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Animation duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"wrapperProps":{"defaultValue":null,"description":"Props spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Rating":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Rating/Rating.tsx","displayName":"@mantine/core/Rating","props":{"color":{"defaultValue":null,"description":"Key of theme.colors or any CSS color value, yellow by default","name":"color","required":false,"type":{"name":"MantineColor"}},"count":{"defaultValue":null,"description":"Number of controls that should be rendered","name":"count","required":false,"type":{"name":"number"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"number"}},"emptySymbol":{"defaultValue":null,"description":"The icon that is displayed when symbol is empty","name":"emptySymbol","required":false,"type":{"name":"ReactNode | ((value: number) => ReactNode)"}},"fractions":{"defaultValue":null,"description":"Number of fractions each item can be divided into, 1 by default","name":"fractions","required":false,"type":{"name":"number"}},"fullSymbol":{"defaultValue":null,"description":"This icon that is displayed when symbol is full","name":"fullSymbol","required":false,"type":{"name":"ReactNode | ((value: number) => ReactNode)"}},"getSymbolLabel":{"defaultValue":null,"description":"Function should return labelText for the symbols","name":"getSymbolLabel","required":false,"type":{"name":"(value: number) => string"}},"highlightSelectedOnly":{"defaultValue":null,"description":"If true, only the selected symbol will change to full symbol","name":"highlightSelectedOnly","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of rating, should be unique within the page","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: number) => void"}},"onHover":{"defaultValue":null,"description":"Called when item is hovered","name":"onHover","required":false,"type":{"name":"(value: number) => void"}},"readOnly":{"defaultValue":null,"description":"If true, you won\'t be able to interact","name":"readOnly","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Controls component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"number"}}}},"RingProgress":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/RingProgress/RingProgress.tsx","displayName":"@mantine/core/RingProgress","props":{"label":{"defaultValue":null,"description":"Label displayed in the center of the ring","name":"label","required":false,"type":{"name":"ReactNode"}},"rootColor":{"defaultValue":null,"description":"Color of the root section, key of theme.colors or CSS color value","name":"rootColor","required":false,"type":{"name":"MantineColor"}},"roundCaps":{"defaultValue":null,"description":"Sets whether the edges of the progress circle are rounded","name":"roundCaps","required":false,"type":{"name":"boolean"}},"sections":{"defaultValue":null,"description":"Ring sections","name":"sections","required":true,"type":{"name":"RingProgressSection[]"}},"size":{"defaultValue":null,"description":"Width and height of the progress ring","name":"size","required":false,"type":{"name":"number"}},"thickness":{"defaultValue":null,"description":"Ring thickness","name":"thickness","required":false,"type":{"name":"number"}}}},"ScrollArea":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ScrollArea/ScrollArea.tsx","displayName":"@mantine/core/ScrollAreaAutosize","props":{"dir":{"defaultValue":null,"description":"Reading direction of the scroll area","name":"dir","required":false,"type":{"name":"\\"ltr\\" | \\"rtl\\"","raw":"\\"ltr\\" | \\"rtl\\"","value":[{"value":"\\"ltr\\""},{"value":"\\"rtl\\""}]}},"offsetScrollbars":{"defaultValue":null,"description":"Should scrollbars be offset with padding","name":"offsetScrollbars","required":false,"type":{"name":"boolean"}},"onScrollPositionChange":{"defaultValue":null,"description":"Subscribe to scroll position changes","name":"onScrollPositionChange","required":false,"type":{"name":"(position: { x: number; y: number; }) => void"}},"scrollHideDelay":{"defaultValue":null,"description":"Scroll hide delay in ms, for scroll and hover types only","name":"scrollHideDelay","required":false,"type":{"name":"number"}},"scrollbarSize":{"defaultValue":null,"description":"Scrollbar size","name":"scrollbarSize","required":false,"type":{"name":"string | number"}},"type":{"defaultValue":null,"description":"Scrollbars type","name":"type","required":false,"type":{"name":"\\"auto\\" | \\"scroll\\" | \\"always\\" | \\"never\\" | \\"hover\\"","raw":"\\"auto\\" | \\"scroll\\" | \\"always\\" | \\"never\\" | \\"hover\\"","value":[{"value":"\\"auto\\""},{"value":"\\"scroll\\""},{"value":"\\"always\\""},{"value":"\\"never\\""},{"value":"\\"hover\\""}]}},"viewportProps":{"defaultValue":null,"description":"Props added to the viewport element","name":"viewportProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \\"key\\" | keyof HTMLAttributes<HTMLDivElement>> & { ...; }"}},"viewportRef":{"defaultValue":null,"description":"Get viewport ref","name":"viewportRef","required":false,"type":{"name":"ForwardedRef<HTMLDivElement>"}}}},"SegmentedControl":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/SegmentedControl/SegmentedControl.tsx","displayName":"@mantine/core/SegmentedControl","props":{"color":{"defaultValue":null,"description":"Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark","name":"color","required":false,"type":{"name":"MantineColor"}},"data":{"defaultValue":null,"description":"Data based on which controls are rendered","name":"data","required":true,"type":{"name":"string[] | SegmentedControlItem[]"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"fullWidth":{"defaultValue":null,"description":"True if component should have 100% width","name":"fullWidth","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of the radio group, default to random id","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"orientation":{"defaultValue":null,"description":"Display Vertically","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"\\"horizontal\\" | \\"vertical\\"","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can change value","name":"readOnly","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Controls font-size, paddings and height","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms, set to 0 to turn off transitions","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Transition timing function for all transitions, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current selected value","name":"value","required":false,"type":{"name":"string"}}}},"Select":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Select/Select.tsx","displayName":"@mantine/core/Select","props":{"allowDeselect":{"defaultValue":null,"description":"Allow deselecting items on click","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Allow to clear item","name":"clearable","required":false,"type":{"name":"boolean"}},"creatable":{"defaultValue":null,"description":"Allow creatable option","name":"creatable","required":false,"type":{"name":"boolean"}},"data":{"defaultValue":null,"description":"Select data used to render items in dropdown","name":"data","required":true,"type":{"name":"(string | SelectItem)[]"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled input defaultValue","name":"defaultValue","required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownComponent":{"defaultValue":null,"description":"Change dropdown component, can be used to add native scrollbars","name":"dropdownComponent","required":false,"type":{"name":"any"}},"dropdownPosition":{"defaultValue":null,"description":"Dropdown positioning behavior","name":"dropdownPosition","required":false,"type":{"name":"\\"bottom\\" | \\"top\\" | \\"flip\\"","raw":"\\"bottom\\" | \\"top\\" | \\"flip\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"top\\""},{"value":"\\"flip\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"filter":{"defaultValue":null,"description":"Function based on which items in dropdown are filtered","name":"filter","required":false,"type":{"name":"(value: string, item: SelectItem) => boolean"}},"filterDataOnExactSearchMatch":{"defaultValue":null,"description":"Should data be filtered when search value exactly matches selected item","name":"filterDataOnExactSearchMatch","required":false,"type":{"name":"boolean"}},"getCreateLabel":{"defaultValue":null,"description":"Function to get create Label","name":"getCreateLabel","required":false,"type":{"name":"(query: string) => ReactNode"}},"hoverOnSearchChange":{"defaultValue":null,"description":"Hovers the first result when search query changes","name":"hoverOnSearchChange","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"initiallyOpened":{"defaultValue":null,"description":"Initial dropdown opened state","name":"initiallyOpened","required":false,"type":{"name":"boolean"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"itemComponent":{"defaultValue":null,"description":"Change item renderer","name":"itemComponent","required":false,"type":{"name":"FC<any>"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"limit":{"defaultValue":null,"description":"Limit amount of items displayed at a time for searchable select","name":"limit","required":false,"type":{"name":"number"}},"maxDropdownHeight":{"defaultValue":null,"description":"Maximum dropdown height","name":"maxDropdownHeight","required":false,"type":{"name":"number"}},"nothingFound":{"defaultValue":null,"description":"Nothing found label","name":"nothingFound","required":false,"type":{"name":"ReactNode"}},"onChange":{"defaultValue":null,"description":"Controlled input onChange handler","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"onCreate":{"defaultValue":null,"description":"Called when create option is selected","name":"onCreate","required":false,"type":{"name":"(query: string) => string | SelectItem"}},"onDropdownClose":{"defaultValue":null,"description":"Called when dropdown is closed","name":"onDropdownClose","required":false,"type":{"name":"() => void"}},"onDropdownOpen":{"defaultValue":null,"description":"Called when dropdown is opened","name":"onDropdownOpen","required":false,"type":{"name":"() => void"}},"onSearchChange":{"defaultValue":null,"description":"Called each time search value changes","name":"onSearchChange","required":false,"type":{"name":"(query: string) => void"}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update dropdown position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label\\nSets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"searchValue":{"defaultValue":null,"description":"Controlled search input value","name":"searchValue","required":false,"type":{"name":"string"}},"searchable":{"defaultValue":null,"description":"Set to true to enable search","name":"searchable","required":false,"type":{"name":"boolean"}},"selectOnBlur":{"defaultValue":null,"description":"Select highlighted item on blur","name":"selectOnBlur","required":false,"type":{"name":"boolean"}},"shadow":{"defaultValue":null,"description":"Dropdown shadow from theme or any value to set box-shadow","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"shouldCreate":{"defaultValue":null,"description":"Function to determine if create label should be displayed","name":"shouldCreate","required":false,"type":{"name":"(query: string, data: SelectItem[]) => boolean"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"switchDirectionOnFlip":{"defaultValue":null,"description":"Whether to switch item order and keyboard navigation on dropdown position flip","name":"switchDirectionOnFlip","required":false,"type":{"name":"boolean"}},"transition":{"defaultValue":null,"description":"Dropdown body appear/disappear transition","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Dropdown body transition duration","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionTimingFunction":{"defaultValue":null,"description":"Dropdown body transition timing function, defaults to theme.transitionTimingFunction","name":"transitionTimingFunction","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Controlled input value","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Whether to render the dropdown in a Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"zIndex":{"defaultValue":null,"description":"Dropdown z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"SimpleGrid":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/SimpleGrid/SimpleGrid.tsx","displayName":"@mantine/core/SimpleGrid","props":{"breakpoints":{"defaultValue":null,"description":"Breakpoints data to change items per row and spacing based on max-width","name":"breakpoints","required":false,"type":{"name":"SimpleGridBreakpoint[]"}},"cols":{"defaultValue":null,"description":"Default amount of columns, used when none of breakpoints can be applied","name":"cols","required":false,"type":{"name":"number"}},"spacing":{"defaultValue":null,"description":"Spacing between columns, used when none of breakpoints can be applied","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"verticalSpacing":{"defaultValue":null,"description":"Vertical spacing between columns, used when none of breakpoints can be applied","name":"verticalSpacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Skeleton":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Skeleton/Skeleton.tsx","displayName":"@mantine/core/Skeleton","props":{"animate":{"defaultValue":null,"description":"Whether to show the animation effect","name":"animate","required":false,"type":{"name":"boolean"}},"circle":{"defaultValue":null,"description":"If Skeleton is a circle, it\'s width and border-radius will be equal to height","name":"circle","required":false,"type":{"name":"boolean"}},"height":{"defaultValue":null,"description":"Skeleton height","name":"height","required":false,"type":{"name":"string | number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"visible":{"defaultValue":null,"description":"Should skeleton overlay be displayed","name":"visible","required":false,"type":{"name":"boolean"}},"width":{"defaultValue":null,"description":"Skeleton width","name":"width","required":false,"type":{"name":"string | number"}}}},"Space":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Space/Space.tsx","description":"","displayName":"@mantine/core/Space","props":{}},"Spoiler":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Spoiler/Spoiler.tsx","displayName":"@mantine/core/Spoiler","props":{"controlRef":{"defaultValue":null,"description":"Get ref of spoiler toggle button","name":"controlRef","required":false,"type":{"name":"ForwardedRef<HTMLButtonElement>"}},"hideLabel":{"defaultValue":null,"description":"Label for close spoiler action","name":"hideLabel","required":true,"type":{"name":"ReactNode"}},"initialState":{"defaultValue":null,"description":"Initial spoiler state, true to wrap content in spoiler, false to show content without spoiler, opened state will be updated on mount","name":"initialState","required":false,"type":{"name":"boolean"}},"maxHeight":{"defaultValue":null,"description":"Max height of visible content, when this point is reached spoiler appears","name":"maxHeight","required":true,"type":{"name":"number"}},"showLabel":{"defaultValue":null,"description":"Label for open spoiler action","name":"showLabel","required":true,"type":{"name":"ReactNode"}},"transitionDuration":{"defaultValue":null,"description":"Spoiler reveal transition duration in ms, 0 or null to turn off animation","name":"transitionDuration","required":false,"type":{"name":"number"}}}},"Stack":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Stack/Stack.tsx","displayName":"@mantine/core/Stack","props":{"align":{"defaultValue":null,"description":"align-items CSS property","name":"align","required":false,"type":{"name":"AlignItems"}},"justify":{"defaultValue":null,"description":"justify-content CSS property","name":"justify","required":false,"type":{"name":"JustifyContent"}},"spacing":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set gap","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Stepper":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Stepper/Stepper.tsx","displayName":"@mantine/core/Stepper","props":{"active":{"defaultValue":null,"description":"Active step index","name":"active","required":true,"type":{"name":"number"}},"allowNextStepsSelect":{"defaultValue":null,"description":"Whether to enable click on upcoming steps by default. Defaults to true *","name":"allowNextStepsSelect","required":false,"type":{"name":"boolean"}},"breakpoint":{"defaultValue":null,"description":"Breakpoint at which orientation will change from horizontal to vertical","name":"breakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"children":{"defaultValue":null,"description":"<Stepper.Step /> components only","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Active and progress Step colors from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"completedIcon":{"defaultValue":null,"description":"Step icon displayed when step is completed","name":"completedIcon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"contentPadding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content padding-top","name":"contentPadding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"icon":{"defaultValue":null,"description":"Step icon, defaults to step index + 1 when rendered within Stepper","name":"icon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"iconPosition":{"defaultValue":null,"description":"Icon position relative to step body","name":"iconPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"iconSize":{"defaultValue":null,"description":"Step icon size","name":"iconSize","required":false,"type":{"name":"number"}},"onStepClick":{"defaultValue":null,"description":"Called when step is clicked","name":"onStepClick","required":false,"type":{"name":"(stepIndex: number) => void"}},"orientation":{"defaultValue":null,"description":"Component orientation","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"\\"horizontal\\" | \\"vertical\\"","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"progressIcon":{"defaultValue":null,"description":"Step icon displayed when step is in progress","name":"progressIcon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"Switch":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Switch/Switch.tsx","displayName":"@mantine/core/Switch","props":{"color":{"defaultValue":null,"description":"Switch checked state color from theme.colors, defaults to theme.primaryColor","name":"color","required":false,"type":{"name":"MantineColor"}},"description":{"defaultValue":null,"description":"description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"id":{"defaultValue":null,"description":"Id is used to bind input and label, if not passed unique id will be generated for each input","name":"id","required":false,"type":{"name":"string"}},"label":{"defaultValue":null,"description":"Switch label","name":"label","required":false,"type":{"name":"ReactNode"}},"labelPosition":{"defaultValue":null,"description":"Position of label","name":"labelPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"offLabel":{"defaultValue":null,"description":"Inner label when Switch is in unchecked state","name":"offLabel","required":false,"type":{"name":"ReactNode"}},"onLabel":{"defaultValue":null,"description":"Inner label when Switch is in checked state","name":"onLabel","required":false,"type":{"name":"ReactNode"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Predefined size value","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"thumbIcon":{"defaultValue":null,"description":"Icon inside the thumb of switch","name":"thumbIcon","required":false,"type":{"name":"ReactNode"}},"wrapperProps":{"defaultValue":null,"description":"Props spread to wrapper element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Table":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Table/Table.tsx","displayName":"@mantine/core/Table","props":{"captionSide":{"defaultValue":null,"description":"Table caption position","name":"captionSide","required":false,"type":{"name":"\\"bottom\\" | \\"top\\"","raw":"\\"bottom\\" | \\"top\\"","value":[{"value":"\\"bottom\\""},{"value":"\\"top\\""}]}},"fontSize":{"defaultValue":null,"description":"Sets font size of all text inside table","name":"fontSize","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"highlightOnHover":{"defaultValue":null,"description":"If true row will have hover color","name":"highlightOnHover","required":false,"type":{"name":"boolean"}},"horizontalSpacing":{"defaultValue":null,"description":"Horizontal cells spacing from theme.spacing or any valid CSS value","name":"horizontalSpacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"striped":{"defaultValue":null,"description":"If true every odd row of table will have gray background color","name":"striped","required":false,"type":{"name":"boolean"}},"verticalSpacing":{"defaultValue":null,"description":"Vertical cells spacing from theme.spacing or any valid CSS value","name":"verticalSpacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withBorder":{"defaultValue":null,"description":"Add border to table","name":"withBorder","required":false,"type":{"name":"boolean"}},"withColumnBorders":{"defaultValue":null,"description":"Add border to columns","name":"withColumnBorders","required":false,"type":{"name":"boolean"}}}},"Tabs":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tabs/Tabs.tsx","displayName":"@mantine/core/Tabs","props":{"activateTabWithKeyboard":{"defaultValue":null,"description":"Determines whether tab should be activated with arrow key press, defaults to true","name":"activateTabWithKeyboard","required":false,"type":{"name":"boolean"}},"allowTabDeactivation":{"defaultValue":null,"description":"Determines whether tab can be deactivated, defaults to false","name":"allowTabDeactivation","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Tabs content","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string"}},"id":{"defaultValue":null,"description":"Base id, used to generate ids that connect labels with controls, by default generated randomly","name":"id","required":false,"type":{"name":"string"}},"inverted":{"defaultValue":null,"description":"Determines whether tabs should have inverted styles","name":"inverted","required":false,"type":{"name":"boolean"}},"keepMounted":{"defaultValue":null,"description":"If set to false, Tabs.Panel content will not stay mounted when tab is not active","name":"keepMounted","required":false,"type":{"name":"boolean"}},"loop":{"defaultValue":null,"description":"Determines whether arrow key presses should loop though items (first to last and last to first)","name":"loop","required":false,"type":{"name":"boolean"}},"onTabChange":{"defaultValue":null,"description":"Callback for controlled component","name":"onTabChange","required":false,"type":{"name":"(value: string) => void"}},"orientation":{"defaultValue":null,"description":"Tabs orientation, vertical or horizontal","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"TabsOrientation","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"placement":{"defaultValue":null,"description":"Tabs.List placement relative to Tabs.Panel, applicable only for orientation=\\"vertical\\", left by default","name":"placement","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"TabsPlacement","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Controls component visuals","name":"variant","required":false,"type":{"name":"TabsVariant"}}}},"Text":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Text/Text.tsx","displayName":"@mantine/core/Text","props":{"align":{"defaultValue":null,"description":"Sets text-align css property","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"center\\" | \\"end\\" | \\"start\\" | \\"justify\\" | \\"match-parent\\"","raw":"TextAlign","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"center\\""},{"value":"\\"end\\""},{"value":"\\"start\\""},{"value":"\\"justify\\""},{"value":"\\"match-parent\\""}]}},"children":{"defaultValue":null,"description":"Text content","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors or any valid CSS color","name":"color","required":false,"type":{"name":"DefaultMantineColor | \\"dimmed\\""}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"inherit":{"defaultValue":null,"description":"Inherit font properties from parent element","name":"inherit","required":false,"type":{"name":"boolean"}},"inline":{"defaultValue":null,"description":"Sets line-height to 1 for centering","name":"inline","required":false,"type":{"name":"boolean"}},"italic":{"defaultValue":null,"description":"Adds font-style: italic style","name":"italic","required":false,"type":{"name":"boolean"}},"lineClamp":{"defaultValue":null,"description":"CSS -webkit-line-clamp property","name":"lineClamp","required":false,"type":{"name":"number"}},"size":{"defaultValue":null,"description":"Key of theme.fontSizes or any valid CSS value to set font-size","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"span":{"defaultValue":null,"description":"Shorthand for component=\\"span\\"","name":"span","required":false,"type":{"name":"boolean"}},"strikethrough":{"defaultValue":null,"description":"Add strikethrough styles","name":"strikethrough","required":false,"type":{"name":"boolean"}},"transform":{"defaultValue":null,"description":"Sets text-transform css property","name":"transform","required":false,"type":{"name":"\\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"none\\" | \\"capitalize\\" | \\"full-size-kana\\" | \\"full-width\\" | \\"lowercase\\" | \\"uppercase\\"","raw":"TextTransform","value":[{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"none\\""},{"value":"\\"capitalize\\""},{"value":"\\"full-size-kana\\""},{"value":"\\"full-width\\""},{"value":"\\"lowercase\\""},{"value":"\\"uppercase\\""}]}},"truncate":{"defaultValue":null,"description":"CSS truncate overflowing text with an ellipsis","name":"truncate","required":false,"type":{"name":"boolean"}},"underline":{"defaultValue":null,"description":"Underline the text","name":"underline","required":false,"type":{"name":"boolean"}},"variant":{"defaultValue":null,"description":"Link or text variant","name":"variant","required":false,"type":{"name":"Variants<\\"text\\" | \\"gradient\\">"}},"weight":{"defaultValue":null,"description":"Sets font-weight css property","name":"weight","required":false,"type":{"name":"FontWeight"}}}},"TextInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/TextInput/TextInput.tsx","displayName":"@mantine/core/TextInput","props":{"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Input element type","name":"type","required":false,"type":{"name":"HTMLInputTypeAttribute"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"Textarea":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Textarea/Textarea.tsx","displayName":"@mantine/core/Textarea","props":{"autosize":{"defaultValue":null,"description":"If true textarea will grow with content until maxRows are reached","name":"autosize","required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"id":{"defaultValue":null,"description":"Id is used to bind input and label, if not passed unique id will be generated for each input","name":"id","required":false,"type":{"name":"string"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"maxRows":{"defaultValue":null,"description":"Defines maxRows in autosize variant, not applicable to regular variant","name":"maxRows","required":false,"type":{"name":"number"}},"minRows":{"defaultValue":null,"description":"Defined minRows in autosize variant and rows in regular variant","name":"minRows","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"ThemeIcon":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/ThemeIcon/ThemeIcon.tsx","displayName":"@mantine/core/ThemeIcon","props":{"children":{"defaultValue":null,"description":"Icon","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Icon color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Width and height of theme icon","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"variant":{"defaultValue":null,"description":"Controls appearance","name":"variant","required":false,"type":{"name":"Variants<\\"outline\\" | \\"light\\" | \\"default\\" | \\"filled\\" | \\"gradient\\">"}}}},"Timeline":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Timeline/Timeline.tsx","displayName":"@mantine/core/Timeline","props":{"active":{"defaultValue":null,"description":"Index of active element","name":"active","required":false,"type":{"name":"number"}},"align":{"defaultValue":null,"description":"Timeline alignment","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"bulletSize":{"defaultValue":null,"description":"Bullet size","name":"bulletSize","required":false,"type":{"name":"string | number"}},"children":{"defaultValue":null,"description":"<Timeline.Item /> components only","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Active color from theme","name":"color","required":false,"type":{"name":"MantineColor"}},"lineWidth":{"defaultValue":null,"description":"Line width","name":"lineWidth","required":false,"type":{"name":"string | number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"reverseActive":{"defaultValue":null,"description":"Reverse active direction without reversing items","name":"reverseActive","required":false,"type":{"name":"boolean"}}}},"Title":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Title/Title.tsx","displayName":"@mantine/core/Title","props":{"align":{"defaultValue":null,"description":"Sets text-align css property","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"center\\" | \\"end\\" | \\"start\\" | \\"justify\\" | \\"match-parent\\"","raw":"TextAlign","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"center\\""},{"value":"\\"end\\""},{"value":"\\"start\\""},{"value":"\\"justify\\""},{"value":"\\"match-parent\\""}]}},"children":{"defaultValue":null,"description":"Text content","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors or any valid CSS color","name":"color","required":false,"type":{"name":"DefaultMantineColor | \\"dimmed\\""}},"gradient":{"defaultValue":null,"description":"Controls gradient settings in gradient variant only","name":"gradient","required":false,"type":{"name":"MantineGradient"}},"inherit":{"defaultValue":null,"description":"Inherit font properties from parent element","name":"inherit","required":false,"type":{"name":"boolean"}},"inline":{"defaultValue":null,"description":"Sets line-height to 1 for centering","name":"inline","required":false,"type":{"name":"boolean"}},"italic":{"defaultValue":null,"description":"Adds font-style: italic style","name":"italic","required":false,"type":{"name":"boolean"}},"lineClamp":{"defaultValue":null,"description":"CSS -webkit-line-clamp property","name":"lineClamp","required":false,"type":{"name":"number"}},"order":{"defaultValue":null,"description":"Defines component and styles which will be used","name":"order","required":false,"type":{"name":"1 | 2 | 3 | 4 | 5 | 6","raw":"TitleOrder","value":[{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"size":{"defaultValue":null,"description":"Title font-size: h1-h6 or any valid CSS font-size value","name":"size","required":false,"type":{"name":"TitleSize"}},"strikethrough":{"defaultValue":null,"description":"Add strikethrough styles","name":"strikethrough","required":false,"type":{"name":"boolean"}},"transform":{"defaultValue":null,"description":"Sets text-transform css property","name":"transform","required":false,"type":{"name":"\\"-moz-initial\\" | \\"inherit\\" | \\"initial\\" | \\"revert\\" | \\"unset\\" | \\"none\\" | \\"capitalize\\" | \\"full-size-kana\\" | \\"full-width\\" | \\"lowercase\\" | \\"uppercase\\"","raw":"TextTransform","value":[{"value":"\\"-moz-initial\\""},{"value":"\\"inherit\\""},{"value":"\\"initial\\""},{"value":"\\"revert\\""},{"value":"\\"unset\\""},{"value":"\\"none\\""},{"value":"\\"capitalize\\""},{"value":"\\"full-size-kana\\""},{"value":"\\"full-width\\""},{"value":"\\"lowercase\\""},{"value":"\\"uppercase\\""}]}},"truncate":{"defaultValue":null,"description":"CSS truncate overflowing text with an ellipsis","name":"truncate","required":false,"type":{"name":"boolean"}},"underline":{"defaultValue":null,"description":"Underline the text","name":"underline","required":false,"type":{"name":"boolean"}},"weight":{"defaultValue":null,"description":"Sets font-weight css property","name":"weight","required":false,"type":{"name":"FontWeight"}}}},"Tooltip":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tooltip/Tooltip.tsx","displayName":"@mantine/core/Tooltip","props":{"arrowOffset":{"defaultValue":null,"description":"Arrow offset","name":"arrowOffset","required":false,"type":{"name":"number"}},"arrowPosition":{"defaultValue":null,"description":"Arrow position *","name":"arrowPosition","required":false,"type":{"name":"\\"center\\" | \\"side\\"","raw":"ArrowPosition","value":[{"value":"\\"center\\""},{"value":"\\"side\\""}]}},"arrowRadius":{"defaultValue":null,"description":"Arrow radius","name":"arrowRadius","required":false,"type":{"name":"number"}},"arrowSize":{"defaultValue":null,"description":"Arrow size","name":"arrowSize","required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"Target element","name":"children","required":true,"type":{"name":"ReactNode"}},"closeDelay":{"defaultValue":null,"description":"Close delay in ms","name":"closeDelay","required":false,"type":{"name":"number"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"Disables tooltip","name":"disabled","required":false,"type":{"name":"boolean"}},"events":{"defaultValue":null,"description":"Determines which events will be used to show tooltip","name":"events","required":false,"type":{"name":"{ hover: boolean; focus: boolean; touch: boolean; }"}},"inline":{"defaultValue":null,"description":"Set if tooltip is attached to an inline element","name":"inline","required":false,"type":{"name":"boolean"}},"keepMounted":{"defaultValue":null,"description":"If set tooltip will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Tooltip label","name":"label","required":true,"type":{"name":"ReactNode"}},"multiline":{"defaultValue":null,"description":"Defines whether content should be wrapped on to the next line","name":"multiline","required":false,"type":{"name":"boolean"}},"offset":{"defaultValue":null,"description":"Space between target element and tooltip","name":"offset","required":false,"type":{"name":"number"}},"onPositionChange":{"defaultValue":null,"description":"Called when tooltip position changes","name":"onPositionChange","required":false,"type":{"name":"(position: FloatingPosition) => void"}},"openDelay":{"defaultValue":null,"description":"Open delay in ms","name":"openDelay","required":false,"type":{"name":"number"}},"opened":{"defaultValue":null,"description":"Controls opened state","name":"opened","required":false,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Tooltip position relative to target element (default) or mouse (floating)","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left-end\\" | \\"left-start\\" | \\"right-end\\" | \\"right-start\\" | \\"top-end\\" | \\"top-start\\"","raw":"FloatingPosition","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""},{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"left-end\\""},{"value":"\\"left-start\\""},{"value":"\\"right-end\\""},{"value":"\\"right-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""}]}},"positionDependencies":{"defaultValue":null,"description":"useEffect dependencies to force update tooltip position","name":"positionDependencies","required":false,"type":{"name":"any[]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"refProp":{"defaultValue":null,"description":"Key of the prop that should be used to get element ref","name":"refProp","required":false,"type":{"name":"string"}},"transition":{"defaultValue":null,"description":"One of premade transitions ot transition object","name":"transition","required":false,"type":{"name":"MantineTransition"}},"transitionDuration":{"defaultValue":null,"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"width":{"defaultValue":null,"description":"Tooltip width","name":"width","required":false,"type":{"name":"number | \\"auto\\""}},"withArrow":{"defaultValue":null,"description":"Determines whether component should have an arrow","name":"withArrow","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether tooltip should be rendered within Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Tooltip z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"TransferList":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/TransferList/TransferList.tsx","displayName":"@mantine/core/TransferList","props":{"breakpoint":{"defaultValue":null,"description":"Breakpoint at which list will collapse to single column layout","name":"breakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"filter":{"defaultValue":null,"description":"Function to filter search results","name":"filter","required":false,"type":{"name":"(query: string, item: TransferListItem) => boolean"}},"initialSelection":{"defaultValue":null,"description":"Initial items selection","name":"initialSelection","required":false,"type":{"name":"Selection"}},"itemComponent":{"defaultValue":null,"description":"Custom item component","name":"itemComponent","required":false,"type":{"name":"TransferListItemComponent"}},"limit":{"defaultValue":null,"description":"Limit amount of items showed at a time","name":"limit","required":false,"type":{"name":"number"}},"listComponent":{"defaultValue":null,"description":"Change list component, can be used to add custom scrollbars","name":"listComponent","required":false,"type":{"name":"any"}},"listHeight":{"defaultValue":null,"description":"List items height","name":"listHeight","required":false,"type":{"name":"number"}},"nothingFound":{"defaultValue":null,"description":"Nothing found message","name":"nothingFound","required":false,"type":{"name":"ReactNode | [ReactNode, ReactNode]"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":true,"type":{"name":"(value: TransferListData) => void"}},"onSearch":{"defaultValue":null,"description":"Called when one of the search queries changes","name":"onSearch","required":false,"type":{"name":"(value: [string, string]) => void"}},"placeholder":{"defaultValue":null,"description":"Displayed when a list is empty and there is no search query","name":"placeholder","required":false,"type":{"name":"ReactNode | [ReactNode, ReactNode]"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"searchPlaceholder":{"defaultValue":null,"description":"Search fields placeholder","name":"searchPlaceholder","required":false,"type":{"name":"string | [string, string]"}},"searchValues":{"defaultValue":null,"description":"Controlled search queries","name":"searchValues","required":false,"type":{"name":"[string, string]"}},"showTransferAll":{"defaultValue":null,"description":"Whether to hide the transfer all button","name":"showTransferAll","required":false,"type":{"name":"boolean"}},"titles":{"defaultValue":null,"description":"Lists titles","name":"titles","required":false,"type":{"name":"[string, string]"}},"transferAllIcon":{"defaultValue":null,"description":"Change icon used for the transfer all control","name":"transferAllIcon","required":false,"type":{"name":"FunctionComponent<{ reversed: boolean; }>"}},"transferAllMatchingFilter":{"defaultValue":null,"description":"Whether to transfer only items matching {@link filter} when clicking the transfer all control","name":"transferAllMatchingFilter","required":false,"type":{"name":"boolean"}},"transferIcon":{"defaultValue":null,"description":"Change icon used for the transfer selected control","name":"transferIcon","required":false,"type":{"name":"FunctionComponent<{ reversed: boolean; }>"}},"value":{"defaultValue":null,"description":"Current value","name":"value","required":true,"type":{"name":"TransferListData"}}}},"Transition":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Transition/Transition.tsx","displayName":"@mantine/core/Transition","props":{"children":{"defaultValue":null,"description":"Render function with transition styles argument","name":"children","required":true,"type":{"name":"(styles: CSSProperties) => ReactElement<any, any>"}},"duration":{"defaultValue":{"value":"250"},"description":"Transition duration in ms","name":"duration","required":false,"type":{"name":"number"}},"exitDuration":{"defaultValue":{"value":"250"},"description":"Exit transition duration in ms","name":"exitDuration","required":false,"type":{"name":"number"}},"keepMounted":{"defaultValue":null,"description":"If set element will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"mounted":{"defaultValue":null,"description":"When true, component will be mounted","name":"mounted","required":true,"type":{"name":"boolean"}},"onEnter":{"defaultValue":null,"description":"Calls when enter transition starts","name":"onEnter","required":false,"type":{"name":"() => void"}},"onEntered":{"defaultValue":null,"description":"Calls when enter transition ends","name":"onEntered","required":false,"type":{"name":"() => void"}},"onExit":{"defaultValue":null,"description":"Calls when exit transition starts","name":"onExit","required":false,"type":{"name":"() => void"}},"onExited":{"defaultValue":null,"description":"Calls when exit transition ends","name":"onExited","required":false,"type":{"name":"() => void"}},"timingFunction":{"defaultValue":null,"description":"Transition timing function, defaults to theme.transitionTimingFunction","name":"timingFunction","required":false,"type":{"name":"string"}},"transition":{"defaultValue":null,"description":"Predefined transition name or transition styles","name":"transition","required":true,"type":{"name":"MantineTransition"}}}},"TypographyStylesProvider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/TypographyStylesProvider/TypographyStylesProvider.tsx","displayName":"@mantine/core/TypographyStylesProvider","props":{"children":{"defaultValue":null,"description":"Render any content to add Mantine typography styles","name":"children","required":true,"type":{"name":"ReactNode"}}}},"UnstyledButton":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/UnstyledButton/UnstyledButton.tsx","description":"","displayName":"@mantine/core/UnstyledButton","props":{}},"Calendar":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/Calendar/Calendar.tsx","displayName":"@mantine/dates/Calendar","props":{"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"maxLevel":{"defaultValue":null,"description":"Max level that user can go up to (decade, year, month), defaults to decade","name":"maxLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"minLevel":{"defaultValue":null,"description":"Min level that user can go down to (decade, year, month), defaults to month","name":"minLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: CalendarLevel) => void"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onMonthMouseEnter":{"defaultValue":null,"description":"Called when mouse enters month control","name":"onMonthMouseEnter","required":false,"type":{"name":"(event: MouseEvent<HTMLButtonElement, MouseEvent>, date: Date) => void"}},"onMonthSelect":{"defaultValue":null,"description":"Called when user clicks month on year level","name":"onMonthSelect","required":false,"type":{"name":"(date: Date) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextMonth":{"defaultValue":null,"description":"Called when next month button is clicked","name":"onNextMonth","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousMonth":{"defaultValue":null,"description":"Called when previous month button is clicked","name":"onPreviousMonth","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"onYearMouseEnter":{"defaultValue":null,"description":"Called when mouse enters year control","name":"onYearMouseEnter","required":false,"type":{"name":"(event: MouseEvent<HTMLButtonElement, MouseEvent>, date: Date) => void"}},"onYearSelect":{"defaultValue":null,"description":"Called when user clicks year on decade level","name":"onYearSelect","required":false,"type":{"name":"(date: Date) => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"static":{"defaultValue":null,"description":"Determines whether days should be static, static days can be used to display month if it is not expected that user will interact with the component in any way","name":"static","required":false,"type":{"name":"boolean"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"CalendarHeader":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/CalendarHeader/CalendarHeader.tsx","displayName":"@mantine/dates/CalendarHeader","props":{"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Label displayed between next and previous buttons","name":"label","required":true,"type":{"name":"ReactNode"}},"levelControlAriaLabel":{"defaultValue":null,"description":"aria-label for level control","name":"levelControlAriaLabel","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}}}},"DateInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DateInput/DateInput.tsx","displayName":"@mantine/dates/DateInput","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether value can be deselected when the user clicks on the selected date in the calendar or erases content of the input, true if clearable prop is set, false by default","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"dateParser":{"defaultValue":null,"description":"Parses user input to convert it to Date object","name":"dateParser","required":false,"type":{"name":"(value: string) => Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"fixOnBlur":{"defaultValue":null,"description":"Determines whether input value should be reverted to last known valid value on blur, true by default","name":"fixOnBlur","required":false,"type":{"name":"boolean"}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: Date) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextMonth":{"defaultValue":null,"description":"Called when next month button is clicked","name":"onNextMonth","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousMonth":{"defaultValue":null,"description":"Called when previous month button is clicked","name":"onPreviousMonth","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"preserveTime":{"defaultValue":null,"description":"Determines whether time (hours, minutes, seconds and milliseconds) should be preserved when new date is picked, true by default","name":"preserveTime","required":false,"type":{"name":"boolean"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date"}},"valueFormat":{"defaultValue":null,"description":"Dayjs format to display input value, \\"MMMM D, YYYY\\" by default","name":"valueFormat","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"DatePicker":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DatePicker/DatePicker.tsx","displayName":"@mantine/dates/DatePicker","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"maxLevel":{"defaultValue":null,"description":"Max level that user can go up to (decade, year, month), defaults to decade","name":"maxLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: CalendarLevel) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextMonth":{"defaultValue":null,"description":"Called when next month button is clicked","name":"onNextMonth","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousMonth":{"defaultValue":null,"description":"Called when previous month button is clicked","name":"onPreviousMonth","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"DatePickerInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DatePickerInput/DatePickerInput.tsx","displayName":"@mantine/dates/DatePickerInput","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"closeOnChange":{"defaultValue":null,"description":"Determines whether dropdown should be closed when date is selected, not applicable when type=\\"multiple\\", true by default","name":"closeOnChange","required":false,"type":{"name":"boolean"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownType":{"defaultValue":null,"description":"Type of dropdown, defaults to popover","name":"dropdownType","required":false,"type":{"name":"\\"modal\\" | \\"popover\\"","raw":"\\"modal\\" | \\"popover\\"","value":[{"value":"\\"modal\\""},{"value":"\\"popover\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"maxLevel":{"defaultValue":null,"description":"Max level that user can go up to (decade, year, month), defaults to decade","name":"maxLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"modalProps":{"defaultValue":null,"description":"Props added to Modal component","name":"modalProps","required":false,"type":{"name":"Partial<Omit<ModalProps, \\"children\\">>"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: CalendarLevel) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextMonth":{"defaultValue":null,"description":"Called when next month button is clicked","name":"onNextMonth","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousMonth":{"defaultValue":null,"description":"Called when previous month button is clicked","name":"onPreviousMonth","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can modify the value","name":"readOnly","required":false,"type":{"name":"boolean"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sortDates":{"defaultValue":null,"description":"Determines whether dates value should be sorted before onChange call, only applicable when type=\\"multiple\\", true by default","name":"sortDates","required":false,"type":{"name":"boolean"}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"valueFormat":{"defaultValue":null,"description":"Dayjs format to display input value, \\"MMMM D, YYYY\\" by default","name":"valueFormat","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"DateTimePicker":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DateTimePicker/DateTimePicker.tsx","displayName":"@mantine/dates/DateTimePicker","props":{"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownType":{"defaultValue":null,"description":"Type of dropdown, defaults to popover","name":"dropdownType","required":false,"type":{"name":"\\"modal\\" | \\"popover\\"","raw":"\\"modal\\" | \\"popover\\"","value":[{"value":"\\"modal\\""},{"value":"\\"popover\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"month\\" | \\"year\\" | \\"decade\\"","raw":"CalendarLevel","value":[{"value":"\\"month\\""},{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"modalProps":{"defaultValue":null,"description":"Props added to Modal component","name":"modalProps","required":false,"type":{"name":"Partial<Omit<ModalProps, \\"children\\">>"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: Date) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: CalendarLevel) => void"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onMonthSelect":{"defaultValue":null,"description":"Called when user clicks month on year level","name":"onMonthSelect","required":false,"type":{"name":"(date: Date) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextMonth":{"defaultValue":null,"description":"Called when next month button is clicked","name":"onNextMonth","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousMonth":{"defaultValue":null,"description":"Called when previous month button is clicked","name":"onPreviousMonth","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"onYearSelect":{"defaultValue":null,"description":"Called when user clicks year on decade level","name":"onYearSelect","required":false,"type":{"name":"(date: Date) => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can modify the value","name":"readOnly","required":false,"type":{"name":"boolean"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sortDates":{"defaultValue":null,"description":"Determines whether dates value should be sorted before onChange call, only applicable when type=\\"multiple\\", true by default","name":"sortDates","required":false,"type":{"name":"boolean"}},"submitButtonProps":{"defaultValue":null,"description":"Props added to submit button","name":"submitButtonProps","required":false,"type":{"name":"ActionIconProps & Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"timeInputProps":{"defaultValue":null,"description":"TimeInput component props","name":"timeInputProps","required":false,"type":{"name":"TimeInputProps"}},"value":{"defaultValue":null,"description":"Controlled component value","name":"value","required":false,"type":{"name":"Date"}},"valueFormat":{"defaultValue":null,"description":"Dayjs format to display input value, \\"DD/MM/YYYY HH:mm\\" by default","name":"valueFormat","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}},"withSeconds":{"defaultValue":null,"description":"Determines whether seconds input should be rendered","name":"withSeconds","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"DatesProvider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DatesProvider/DatesProvider.tsx","displayName":"DatesProvider","props":{"settings":{"defaultValue":null,"description":"","name":"settings","required":true,"type":{"name":"Partial<DatesProviderValue>"}}}},"Day":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/Day/Day.tsx","displayName":"@mantine/dates/Day","props":{"date":{"defaultValue":null,"description":"Date that should be displayed","name":"date","required":true,"type":{"name":"Date"}},"firstInRange":{"defaultValue":null,"description":"Determines whether day is first in range selection","name":"firstInRange","required":false,"type":{"name":"boolean"}},"hidden":{"defaultValue":null,"description":"Determines whether the day should not de displayed","name":"hidden","required":false,"type":{"name":"boolean"}},"inRange":{"defaultValue":null,"description":"Determines whether day is selected in range","name":"inRange","required":false,"type":{"name":"boolean"}},"lastInRange":{"defaultValue":null,"description":"Determines whether day is last in range selection","name":"lastInRange","required":false,"type":{"name":"boolean"}},"outside":{"defaultValue":null,"description":"Determines whether the day is outside of current month","name":"outside","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"selected":{"defaultValue":null,"description":"Determines whether the day is selected","name":"selected","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Day size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"static":{"defaultValue":null,"description":"Determines which element should be used as root, button by default, div if static prop is set","name":"static","required":false,"type":{"name":"boolean"}},"weekend":{"defaultValue":null,"description":"Determines whether the day should be considered to be a weekend","name":"weekend","required":false,"type":{"name":"boolean"}}}},"DecadeLevel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DecadeLevel/DecadeLevel.tsx","displayName":"@mantine/dates/DecadeLevel","props":{"decade":{"defaultValue":null,"description":"Decade that is currently displayed","name":"decade","required":true,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"levelControlAriaLabel":{"defaultValue":null,"description":"aria-label for change level control","name":"levelControlAriaLabel","required":false,"type":{"name":"string"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"DecadeLevelGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/DecadeLevelGroup/DecadeLevelGroup.tsx","displayName":"@mantine/dates/DecadeLevelGroup","props":{"decade":{"defaultValue":null,"description":"Decade that is currently displayed","name":"decade","required":true,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"levelControlAriaLabel":{"defaultValue":null,"description":"Function that returns level control aria-label based on year date","name":"levelControlAriaLabel","required":false,"type":{"name":"string | ((decade: Date) => string)"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"HiddenDatesInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/HiddenDatesInput/HiddenDatesInput.tsx","displayName":"@mantine/dates/HiddenDatesInput","props":{"form":{"defaultValue":null,"description":"","name":"form","required":true,"type":{"name":"string"}},"name":{"defaultValue":null,"description":"","name":"name","required":true,"type":{"name":"string"}},"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"","name":"value","required":true,"type":{"name":"HiddenDatesInputValue"}}}},"Month":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/Month/Month.tsx","displayName":"@mantine/dates/Month","props":{"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"month":{"defaultValue":null,"description":"Month to display","name":"month","required":true,"type":{"name":"Date"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"size":{"defaultValue":null,"description":"Controls size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"static":{"defaultValue":null,"description":"Determines whether days should be static, static days can be used to display month if it is not expected that user will interact with the component in any way","name":"static","required":false,"type":{"name":"boolean"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}}}},"MonthLevel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/MonthLevel/MonthLevel.tsx","displayName":"@mantine/dates/MonthLevel","props":{"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"levelControlAriaLabel":{"defaultValue":null,"description":"aria-label for change level control","name":"levelControlAriaLabel","required":false,"type":{"name":"string"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"month":{"defaultValue":null,"description":"Month that is currently displayed","name":"month","required":true,"type":{"name":"Date"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"size":{"defaultValue":null,"description":"Controls size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"static":{"defaultValue":null,"description":"Determines whether days should be static, static days can be used to display month if it is not expected that user will interact with the component in any way","name":"static","required":false,"type":{"name":"boolean"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}}}},"MonthLevelGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/MonthLevelGroup/MonthLevelGroup.tsx","displayName":"@mantine/dates/MonthLevelGroup","props":{"excludeDate":{"defaultValue":null,"description":"Callback function to determine whether the day should be disabled","name":"excludeDate","required":false,"type":{"name":"(date: Date) => boolean"}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"getDayAriaLabel":{"defaultValue":null,"description":"Assigns aria-label to days based on date","name":"getDayAriaLabel","required":false,"type":{"name":"(date: Date) => string"}},"getDayProps":{"defaultValue":null,"description":"Adds props to Day component based on date","name":"getDayProps","required":false,"type":{"name":"(date: Date) => Partial<DayProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"hideOutsideDates":{"defaultValue":null,"description":"Determines whether outside dates should be hidden, defaults to false","name":"hideOutsideDates","required":false,"type":{"name":"boolean"}},"hideWeekdays":{"defaultValue":null,"description":"Determines whether weekdays row should be hidden, defaults to false","name":"hideWeekdays","required":false,"type":{"name":"boolean"}},"levelControlAriaLabel":{"defaultValue":null,"description":"Function that returns level control aria-label based on month date","name":"levelControlAriaLabel","required":false,"type":{"name":"string | ((month: Date) => string)"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"month":{"defaultValue":null,"description":"Month that is currently displayed","name":"month","required":true,"type":{"name":"Date"}},"monthLabelFormat":{"defaultValue":null,"description":"dayjs label format to display month label or a function that returns month label based on month value, defaults to \\"MMMM YYYY\\"","name":"monthLabelFormat","required":false,"type":{"name":"string | ((month: Date) => ReactNode)"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"renderDay":{"defaultValue":null,"description":"Controls day value rendering","name":"renderDay","required":false,"type":{"name":"(date: Date) => ReactNode"}},"size":{"defaultValue":null,"description":"Controls size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"static":{"defaultValue":null,"description":"Determines whether days should be static, static days can be used to display month if it is not expected that user will interact with the component in any way","name":"static","required":false,"type":{"name":"boolean"}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format for weekdays names, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}},"weekendDays":{"defaultValue":null,"description":"Indices of weekend days, 0-6, where 0 is Sunday and 6 is Saturday, defaults to value defined in DatesProvider","name":"weekendDays","required":false,"type":{"name":"DayOfWeek[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}}}},"MonthPicker":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/MonthPicker/MonthPicker.tsx","displayName":"@mantine/dates/MonthPicker","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"maxLevel":{"defaultValue":null,"description":"Max level that user can go up to (decade, year), defaults to decade","name":"maxLevel","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: MonthPickerLevel) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"MonthPickerInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/MonthPickerInput/MonthPickerInput.tsx","displayName":"@mantine/dates/MonthPickerInput","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"closeOnChange":{"defaultValue":null,"description":"Determines whether dropdown should be closed when date is selected, not applicable when type=\\"multiple\\", true by default","name":"closeOnChange","required":false,"type":{"name":"boolean"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultLevel":{"defaultValue":null,"description":"Initial level displayed to the user (decade, year, month), used for uncontrolled component","name":"defaultLevel","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownType":{"defaultValue":null,"description":"Type of dropdown, defaults to popover","name":"dropdownType","required":false,"type":{"name":"\\"modal\\" | \\"popover\\"","raw":"\\"modal\\" | \\"popover\\"","value":[{"value":"\\"modal\\""},{"value":"\\"popover\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"level":{"defaultValue":null,"description":"Current level displayed to the user (decade, year, month), used for controlled component","name":"level","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"maxLevel":{"defaultValue":null,"description":"Max level that user can go up to (decade, year), defaults to decade","name":"maxLevel","required":false,"type":{"name":"\\"year\\" | \\"decade\\"","raw":"MonthPickerLevel","value":[{"value":"\\"year\\""},{"value":"\\"decade\\""}]}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"modalProps":{"defaultValue":null,"description":"Props added to Modal component","name":"modalProps","required":false,"type":{"name":"Partial<Omit<ModalProps, \\"children\\">>"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onLevelChange":{"defaultValue":null,"description":"Called when level changes","name":"onLevelChange","required":false,"type":{"name":"(level: MonthPickerLevel) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onNextYear":{"defaultValue":null,"description":"Called when next year button is clicked","name":"onNextYear","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousYear":{"defaultValue":null,"description":"Called when previous year button is clicked","name":"onPreviousYear","required":false,"type":{"name":"(date: Date) => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can modify the value","name":"readOnly","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sortDates":{"defaultValue":null,"description":"Determines whether dates value should be sorted before onChange call, only applicable when type=\\"multiple\\", true by default","name":"sortDates","required":false,"type":{"name":"boolean"}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"valueFormat":{"defaultValue":null,"description":"Dayjs format to display input value, \\"MMMM YYYY\\" by default","name":"valueFormat","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"MonthsList":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/MonthsList/MonthsList.tsx","displayName":"@mantine/dates/MonthsList","props":{"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"year":{"defaultValue":null,"description":"Year for which months list should be displayed","name":"year","required":true,"type":{"name":"Date"}}}},"PickerControl":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/PickerControl/PickerControl.tsx","displayName":"@mantine/dates/PickerControl","props":{"children":{"defaultValue":null,"description":"Control children","name":"children","required":false,"type":{"name":"ReactNode"}},"disabled":{"defaultValue":null,"description":"Determines whether control should be disabled","name":"disabled","required":false,"type":{"name":"boolean"}},"firstInRange":{"defaultValue":null,"description":"Determines whether control is first in range selection","name":"firstInRange","required":false,"type":{"name":"boolean"}},"inRange":{"defaultValue":null,"description":"Determines whether control is selected in range","name":"inRange","required":false,"type":{"name":"boolean"}},"lastInRange":{"defaultValue":null,"description":"Determines whether control is last in range selection","name":"lastInRange","required":false,"type":{"name":"boolean"}},"selected":{"defaultValue":null,"description":"Determines whether control should have selected styles","name":"selected","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"PickerInputBase":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/PickerInputBase/PickerInputBase.tsx","displayName":"@mantine/dates/PickerInputBase","props":{"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"closeOnChange":{"defaultValue":null,"description":"Determines whether dropdown should be closed when date is selected, not applicable when type=\\"multiple\\", true by default","name":"closeOnChange","required":false,"type":{"name":"boolean"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownHandlers":{"defaultValue":null,"description":"","name":"dropdownHandlers","required":true,"type":{"name":"{ readonly open: () => void; readonly close: () => void; readonly toggle: () => void; }"}},"dropdownOpened":{"defaultValue":null,"description":"","name":"dropdownOpened","required":true,"type":{"name":"boolean"}},"dropdownType":{"defaultValue":null,"description":"Type of dropdown, defaults to popover","name":"dropdownType","required":false,"type":{"name":"\\"modal\\" | \\"popover\\"","raw":"\\"modal\\" | \\"popover\\"","value":[{"value":"\\"modal\\""},{"value":"\\"popover\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"formattedValue":{"defaultValue":null,"description":"","name":"formattedValue","required":true,"type":{"name":"string"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"modalProps":{"defaultValue":null,"description":"Props added to Modal component","name":"modalProps","required":false,"type":{"name":"Partial<Omit<ModalProps, \\"children\\">>"}},"onClear":{"defaultValue":null,"description":"","name":"onClear","required":true,"type":{"name":"() => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can modify the value","name":"readOnly","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"shouldClear":{"defaultValue":null,"description":"","name":"shouldClear","required":true,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sortDates":{"defaultValue":null,"description":"Determines whether dates value should be sorted before onChange call, only applicable when type=\\"multiple\\", true by default","name":"sortDates","required":false,"type":{"name":"boolean"}},"type":{"defaultValue":null,"description":"","name":"type","required":true,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"","name":"value","required":true,"type":{"name":"HiddenDatesInputValue"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"TimeInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/TimeInput/TimeInput.tsx","displayName":"@mantine/dates/TimeInput","props":{"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Input element type","name":"type","required":false,"type":{"name":"HTMLInputTypeAttribute"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withSeconds":{"defaultValue":null,"description":"Determines whether seconds input should be rendered","name":"withSeconds","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props passed to root element (InputWrapper component)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"WeekdaysRow":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/WeekdaysRow/WeekdaysRow.tsx","displayName":"@mantine/dates/WeekdaysRow","props":{"cellComponent":{"defaultValue":null,"description":"Choose cell type that will be used to render weekdays, defaults to th","name":"cellComponent","required":false,"type":{"name":"\\"td\\" | \\"th\\"","raw":"\\"td\\" | \\"th\\"","value":[{"value":"\\"td\\""},{"value":"\\"th\\""}]}},"firstDayOfWeek":{"defaultValue":null,"description":"number 0-6, 0 – Sunday, 6 – Saturday, defaults to 1 – Monday","name":"firstDayOfWeek","required":false,"type":{"name":"0 | 1 | 2 | 3 | 4 | 5 | 6","raw":"DayOfWeek","value":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"}]}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Controls size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"weekdayFormat":{"defaultValue":null,"description":"dayjs format to get weekday name, defaults to \\"dd\\"","name":"weekdayFormat","required":false,"type":{"name":"string"}}}},"YearLevel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/YearLevel/YearLevel.tsx","displayName":"@mantine/dates/YearLevel","props":{"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"levelControlAriaLabel":{"defaultValue":null,"description":"aria-label for change level control","name":"levelControlAriaLabel","required":false,"type":{"name":"string"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"withNext":{"defaultValue":null,"description":"Determines whether next control should be rendered, defaults to true","name":"withNext","required":false,"type":{"name":"boolean"}},"withPrevious":{"defaultValue":null,"description":"Determines whether previous control should be rendered, defaults to true","name":"withPrevious","required":false,"type":{"name":"boolean"}},"year":{"defaultValue":null,"description":"Year that is currently displayed","name":"year","required":true,"type":{"name":"Date"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}}}},"YearLevelGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/YearLevelGroup/YearLevelGroup.tsx","displayName":"@mantine/dates/YearLevelGroup","props":{"getMonthControlProps":{"defaultValue":null,"description":"Adds props to month picker control based on date","name":"getMonthControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"hasNextLevel":{"defaultValue":null,"description":"Determines whether next level button should be enabled, defaults to true","name":"hasNextLevel","required":false,"type":{"name":"boolean"}},"levelControlAriaLabel":{"defaultValue":null,"description":"Function that returns level control aria-label based on year date","name":"levelControlAriaLabel","required":false,"type":{"name":"string | ((year: Date) => string)"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"monthsListFormat":{"defaultValue":null,"description":"dayjs format for months list","name":"monthsListFormat","required":false,"type":{"name":"string"}},"nextDisabled":{"defaultValue":null,"description":"Determines whether next control should be disabled, defaults to true","name":"nextDisabled","required":false,"type":{"name":"boolean"}},"nextIcon":{"defaultValue":null,"description":"Change next icon","name":"nextIcon","required":false,"type":{"name":"ReactNode"}},"nextLabel":{"defaultValue":null,"description":"aria-label for next button","name":"nextLabel","required":false,"type":{"name":"string"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onLevelClick":{"defaultValue":null,"description":"Called when level button is clicked","name":"onLevelClick","required":false,"type":{"name":"() => void"}},"onNext":{"defaultValue":null,"description":"Called when next button is clicked","name":"onNext","required":false,"type":{"name":"() => void"}},"onPrevious":{"defaultValue":null,"description":"Called when previous button is clicked","name":"onPrevious","required":false,"type":{"name":"() => void"}},"previousDisabled":{"defaultValue":null,"description":"Determines whether previous control should be disabled, defaults to true","name":"previousDisabled","required":false,"type":{"name":"boolean"}},"previousIcon":{"defaultValue":null,"description":"Change previous icon","name":"previousIcon","required":false,"type":{"name":"ReactNode"}},"previousLabel":{"defaultValue":null,"description":"aria-label for previous button","name":"previousLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"year":{"defaultValue":null,"description":"Year that is currently displayed","name":"year","required":true,"type":{"name":"Date"}},"yearLabelFormat":{"defaultValue":null,"description":"dayjs label format to display year label or a function that returns year label based on year value, defaults to \\"YYYY\\"","name":"yearLabelFormat","required":false,"type":{"name":"string | ((year: Date) => ReactNode)"}}}},"YearPicker":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/YearPicker/YearPicker.tsx","displayName":"@mantine/dates/YearPicker","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"YearPickerInput":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/YearPickerInput/YearPickerInput.tsx","displayName":"@mantine/dates/YearPickerInput","props":{"allowDeselect":{"defaultValue":null,"description":"Determines whether user can deselect the date by clicking on selected item, applicable only when type=\\"default\\"","name":"allowDeselect","required":false,"type":{"name":"boolean"}},"allowSingleDateInRange":{"defaultValue":null,"description":"Determines whether single year can be selected as range, applicable only when type=\\"range\\"","name":"allowSingleDateInRange","required":false,"type":{"name":"boolean"}},"ariaLabels":{"defaultValue":null,"description":"aria-label attributes for controls on different levels","name":"ariaLabels","required":false,"type":{"name":"CalendarAriaLabels"}},"clearButtonProps":{"defaultValue":null,"description":"Props added to clear button","name":"clearButtonProps","required":false,"type":{"name":"Pick<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, \\"key\\" | keyof ButtonHTMLAttributes<...>>"}},"clearable":{"defaultValue":null,"description":"Determines whether input value can be cleared, adds clear button to right section, false by default","name":"clearable","required":false,"type":{"name":"boolean"}},"closeOnChange":{"defaultValue":null,"description":"Determines whether dropdown should be closed when date is selected, not applicable when type=\\"multiple\\", true by default","name":"closeOnChange","required":false,"type":{"name":"boolean"}},"columnsToScroll":{"defaultValue":null,"description":"Number of columns to scroll when user clicks next/prev buttons, defaults to numberOfColumns","name":"columnsToScroll","required":false,"type":{"name":"number"}},"date":{"defaultValue":null,"description":"Date that is displayed, used for controlled component","name":"date","required":false,"type":{"name":"Date"}},"decadeLabelFormat":{"defaultValue":null,"description":"dayjs label format to display decade label or a function that returns decade label based on date value, defaults to \\"YYYY\\"","name":"decadeLabelFormat","required":false,"type":{"name":"string | ((startOfDecade: Date, endOfDecade: Date) => ReactNode)"}},"defaultDate":{"defaultValue":null,"description":"Initial date that is displayed, used for uncontrolled component","name":"defaultDate","required":false,"type":{"name":"Date"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"disabled":{"defaultValue":null,"description":"Disabled input state","name":"disabled","required":false,"type":{"name":"boolean"}},"dropdownType":{"defaultValue":null,"description":"Type of dropdown, defaults to popover","name":"dropdownType","required":false,"type":{"name":"\\"modal\\" | \\"popover\\"","raw":"\\"modal\\" | \\"popover\\"","value":[{"value":"\\"modal\\""},{"value":"\\"popover\\""}]}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"icon":{"defaultValue":null,"description":"Adds icon on the left side of input","name":"icon","required":false,"type":{"name":"ReactNode"}},"iconWidth":{"defaultValue":null,"description":"Width of icon section","name":"iconWidth","required":false,"type":{"name":"Width<string | number>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"modalProps":{"defaultValue":null,"description":"Props added to Modal component","name":"modalProps","required":false,"type":{"name":"Partial<Omit<ModalProps, \\"children\\">>"}},"numberOfColumns":{"defaultValue":null,"description":"Number of columns to render next to each other","name":"numberOfColumns","required":false,"type":{"name":"number"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: DatePickerValue<Type>) => void"}},"onDateChange":{"defaultValue":null,"description":"Called when date changes","name":"onDateChange","required":false,"type":{"name":"(date: Date) => void"}},"onNextDecade":{"defaultValue":null,"description":"Called when next decade button is clicked","name":"onNextDecade","required":false,"type":{"name":"(date: Date) => void"}},"onPreviousDecade":{"defaultValue":null,"description":"Called when previous decade button is clicked","name":"onPreviousDecade","required":false,"type":{"name":"(date: Date) => void"}},"popoverProps":{"defaultValue":null,"description":"Props added to Popover component","name":"popoverProps","required":false,"type":{"name":"Partial<Omit<PopoverProps, \\"children\\">>"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"readOnly":{"defaultValue":null,"description":"Determines whether the user can modify the value","name":"readOnly","required":false,"type":{"name":"boolean"}},"required":{"defaultValue":null,"description":"Sets required on input element","name":"required","required":false,"type":{"name":"boolean"}},"rightSection":{"defaultValue":null,"description":"Right section of input, similar to icon but on the right","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"rightSectionProps":{"defaultValue":null,"description":"Props spread to rightSection div element","name":"rightSectionProps","required":false,"type":{"name":"Record<string, any>"}},"rightSectionWidth":{"defaultValue":null,"description":"Width of right section, is used to calculate input padding-right","name":"rightSectionWidth","required":false,"type":{"name":"Width<string | number>"}},"size":{"defaultValue":null,"description":"Input size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"sortDates":{"defaultValue":null,"description":"Determines whether dates value should be sorted before onChange call, only applicable when type=\\"multiple\\", true by default","name":"sortDates","required":false,"type":{"name":"boolean"}},"type":{"defaultValue":null,"description":"Picker type: range, multiple or default","name":"type","required":false,"type":{"name":"\\"default\\" | \\"multiple\\" | \\"range\\"","raw":"DatePickerType","value":[{"value":"\\"default\\""},{"value":"\\"multiple\\""},{"value":"\\"range\\""}]}},"value":{"defaultValue":null,"description":"Value for controlled component","name":"value","required":false,"type":{"name":"Date | DatesRangeValue | Date[]"}},"valueFormat":{"defaultValue":null,"description":"Dayjs format to display input value, \\"YYYY\\" by default","name":"valueFormat","required":false,"type":{"name":"string"}},"variant":{"defaultValue":null,"description":"Defines input appearance, defaults to default in light color scheme and filled in dark","name":"variant","required":false,"type":{"name":"Variants<\\"unstyled\\" | \\"default\\" | \\"filled\\">"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Properties spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"YearsList":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dates/src/components/YearsList/YearsList.tsx","displayName":"@mantine/dates/YearsList","props":{"decade":{"defaultValue":null,"description":"Decade for which years list should be displayed","name":"decade","required":true,"type":{"name":"Date"}},"getYearControlProps":{"defaultValue":null,"description":"Adds props to year picker control based on date","name":"getYearControlProps","required":false,"type":{"name":"(date: Date) => Partial<PickerControlProps>"}},"locale":{"defaultValue":null,"description":"dayjs locale, defaults to value defined in DatesProvider","name":"locale","required":false,"type":{"name":"string"}},"maxDate":{"defaultValue":null,"description":"Maximum possible date","name":"maxDate","required":false,"type":{"name":"Date"}},"minDate":{"defaultValue":null,"description":"Minimum possible date","name":"minDate","required":false,"type":{"name":"Date"}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withCellSpacing":{"defaultValue":null,"description":"Determines whether controls should be separated by spacing, true by default","name":"withCellSpacing","required":false,"type":{"name":"boolean"}},"yearsListFormat":{"defaultValue":null,"description":"dayjs format for years list","name":"yearsListFormat","required":false,"type":{"name":"string"}}}},"TabsList":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tabs/TabsList/TabsList.tsx","displayName":"@mantine/core/TabsList","props":{"children":{"defaultValue":null,"description":"<Tabs.Tab /> components","name":"children","required":true,"type":{"name":"ReactNode"}},"grow":{"defaultValue":null,"description":"Determines whether tabs should take the whole space","name":"grow","required":false,"type":{"name":"boolean"}},"position":{"defaultValue":null,"description":"Tabs alignment","name":"position","required":false,"type":{"name":"\\"left\\" | \\"right\\" | \\"center\\" | \\"apart\\"","raw":"TabsPosition","value":[{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"center\\""},{"value":"\\"apart\\""}]}}}},"Tab":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tabs/Tab/Tab.tsx","displayName":"@mantine/core/Tab","props":{"children":{"defaultValue":null,"description":"Tab label","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Section of content displayed before label","name":"icon","required":false,"type":{"name":"ReactNode"}},"rightSection":{"defaultValue":null,"description":"Section of content displayed after label","name":"rightSection","required":false,"type":{"name":"ReactNode"}},"value":{"defaultValue":null,"description":"Value that is used to connect Tab with associated panel","name":"value","required":true,"type":{"name":"string"}}}},"TabsPanel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tabs/TabsPanel/TabsPanel.tsx","displayName":"@mantine/core/TabsPanel","props":{"children":{"defaultValue":null,"description":"Panel content","name":"children","required":true,"type":{"name":"ReactNode"}},"value":{"defaultValue":null,"description":"Value of associated control","name":"value","required":true,"type":{"name":"string"}}}},"AccordionControl":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Accordion/AccordionControl/AccordionControl.tsx","displayName":"@mantine/core/AccordionControl","props":{"chevron":{"defaultValue":null,"description":"Custom chevron icon","name":"chevron","required":false,"type":{"name":"ReactNode"}},"children":{"defaultValue":null,"description":"Control label","name":"children","required":false,"type":{"name":"ReactNode"}},"disabled":{"defaultValue":null,"description":"Disables control button","name":"disabled","required":false,"type":{"name":"boolean"}},"icon":{"defaultValue":null,"description":"Icon rendered next to label","name":"icon","required":false,"type":{"name":"ReactNode"}}}},"AccordionItem":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Accordion/AccordionItem/AccordionItem.tsx","displayName":"@mantine/core/AccordionItem","props":{"value":{"defaultValue":null,"description":"Value that is used to manage accordion state","name":"value","required":true,"type":{"name":"string"}}}},"AccordionPanel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Accordion/AccordionPanel/AccordionPanel.tsx","displayName":"@mantine/core/AccordionPanel","props":{"children":{"defaultValue":null,"description":"Panel content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"TooltipFloating":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tooltip/TooltipFloating/TooltipFloating.tsx","displayName":"@mantine/core/TooltipFloating","props":{"children":{"defaultValue":null,"description":"Target element","name":"children","required":true,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"disabled":{"defaultValue":null,"description":"Disables tooltip","name":"disabled","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Tooltip label","name":"label","required":true,"type":{"name":"ReactNode"}},"multiline":{"defaultValue":null,"description":"Defines whether content should be wrapped on to the next line","name":"multiline","required":false,"type":{"name":"boolean"}},"offset":{"defaultValue":null,"description":"Offset from mouse","name":"offset","required":false,"type":{"name":"number"}},"position":{"defaultValue":null,"description":"Tooltip position relative to target element (default) or mouse (floating)","name":"position","required":false,"type":{"name":"\\"bottom\\" | \\"left\\" | \\"right\\" | \\"top\\" | \\"bottom-end\\" | \\"bottom-start\\" | \\"left-end\\" | \\"left-start\\" | \\"right-end\\" | \\"right-start\\" | \\"top-end\\" | \\"top-start\\"","raw":"FloatingPosition","value":[{"value":"\\"bottom\\""},{"value":"\\"left\\""},{"value":"\\"right\\""},{"value":"\\"top\\""},{"value":"\\"bottom-end\\""},{"value":"\\"bottom-start\\""},{"value":"\\"left-end\\""},{"value":"\\"left-start\\""},{"value":"\\"right-end\\""},{"value":"\\"right-start\\""},{"value":"\\"top-end\\""},{"value":"\\"top-start\\""}]}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"refProp":{"defaultValue":null,"description":"Key of the prop that should be used to get element ref","name":"refProp","required":false,"type":{"name":"string"}},"width":{"defaultValue":null,"description":"Tooltip width","name":"width","required":false,"type":{"name":"number | \\"auto\\""}},"withinPortal":{"defaultValue":null,"description":"Determines whether tooltip should be rendered within Portal","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"Tooltip z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"TooltipGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Tooltip/TooltipGroup/TooltipGroup.tsx","displayName":"@mantine/core/TooltipGroup","props":{"children":{"defaultValue":null,"description":"<Tooltip /> components","name":"children","required":true,"type":{"name":"ReactNode"}},"closeDelay":{"defaultValue":{"value":"0"},"description":"Close delay in ms","name":"closeDelay","required":false,"type":{"name":"number"}},"openDelay":{"defaultValue":{"value":"0"},"description":"Open delay in ms","name":"openDelay","required":false,"type":{"name":"number"}}}},"PopoverTarget":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Popover/PopoverTarget/PopoverTarget.tsx","displayName":"@mantine/core/PopoverTarget","props":{"children":{"defaultValue":null,"description":"Target element","name":"children","required":true,"type":{"name":"ReactNode"}},"popupType":{"defaultValue":null,"description":"Popup accessible type, \'dialog\' by default","name":"popupType","required":false,"type":{"name":"string"}},"refProp":{"defaultValue":null,"description":"Key of the prop that should be used to get element ref","name":"refProp","required":false,"type":{"name":"string"}}}},"PopoverDropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Popover/PopoverDropdown/PopoverDropdown.tsx","displayName":"@mantine/core/PopoverDropdown","props":{"children":{"defaultValue":null,"description":"Dropdown content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"HoverCardTarget":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/HoverCard/HoverCardTarget/HoverCardTarget.tsx","displayName":"@mantine/core/HoverCardTarget","props":{"children":{"defaultValue":null,"description":"Target element","name":"children","required":true,"type":{"name":"ReactNode"}},"popupType":{"defaultValue":null,"description":"Popup accessible type, \'dialog\' by default","name":"popupType","required":false,"type":{"name":"string"}},"refProp":{"defaultValue":null,"description":"Key of the prop that should be used to get element ref","name":"refProp","required":false,"type":{"name":"string"}}}},"HoverCardDropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/HoverCard/HoverCardDropdown/HoverCardDropdown.tsx","displayName":"@mantine/core/HoverCardDropdown","props":{"children":{"defaultValue":null,"description":"Dropdown content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"MenuTarget":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/MenuTarget/MenuTarget.tsx","displayName":"@mantine/core/MenuTarget","props":{"children":{"defaultValue":null,"description":"Target element","name":"children","required":true,"type":{"name":"ReactNode"}},"refProp":{"defaultValue":null,"description":"Key of the prop that should be used to get element ref","name":"refProp","required":false,"type":{"name":"string"}}}},"MenuDropdown":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/MenuDropdown/MenuDropdown.tsx","displayName":"@mantine/core/MenuDropdown","props":{"children":{"defaultValue":null,"description":"Item label","name":"children","required":false,"type":{"name":"ReactNode"}}}},"MenuItem":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/MenuItem/MenuItem.tsx","displayName":"@mantine/core/MenuItem","props":{"children":{"defaultValue":null,"description":"Item label","name":"children","required":false,"type":{"name":"ReactNode"}},"closeMenuOnClick":{"defaultValue":null,"description":"Determines whether menu should be closed when item is clicked, overrides closeOnItemClick prop on Menu component","name":"closeMenuOnClick","required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"Key of theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"icon":{"defaultValue":null,"description":"Icon rendered on the left side of the label","name":"icon","required":false,"type":{"name":"ReactNode"}},"rightSection":{"defaultValue":null,"description":"Section rendered on the right side of the label","name":"rightSection","required":false,"type":{"name":"ReactNode"}}}},"MenuLabel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Menu/MenuLabel/MenuLabel.tsx","displayName":"@mantine/core/MenuLabel","props":{"children":{"defaultValue":null,"description":"Label content","name":"children","required":false,"type":{"name":"ReactNode"}}}},"InputLabel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Input/InputLabel/InputLabel.tsx","displayName":"@mantine/core/InputLabel","props":{"children":{"defaultValue":null,"description":"Label content","name":"children","required":false,"type":{"name":"ReactNode"}},"labelElement":{"defaultValue":null,"description":"Label root element","name":"labelElement","required":false,"type":{"name":"\\"div\\" | \\"label\\"","raw":"\\"div\\" | \\"label\\"","value":[{"value":"\\"div\\""},{"value":"\\"label\\""}]}},"required":{"defaultValue":null,"description":"Determines whether required asterisk should be displayed","name":"required","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined label size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"InputWrapper":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Input/InputWrapper/InputWrapper.tsx","displayName":"@mantine/core/InputWrapper","props":{"children":{"defaultValue":null,"description":"Input that should be wrapped","name":"children","required":true,"type":{"name":"ReactNode"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"id":{"defaultValue":null,"description":"htmlFor label prop","name":"id","required":false,"type":{"name":"string"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelElement":{"defaultValue":null,"description":"Render label as label with htmlFor or as div","name":"labelElement","required":false,"type":{"name":"\\"div\\" | \\"label\\"","raw":"\\"div\\" | \\"label\\"","value":[{"value":"\\"div\\""},{"value":"\\"label\\""}]}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Controls all elements font-size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}}}},"InputDescription":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Input/InputDescription/InputDescription.tsx","displayName":"@mantine/core/InputDescription","props":{"children":{"defaultValue":null,"description":"Description content","name":"children","required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":null,"description":"Predefined size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"InputError":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Input/InputError/InputError.tsx","displayName":"@mantine/core/InputError","props":{"children":{"defaultValue":null,"description":"Error content","name":"children","required":false,"type":{"name":"ReactNode"}},"size":{"defaultValue":null,"description":"Predefined size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"ListItem":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/List/ListItem/ListItem.tsx","displayName":"@mantine/core/ListItem","props":{"children":{"defaultValue":null,"description":"Item content","name":"children","required":true,"type":{"name":"ReactNode"}},"icon":{"defaultValue":null,"description":"Icon to replace bullet","name":"icon","required":false,"type":{"name":"ReactNode"}}}},"AvatarGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Avatar/AvatarGroup/AvatarGroup.tsx","displayName":"@mantine/core/AvatarGroup","props":{"children":{"defaultValue":null,"description":"Avatar components","name":"children","required":true,"type":{"name":"ReactNode"}},"spacing":{"defaultValue":null,"description":"Negative space between Avatars","name":"spacing","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}}}},"CheckboxGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Checkbox/CheckboxGroup/CheckboxGroup.tsx","displayName":"@mantine/core/CheckboxGroup","props":{"children":{"defaultValue":null,"description":"<Checkbox /> components","name":"children","required":true,"type":{"name":"ReactNode"}},"defaultValue":{"defaultValue":null,"description":"Initial selected checkboxes, use for uncontrolled components, overridden by value prop","name":"defaultValue","required":false,"type":{"name":"string[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: string[]) => void"}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Controls label font-size and checkbox width and height","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value of selected checkboxes, use for controlled components","name":"value","required":false,"type":{"name":"string[]"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props added to Input.Wrapper component (root element)","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"SwitchGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Switch/SwitchGroup/SwitchGroup.tsx","displayName":"@mantine/core/SwitchGroup","props":{"children":{"defaultValue":null,"description":"<Checkbox /> components only","name":"children","required":true,"type":{"name":"ReactNode"}},"defaultValue":{"defaultValue":null,"description":"Initial value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string[]"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: string[]) => void"}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined label fontSize, checkbox width, height and border-radius","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value of currently selected checkbox","name":"value","required":false,"type":{"name":"string[]"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props spread to InputWrapper","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"RadioGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Radio/RadioGroup/RadioGroup.tsx","displayName":"@mantine/core/RadioGroup","props":{"children":{"defaultValue":null,"description":"<Radio /> components","name":"children","required":true,"type":{"name":"ReactNode"}},"defaultValue":{"defaultValue":null,"description":"Initial value for uncontrolled component","name":"defaultValue","required":false,"type":{"name":"string"}},"description":{"defaultValue":null,"description":"Input description, displayed after label","name":"description","required":false,"type":{"name":"ReactNode"}},"descriptionProps":{"defaultValue":null,"description":"Props spread to description element","name":"descriptionProps","required":false,"type":{"name":"Record<string, any>"}},"error":{"defaultValue":null,"description":"Displays error message after input","name":"error","required":false,"type":{"name":"ReactNode"}},"errorProps":{"defaultValue":null,"description":"Props spread to error element","name":"errorProps","required":false,"type":{"name":"Record<string, any>"}},"inputContainer":{"defaultValue":null,"description":"Input container component, defaults to React.Fragment","name":"inputContainer","required":false,"type":{"name":"(children: ReactNode) => ReactNode"}},"inputWrapperOrder":{"defaultValue":null,"description":"Controls order of the Input.Wrapper elements","name":"inputWrapperOrder","required":false,"type":{"name":"(\\"input\\" | \\"label\\" | \\"error\\" | \\"description\\")[]"}},"label":{"defaultValue":null,"description":"Input label, displayed before input","name":"label","required":false,"type":{"name":"ReactNode"}},"labelProps":{"defaultValue":null,"description":"Props spread to label element","name":"labelProps","required":false,"type":{"name":"Record<string, any>"}},"name":{"defaultValue":null,"description":"Name attribute of radio inputs","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: string) => void"}},"required":{"defaultValue":null,"description":"Adds required attribute to the input and red asterisk on the right side of label","name":"required","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined label fontSize, radio width, height and border-radius","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"value":{"defaultValue":null,"description":"Value of currently selected radio","name":"value","required":false,"type":{"name":"string"}},"withAsterisk":{"defaultValue":null,"description":"Determines whether required asterisk should be rendered, overrides required prop, does not add required attribute to the input","name":"withAsterisk","required":false,"type":{"name":"boolean"}},"wrapperProps":{"defaultValue":null,"description":"Props spread to root element","name":"wrapperProps","required":false,"type":{"name":"Record<string, any>"}}}},"ChipGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Chip/ChipGroup/ChipGroup.tsx","displayName":"@mantine/core/ChipGroup","props":{"children":{"defaultValue":null,"description":"<Chip /> components","name":"children","required":false,"type":{"name":"ReactNode"}},"defaultValue":{"defaultValue":null,"description":"Uncontrolled component initial value","name":"defaultValue","required":false,"type":{"name":"string | string[]"}},"multiple":{"defaultValue":null,"description":"Allow multiple values to be selected at a time","name":"multiple","required":false,"type":{"name":"boolean"}},"onChange":{"defaultValue":null,"description":"Called when value changes","name":"onChange","required":false,"type":{"name":"(value: T extends true ? string[] : string) => void"}},"value":{"defaultValue":null,"description":"Controlled component value","name":"value","required":false,"type":{"name":"string | string[]"}}}},"Col":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Grid/Col/Col.tsx","displayName":"@mantine/core/Col","props":{"lg":{"defaultValue":null,"description":"Col span at (min-width: theme.breakpoints.lg)","name":"lg","required":false,"type":{"name":"ColSpan"}},"md":{"defaultValue":null,"description":"Col span at (min-width: theme.breakpoints.md)","name":"md","required":false,"type":{"name":"ColSpan"}},"offset":{"defaultValue":null,"description":"Column left offset","name":"offset","required":false,"type":{"name":"number"}},"offsetLg":{"defaultValue":null,"description":"Column left offset at (min-width: theme.breakpoints.lg)","name":"offsetLg","required":false,"type":{"name":"number"}},"offsetMd":{"defaultValue":null,"description":"Column left offset at (min-width: theme.breakpoints.md)","name":"offsetMd","required":false,"type":{"name":"number"}},"offsetSm":{"defaultValue":null,"description":"Column left offset at (min-width: theme.breakpoints.sm)","name":"offsetSm","required":false,"type":{"name":"number"}},"offsetXl":{"defaultValue":null,"description":"Column left offset at (min-width: theme.breakpoints.xl)","name":"offsetXl","required":false,"type":{"name":"number"}},"offsetXs":{"defaultValue":null,"description":"Column left offset at (min-width: theme.breakpoints.xs)","name":"offsetXs","required":false,"type":{"name":"number"}},"order":{"defaultValue":null,"description":"Default col order","name":"order","required":false,"type":{"name":"Order"}},"orderLg":{"defaultValue":null,"description":"Col order at (min-width: theme.breakpoints.lg)","name":"orderLg","required":false,"type":{"name":"Order"}},"orderMd":{"defaultValue":null,"description":"Col order at (min-width: theme.breakpoints.md)","name":"orderMd","required":false,"type":{"name":"Order"}},"orderSm":{"defaultValue":null,"description":"Col order at (min-width: theme.breakpoints.sm)","name":"orderSm","required":false,"type":{"name":"Order"}},"orderXl":{"defaultValue":null,"description":"Col order at (min-width: theme.breakpoints.xl)","name":"orderXl","required":false,"type":{"name":"Order"}},"orderXs":{"defaultValue":null,"description":"Col order at (min-width: theme.breakpoints.xs)","name":"orderXs","required":false,"type":{"name":"Order"}},"sm":{"defaultValue":null,"description":"Col span at (min-width: theme.breakpoints.sm)","name":"sm","required":false,"type":{"name":"ColSpan"}},"span":{"defaultValue":null,"description":"Default col span","name":"span","required":false,"type":{"name":"ColSpan"}},"xl":{"defaultValue":null,"description":"Col span at (min-width: theme.breakpoints.xl)","name":"xl","required":false,"type":{"name":"ColSpan"}},"xs":{"defaultValue":null,"description":"Col span at (min-width: theme.breakpoints.xs)","name":"xs","required":false,"type":{"name":"ColSpan"}}}},"ButtonGroup":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Button/ButtonGroup/ButtonGroup.tsx","displayName":"@mantine/core/ButtonGroup","props":{"buttonBorderWidth":{"defaultValue":null,"description":"Child <Button /> border width","name":"buttonBorderWidth","required":false,"type":{"name":"string | number"}},"children":{"defaultValue":null,"description":"<Button /> components","name":"children","required":false,"type":{"name":"ReactNode"}},"orientation":{"defaultValue":null,"description":"Switch between vertical and horizontal orientation","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"\\"horizontal\\" | \\"vertical\\"","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}}}},"TimelineItem":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Timeline/TimelineItem/TimelineItem.tsx","displayName":"@mantine/core/TimelineItem","props":{"active":{"defaultValue":null,"description":"Should this item be highlighted, controlled by Timeline component","name":"active","required":false,"type":{"name":"boolean"}},"align":{"defaultValue":null,"description":"Line and bullet position relative to item content, controlled by Timeline component","name":"align","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"bullet":{"defaultValue":null,"description":"React node that should be rendered inside bullet – icon, image, avatar, etc.","name":"bullet","required":false,"type":{"name":"ReactNode"}},"bulletSize":{"defaultValue":null,"description":"Bullet width, height and border-radius, controlled by Timeline component","name":"bulletSize","required":false,"type":{"name":"number"}},"children":{"defaultValue":null,"description":"React node that will be rendered after title","name":"children","required":false,"type":{"name":"ReactNode"}},"color":{"defaultValue":null,"description":"Highlight color for active item","name":"color","required":false,"type":{"name":"MantineColor"}},"lineActive":{"defaultValue":null,"description":"Should line of this item be highlighted, controlled by Timeline component","name":"lineActive","required":false,"type":{"name":"boolean"}},"lineVariant":{"defaultValue":null,"description":"Line border style","name":"lineVariant","required":false,"type":{"name":"\\"dashed\\" | \\"dotted\\" | \\"solid\\"","raw":"\\"dashed\\" | \\"dotted\\" | \\"solid\\"","value":[{"value":"\\"dashed\\""},{"value":"\\"dotted\\""},{"value":"\\"solid\\""}]}},"lineWidth":{"defaultValue":null,"description":"Line border width, controlled by Timeline component","name":"lineWidth","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"title":{"defaultValue":null,"description":"Item title, rendered next to bullet","name":"title","required":false,"type":{"name":"ReactNode"}}}},"Slider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Slider/Slider/Slider.tsx","displayName":"@mantine/core/Slider","props":{"color":{"defaultValue":null,"description":"Color from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled slider","name":"defaultValue","required":false,"type":{"name":"number"}},"disabled":{"defaultValue":null,"description":"Disables slider","name":"disabled","required":false,"type":{"name":"boolean"}},"inverted":{"defaultValue":null,"description":"Allows the track to be inverted","name":"inverted","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Function to generate label or any react node to render instead, set to null to disable label","name":"label","required":false,"type":{"name":"ReactNode | ((value: number) => ReactNode)"}},"labelAlwaysOn":{"defaultValue":null,"description":"If true label will be not be hidden when user stops dragging","name":"labelAlwaysOn","required":false,"type":{"name":"boolean"}},"labelTransition":{"defaultValue":null,"description":"Label appear/disappear transition","name":"labelTransition","required":false,"type":{"name":"MantineTransition"}},"labelTransitionDuration":{"defaultValue":null,"description":"Label appear/disappear transition duration in ms","name":"labelTransitionDuration","required":false,"type":{"name":"number"}},"labelTransitionTimingFunction":{"defaultValue":null,"description":"Label appear/disappear transition timing function, defaults to theme.transitionRimingFunction","name":"labelTransitionTimingFunction","required":false,"type":{"name":"string"}},"marks":{"defaultValue":null,"description":"Marks which will be placed on the track","name":"marks","required":false,"type":{"name":"{ value: number; label?: ReactNode; }[]"}},"max":{"defaultValue":null,"description":"Maximum possible value","name":"max","required":false,"type":{"name":"number"}},"min":{"defaultValue":null,"description":"Minimal possible value","name":"min","required":false,"type":{"name":"number"}},"name":{"defaultValue":null,"description":"Hidden input name, use with uncontrolled variant","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called each time value changes","name":"onChange","required":false,"type":{"name":"(value: number) => void"}},"onChangeEnd":{"defaultValue":null,"description":"Called when user stops dragging slider or changes value with arrows","name":"onChangeEnd","required":false,"type":{"name":"(value: number) => void"}},"precision":{"defaultValue":null,"description":"Amount of digits after the decimal point","name":"precision","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"scale":{"defaultValue":null,"description":"A transformation function, to change the scale of the slider","name":"scale","required":false,"type":{"name":"(value: number) => number"}},"showLabelOnHover":{"defaultValue":null,"description":"If true slider label will appear on hover","name":"showLabelOnHover","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Controls size of track and thumb","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"step":{"defaultValue":null,"description":"Number by which value will be incremented/decremented with thumb drag and arrows","name":"step","required":false,"type":{"name":"number"}},"thumbChildren":{"defaultValue":null,"description":"Thumb children, can be used to add icon","name":"thumbChildren","required":false,"type":{"name":"ReactNode"}},"thumbLabel":{"defaultValue":null,"description":"Thumb aria-label","name":"thumbLabel","required":false,"type":{"name":"string"}},"thumbSize":{"defaultValue":null,"description":"Thumb width and height","name":"thumbSize","required":false,"type":{"name":"number"}},"value":{"defaultValue":null,"description":"Current value for controlled slider","name":"value","required":false,"type":{"name":"number"}}}},"RangeSlider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Slider/RangeSlider/RangeSlider.tsx","displayName":"@mantine/core/RangeSlider","props":{"color":{"defaultValue":null,"description":"Color from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"defaultValue":{"defaultValue":null,"description":"Default value for uncontrolled slider","name":"defaultValue","required":false,"type":{"name":"Value"}},"disabled":{"defaultValue":null,"description":"Disables slider","name":"disabled","required":false,"type":{"name":"boolean"}},"inverted":{"defaultValue":null,"description":"Allows the track to be inverted","name":"inverted","required":false,"type":{"name":"boolean"}},"label":{"defaultValue":null,"description":"Function to generate label or any react node to render instead, set to null to disable label","name":"label","required":false,"type":{"name":"ReactNode | ((value: number) => ReactNode)"}},"labelAlwaysOn":{"defaultValue":null,"description":"If true label will be not be hidden when user stops dragging","name":"labelAlwaysOn","required":false,"type":{"name":"boolean"}},"labelTransition":{"defaultValue":null,"description":"Label appear/disappear transition","name":"labelTransition","required":false,"type":{"name":"MantineTransition"}},"labelTransitionDuration":{"defaultValue":null,"description":"Label appear/disappear transition duration in ms","name":"labelTransitionDuration","required":false,"type":{"name":"number"}},"labelTransitionTimingFunction":{"defaultValue":null,"description":"Label appear/disappear transition timing function, defaults to theme.transitionRimingFunction","name":"labelTransitionTimingFunction","required":false,"type":{"name":"string"}},"marks":{"defaultValue":null,"description":"Marks which will be placed on the track","name":"marks","required":false,"type":{"name":"{ value: number; label?: ReactNode; }[]"}},"max":{"defaultValue":null,"description":"Maximum possible value","name":"max","required":false,"type":{"name":"number"}},"maxRange":{"defaultValue":null,"description":"Maximum range interval","name":"maxRange","required":false,"type":{"name":"number"}},"min":{"defaultValue":null,"description":"Minimal possible value","name":"min","required":false,"type":{"name":"number"}},"minRange":{"defaultValue":null,"description":"Minimal range interval","name":"minRange","required":false,"type":{"name":"number"}},"name":{"defaultValue":null,"description":"Hidden input name, use with uncontrolled variant","name":"name","required":false,"type":{"name":"string"}},"onChange":{"defaultValue":null,"description":"Called each time value changes","name":"onChange","required":false,"type":{"name":"(value: Value) => void"}},"onChangeEnd":{"defaultValue":null,"description":"Called when user stops dragging slider or changes value with arrows","name":"onChangeEnd","required":false,"type":{"name":"(value: Value) => void"}},"precision":{"defaultValue":null,"description":"Amount of digits after the decimal point","name":"precision","required":false,"type":{"name":"number"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"scale":{"defaultValue":null,"description":"A transformation function, to change the scale of the slider","name":"scale","required":false,"type":{"name":"(value: number) => number"}},"showLabelOnHover":{"defaultValue":null,"description":"If true slider label will appear on hover","name":"showLabelOnHover","required":false,"type":{"name":"boolean"}},"size":{"defaultValue":null,"description":"Predefined track and thumb size, number to set sizes","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"step":{"defaultValue":null,"description":"Number by which value will be incremented/decremented with thumb drag and arrows","name":"step","required":false,"type":{"name":"number"}},"thumbChildren":{"defaultValue":null,"description":"Thumbs children, can be used to add icons","name":"thumbChildren","required":false,"type":{"name":"ReactNode"}},"thumbFromLabel":{"defaultValue":null,"description":"First thumb aria-label","name":"thumbFromLabel","required":false,"type":{"name":"string"}},"thumbSize":{"defaultValue":null,"description":"Thumb width and height","name":"thumbSize","required":false,"type":{"name":"number"}},"thumbToLabel":{"defaultValue":null,"description":"Second thumb aria-label","name":"thumbToLabel","required":false,"type":{"name":"string"}},"value":{"defaultValue":null,"description":"Current value for controlled slider","name":"value","required":false,"type":{"name":"Value"}}}},"Navbar":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AppShell/Navbar/Navbar.tsx","displayName":"@mantine/core/Navbar","props":{"children":{"defaultValue":null,"description":"Navbar content","name":"children","required":true,"type":{"name":"ReactNode"}},"fixed":{"defaultValue":null,"description":"Set position to fixed","name":"fixed","required":false,"type":{"name":"boolean"}},"height":{"defaultValue":null,"description":"Component height","name":"height","required":false,"type":{"name":"string | number"}},"hidden":{"defaultValue":null,"description":"Set to true to hide component at hiddenBreakpoint","name":"hidden","required":false,"type":{"name":"boolean"}},"hiddenBreakpoint":{"defaultValue":null,"description":"Breakpoint at which component will be hidden if hidden prop is true","name":"hiddenBreakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"position":{"defaultValue":null,"description":"Position for fixed variant","name":"position","required":false,"type":{"name":"HorizontalSectionPosition"}},"width":{"defaultValue":null,"description":"Component width with breakpoints","name":"width","required":false,"type":{"name":"Partial<Record<string, string | number>>"}},"withBorder":{"defaultValue":null,"description":"Determines whether the element should have border","name":"withBorder","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Header":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AppShell/Header/Header.tsx","displayName":"@mantine/core/Header","props":{"children":{"defaultValue":null,"description":"Header content","name":"children","required":true,"type":{"name":"ReactNode"}},"fixed":{"defaultValue":null,"description":"Changes position to fixed, controlled by AppShell component if rendered inside","name":"fixed","required":false,"type":{"name":"boolean"}},"height":{"defaultValue":null,"description":"Component height with breakpoints","name":"height","required":true,"type":{"name":"VerticalSectionHeight"}},"position":{"defaultValue":null,"description":"Control top, left, right or bottom position values, controlled by AppShell component if rendered inside","name":"position","required":false,"type":{"name":"VerticalSectionPosition"}},"withBorder":{"defaultValue":null,"description":"Determines whether the element should have border","name":"withBorder","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Footer":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AppShell/Footer/Footer.tsx","displayName":"@mantine/core/Footer","props":{"children":{"defaultValue":null,"description":"Footer content","name":"children","required":true,"type":{"name":"ReactNode"}},"fixed":{"defaultValue":null,"description":"Changes position to fixed, controlled by AppShell component if rendered inside","name":"fixed","required":false,"type":{"name":"boolean"}},"height":{"defaultValue":null,"description":"Component height with breakpoints","name":"height","required":true,"type":{"name":"VerticalSectionHeight"}},"position":{"defaultValue":null,"description":"Control top, left, right or bottom position values, controlled by AppShell component if rendered inside","name":"position","required":false,"type":{"name":"VerticalSectionPosition"}},"withBorder":{"defaultValue":null,"description":"Determines whether the element should have border","name":"withBorder","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Aside":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/AppShell/Aside/Aside.tsx","displayName":"@mantine/core/Aside","props":{"children":{"defaultValue":null,"description":"Aside content","name":"children","required":true,"type":{"name":"ReactNode"}},"fixed":{"defaultValue":null,"description":"Set position to fixed","name":"fixed","required":false,"type":{"name":"boolean"}},"height":{"defaultValue":null,"description":"Component height","name":"height","required":false,"type":{"name":"string | number"}},"hidden":{"defaultValue":null,"description":"Set to true to hide component at hiddenBreakpoint","name":"hidden","required":false,"type":{"name":"boolean"}},"hiddenBreakpoint":{"defaultValue":null,"description":"Breakpoint at which component will be hidden if hidden prop is true","name":"hiddenBreakpoint","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"position":{"defaultValue":null,"description":"Position for fixed variant","name":"position","required":false,"type":{"name":"HorizontalSectionPosition"}},"width":{"defaultValue":null,"description":"Component width with breakpoints","name":"width","required":false,"type":{"name":"Partial<Record<string, string | number>>"}},"withBorder":{"defaultValue":null,"description":"Determines whether the element should have border","name":"withBorder","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Step":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-core/src/Stepper/Step/Step.tsx","displayName":"@mantine/core/Step","props":{"allowStepClick":{"defaultValue":null,"description":"Set to false to disable clicks on step","name":"allowStepClick","required":false,"type":{"name":"boolean"}},"allowStepSelect":{"defaultValue":null,"description":"Should step selection be allowed","name":"allowStepSelect","required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"Step color from theme.colors","name":"color","required":false,"type":{"name":"MantineColor"}},"completedIcon":{"defaultValue":null,"description":"Step icon displayed when step is completed","name":"completedIcon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"description":{"defaultValue":null,"description":"Step description","name":"description","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"icon":{"defaultValue":null,"description":"Step icon, defaults to step index + 1 when rendered within Stepper","name":"icon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"iconPosition":{"defaultValue":null,"description":"Icon position relative to step body","name":"iconPosition","required":false,"type":{"name":"\\"left\\" | \\"right\\"","raw":"\\"left\\" | \\"right\\"","value":[{"value":"\\"left\\""},{"value":"\\"right\\""}]}},"iconSize":{"defaultValue":null,"description":"Icon wrapper size","name":"iconSize","required":false,"type":{"name":"number"}},"label":{"defaultValue":null,"description":"Step label, render after icon","name":"label","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"loading":{"defaultValue":null,"description":"Indicates loading state on step","name":"loading","required":false,"type":{"name":"boolean"}},"orientation":{"defaultValue":null,"description":"Component orientation","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"\\"horizontal\\" | \\"vertical\\"","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"progressIcon":{"defaultValue":null,"description":"Step icon displayed when step is in progress","name":"progressIcon","required":false,"type":{"name":"ReactNode | StepFragmentComponent"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, \\"xl\\" by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Component size","name":"size","required":false,"type":{"name":"\\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"state":{"defaultValue":null,"description":"Step state, controlled by Steps component","name":"state","required":false,"type":{"name":"\\"stepInactive\\" | \\"stepProgress\\" | \\"stepCompleted\\"","raw":"\\"stepInactive\\" | \\"stepProgress\\" | \\"stepCompleted\\"","value":[{"value":"\\"stepInactive\\""},{"value":"\\"stepProgress\\""},{"value":"\\"stepCompleted\\""}]}},"step":{"defaultValue":null,"description":"Step index, controlled by Steps component *","name":"step","required":false,"type":{"name":"number"}},"withIcon":{"defaultValue":null,"description":"Should icon be displayed","name":"withIcon","required":false,"type":{"name":"boolean"}}}},"Carousel":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-carousel/src/Carousel.tsx","displayName":"@mantine/carousel/Carousel","props":{"align":{"defaultValue":null,"description":"Determines how slides will be aligned relative to the container. Use number between 0-1 to align slides based on percentage, where 0.5 equals 50%","name":"align","required":false,"type":{"name":"number | \\"center\\" | \\"end\\" | \\"start\\""}},"breakpoints":{"defaultValue":null,"description":"Control slideSize and slideGap at different viewport sizes","name":"breakpoints","required":false,"type":{"name":"CarouselBreakpoint[]"}},"children":{"defaultValue":null,"description":"<Carousel.Slide /> components","name":"children","required":false,"type":{"name":"ReactNode"}},"containScroll":{"defaultValue":null,"description":"Clear leading and trailing empty space that causes excessive scrolling. Use trimSnaps to only use snap points that trigger scrolling or keepSnaps to keep them.","name":"containScroll","required":false,"type":{"name":"\\"\\" | \\"trimSnaps\\" | \\"keepSnaps\\"","raw":"\\"\\" | \\"trimSnaps\\" | \\"keepSnaps\\"","value":[{"value":"\\"\\""},{"value":"\\"trimSnaps\\""},{"value":"\\"keepSnaps\\""}]}},"controlSize":{"defaultValue":null,"description":"Previous/next controls size","name":"controlSize","required":false,"type":{"name":"number"}},"controlsOffset":{"defaultValue":null,"description":"Key of theme.spacing or number to set space between next/previous control and carousel boundary","name":"controlsOffset","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"dragFree":{"defaultValue":null,"description":"Determines whether momentum scrolling should be enabled, false by default","name":"dragFree","required":false,"type":{"name":"boolean"}},"draggable":{"defaultValue":null,"description":"Determines whether carousel can be scrolled with mouse and touch interactions, true by default","name":"draggable","required":false,"type":{"name":"boolean"}},"getEmblaApi":{"defaultValue":null,"description":"Get embla API as ref","name":"getEmblaApi","required":false,"type":{"name":"(embla: EmblaCarouselType) => void"}},"height":{"defaultValue":null,"description":"Slides container height, required for vertical orientation","name":"height","required":false,"type":{"name":"Height<string | number>"}},"inViewThreshold":{"defaultValue":null,"description":"Choose a fraction representing the percentage portion of a slide that needs to be visible in order to be considered in view. For example, 0.5 equals 50%.","name":"inViewThreshold","required":false,"type":{"name":"number"}},"includeGapInSize":{"defaultValue":null,"description":"Determines whether gap should be treated as part of the slide size, true by default","name":"includeGapInSize","required":false,"type":{"name":"boolean"}},"initialSlide":{"defaultValue":null,"description":"Index of initial slide","name":"initialSlide","required":false,"type":{"name":"number"}},"loop":{"defaultValue":null,"description":"Enables infinite looping. Automatically falls back to false if slide content isn\'t enough to loop.","name":"loop","required":false,"type":{"name":"boolean"}},"nextControlIcon":{"defaultValue":null,"description":"Icon of next control","name":"nextControlIcon","required":false,"type":{"name":"ReactNode"}},"nextControlLabel":{"defaultValue":null,"description":"Next control aria-label","name":"nextControlLabel","required":false,"type":{"name":"string"}},"onNextSlide":{"defaultValue":null,"description":"Called when user clicks next button","name":"onNextSlide","required":false,"type":{"name":"() => void"}},"onPreviousSlide":{"defaultValue":null,"description":"Called when user clicks previous button","name":"onPreviousSlide","required":false,"type":{"name":"() => void"}},"onSlideChange":{"defaultValue":null,"description":"Called with slide index when slide changes","name":"onSlideChange","required":false,"type":{"name":"(index: number) => void"}},"orientation":{"defaultValue":null,"description":"Carousel orientation, horizontal by default","name":"orientation","required":false,"type":{"name":"\\"horizontal\\" | \\"vertical\\"","raw":"CarouselOrientation","value":[{"value":"\\"horizontal\\""},{"value":"\\"vertical\\""}]}},"plugins":{"defaultValue":null,"description":"An array of embla plugins","name":"plugins","required":false,"type":{"name":"CreatePluginType<LoosePluginType, {}>[]"}},"previousControlIcon":{"defaultValue":null,"description":"Previous control icon","name":"previousControlIcon","required":false,"type":{"name":"ReactNode"}},"previousControlLabel":{"defaultValue":null,"description":"Previous control aria-label","name":"previousControlLabel","required":false,"type":{"name":"string"}},"skipSnaps":{"defaultValue":null,"description":"Allow the carousel to skip scroll snaps if it\'s dragged vigorously. Note that this option will be ignored if the dragFree option is set to true, false by default","name":"skipSnaps","required":false,"type":{"name":"boolean"}},"slideGap":{"defaultValue":null,"description":"Key of theme.spacing or number to set gap between slides","name":"slideGap","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"slideSize":{"defaultValue":null,"description":"Slide width, defaults to 100%, examples: 40rem 50%","name":"slideSize","required":false,"type":{"name":"string | number"}},"slidesToScroll":{"defaultValue":null,"description":"Number of slides that should be scrolled with next/previous buttons","name":"slidesToScroll","required":false,"type":{"name":"number | \\"auto\\""}},"speed":{"defaultValue":null,"description":"Adjusts scroll speed when triggered by any of the methods. Higher numbers enables faster scrolling.","name":"speed","required":false,"type":{"name":"number"}},"withControls":{"defaultValue":null,"description":"Determines whether next/previous controls should be displayed, true by default","name":"withControls","required":false,"type":{"name":"boolean"}},"withIndicators":{"defaultValue":null,"description":"Determines whether indicators should be displayed, false by default","name":"withIndicators","required":false,"type":{"name":"boolean"}},"withKeyboardEvents":{"defaultValue":null,"description":"Determines whether arrow key should switch slides, true by default","name":"withKeyboardEvents","required":false,"type":{"name":"boolean"}}}},"CarouselSlide":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-carousel/src/CarouselSlide/CarouselSlide.tsx","displayName":"@mantine/carousel/CarouselSlide","props":{"children":{"defaultValue":null,"description":"Slide content","name":"children","required":false,"type":{"name":"ReactNode"}},"gap":{"defaultValue":null,"description":"Key of theme.spacing or number to set gap between slides","name":"gap","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"size":{"defaultValue":null,"description":"Slide width, defaults to 100%, examples: 40rem, 50%","name":"size","required":false,"type":{"name":"string | number"}}}},"Notifications":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-notifications/src/Notifications/Notifications.tsx","displayName":"@mantine/notifications/Notifications","props":{"autoClose":{"defaultValue":{"value":"4000"},"description":"Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by notifications.show function","name":"autoClose","required":false,"type":{"name":"number | false"}},"containerWidth":{"defaultValue":{"value":"rem(440)"},"description":"Notification width, cannot exceed 100%","name":"containerWidth","required":false,"type":{"name":"string | number"}},"limit":{"defaultValue":{"value":"5"},"description":"Maximum amount of notifications displayed at a time, other new notifications will be added to queue","name":"limit","required":false,"type":{"name":"number"}},"notificationMaxHeight":{"defaultValue":{"value":"rem(200)"},"description":"Notification max-height, used for transitions","name":"notificationMaxHeight","required":false,"type":{"name":"string | number"}},"position":{"defaultValue":{"value":"bottom-right"},"description":"Notifications position","name":"position","required":false,"type":{"name":"\\"bottom-center\\" | \\"top-center\\" | \\"top-left\\" | \\"top-right\\" | \\"bottom-left\\" | \\"bottom-right\\"","raw":"\\"bottom-center\\" | \\"top-center\\" | \\"top-left\\" | \\"top-right\\" | \\"bottom-left\\" | \\"bottom-right\\"","value":[{"value":"\\"bottom-center\\""},{"value":"\\"top-center\\""},{"value":"\\"top-left\\""},{"value":"\\"top-right\\""},{"value":"\\"bottom-left\\""},{"value":"\\"bottom-right\\""}]}},"target":{"defaultValue":null,"description":"Target element of Portal component","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"transitionDuration":{"defaultValue":{"value":"250"},"description":"Notification transitions duration, 0 to turn transitions off","name":"transitionDuration","required":false,"type":{"name":"number"}},"zIndex":{"defaultValue":{"value":"getDefaultZIndex(\'overlay\')"},"description":"Notifications container z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Prism":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-prism/src/Prism/Prism.tsx","displayName":"@mantine/prism/Prism","props":{"children":{"defaultValue":null,"description":"Code which will be highlighted","name":"children","required":true,"type":{"name":"string"}},"colorScheme":{"defaultValue":null,"description":"Force color scheme, defaults to theme.colorScheme","name":"colorScheme","required":false,"type":{"name":"\\"light\\" | \\"dark\\"","raw":"\\"light\\" | \\"dark\\"","value":[{"value":"\\"light\\""},{"value":"\\"dark\\""}]}},"copiedLabel":{"defaultValue":null,"description":"Copy button tooltip in copied state","name":"copiedLabel","required":false,"type":{"name":"string"}},"copyLabel":{"defaultValue":null,"description":"Copy button tooltip","name":"copyLabel","required":false,"type":{"name":"string"}},"getPrismTheme":{"defaultValue":null,"description":"Provide custom color scheme","name":"getPrismTheme","required":false,"type":{"name":"(theme: MantineTheme, colorScheme: \\"light\\" | \\"dark\\") => PrismTheme"}},"highlightLines":{"defaultValue":null,"description":"Highlight line at given line number with color from theme.colors","name":"highlightLines","required":false,"type":{"name":"Record<string, { color: DefaultMantineColor; label?: string; }>"}},"language":{"defaultValue":null,"description":"Programming language that should be highlighted","name":"language","required":true,"type":{"name":"\\"c\\" | \\"go\\" | \\"markup\\" | \\"bash\\" | \\"clike\\" | \\"cpp\\" | \\"css\\" | \\"javascript\\" | \\"jsx\\" | \\"coffeescript\\" | \\"actionscript\\" | \\"css-extr\\" | \\"diff\\" | \\"git\\" | \\"graphql\\" | \\"handlebars\\" | \\"json\\" | \\"less\\" | \\"makefile\\" | \\"markdown\\" | \\"objectivec\\" | \\"ocaml\\" | \\"python\\" | \\"reason\\" | \\"sass\\" | \\"scss\\" | \\"sql\\" | \\"stylus\\" | \\"tsx\\" | \\"typescript\\" | \\"wasm\\" | \\"yaml\\"","raw":"Language","value":[{"value":"\\"c\\""},{"value":"\\"go\\""},{"value":"\\"markup\\""},{"value":"\\"bash\\""},{"value":"\\"clike\\""},{"value":"\\"cpp\\""},{"value":"\\"css\\""},{"value":"\\"javascript\\""},{"value":"\\"jsx\\""},{"value":"\\"coffeescript\\""},{"value":"\\"actionscript\\""},{"value":"\\"css-extr\\""},{"value":"\\"diff\\""},{"value":"\\"git\\""},{"value":"\\"graphql\\""},{"value":"\\"handlebars\\""},{"value":"\\"json\\""},{"value":"\\"less\\""},{"value":"\\"makefile\\""},{"value":"\\"markdown\\""},{"value":"\\"objectivec\\""},{"value":"\\"ocaml\\""},{"value":"\\"python\\""},{"value":"\\"reason\\""},{"value":"\\"sass\\""},{"value":"\\"scss\\""},{"value":"\\"sql\\""},{"value":"\\"stylus\\""},{"value":"\\"tsx\\""},{"value":"\\"typescript\\""},{"value":"\\"wasm\\""},{"value":"\\"yaml\\""}]}},"noCopy":{"defaultValue":null,"description":"True to remove copy to clipboard button","name":"noCopy","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"scrollAreaComponent":{"defaultValue":null,"description":"Change scroll area component","name":"scrollAreaComponent","required":false,"type":{"name":"any"}},"trim":{"defaultValue":null,"description":"Defines whether the code should be trimmed, defaults to true","name":"trim","required":false,"type":{"name":"boolean"}},"withLineNumbers":{"defaultValue":null,"description":"Display line numbers","name":"withLineNumbers","required":false,"type":{"name":"boolean"}}}},"SpotlightProvider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-spotlight/src/SpotlightProvider.tsx","displayName":"@mantine/spotlight/SpotlightProvider","props":{"actionComponent":{"defaultValue":null,"description":"Component that is used to render actions","name":"actionComponent","required":false,"type":{"name":"FC<DefaultActionProps>"}},"actions":{"defaultValue":null,"description":"Actions list","name":"actions","required":true,"type":{"name":"SpotlightAction[]"}},"actionsWrapperComponent":{"defaultValue":null,"description":"Component that is used to wrap actions list","name":"actionsWrapperComponent","required":false,"type":{"name":"string | FC<{ children: ReactNode; }>"}},"centered":{"defaultValue":null,"description":"Determines whether the modal should be centered vertically, false by default","name":"centered","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Your application","name":"children","required":false,"type":{"name":"ReactNode"}},"cleanQueryOnClose":{"defaultValue":{"value":"true"},"description":"Should search be cleared when spotlight closes","name":"cleanQueryOnClose","required":false,"type":{"name":"boolean"}},"closeButtonProps":{"defaultValue":null,"description":"Props added to close button","name":"closeButtonProps","required":false,"type":{"name":"ModalBaseCloseButtonProps"}},"closeOnActionTrigger":{"defaultValue":null,"description":"Should spotlight be closed when action is triggered","name":"closeOnActionTrigger","required":false,"type":{"name":"boolean"}},"closeOnClickOutside":{"defaultValue":null,"description":"Determines whether the modal/drawer should be closed when user clicks on the overlay, true by default","name":"closeOnClickOutside","required":false,"type":{"name":"boolean"}},"closeOnEscape":{"defaultValue":null,"description":"Determines whether onClose should be called when user presses escape key, true by default","name":"closeOnEscape","required":false,"type":{"name":"boolean"}},"disabled":{"defaultValue":{"value":"false"},"description":"Spotlight will not render if disabled is set to true","name":"disabled","required":false,"type":{"name":"boolean"}},"filter":{"defaultValue":null,"description":"Function used to determine how actions will be filtered based on user input","name":"filter","required":false,"type":{"name":"(query: string, actions: SpotlightAction[]) => SpotlightAction[]"}},"fullScreen":{"defaultValue":null,"description":"Determines whether the modal should take the entire screen","name":"fullScreen","required":false,"type":{"name":"boolean"}},"highlightColor":{"defaultValue":null,"description":"The highlight color","name":"highlightColor","required":false,"type":{"name":"MantineColor"}},"highlightQuery":{"defaultValue":null,"description":"Should user query be highlighted in actions title","name":"highlightQuery","required":false,"type":{"name":"boolean"}},"id":{"defaultValue":null,"description":"Id used to connect modal/drawer with body and title","name":"id","required":false,"type":{"name":"string"}},"keepMounted":{"defaultValue":null,"description":"If set modal/drawer will not be unmounted from the DOM when it is hidden, display: none styles will be added instead","name":"keepMounted","required":false,"type":{"name":"boolean"}},"limit":{"defaultValue":null,"description":"Number of actions displayed at a time","name":"limit","required":false,"type":{"name":"number"}},"lockScroll":{"defaultValue":null,"description":"Determines whether scroll should be locked when opened={true}, defaults to true","name":"lockScroll","required":false,"type":{"name":"boolean"}},"nothingFoundMessage":{"defaultValue":null,"description":"Message displayed when actions were not found","name":"nothingFoundMessage","required":false,"type":{"name":"ReactNode"}},"onActionsChange":{"defaultValue":null,"description":"Called when actions change (registered or removed)","name":"onActionsChange","required":false,"type":{"name":"(actions: SpotlightAction[]) => void"}},"onQueryChange":{"defaultValue":null,"description":"Called when user enters text in search input","name":"onQueryChange","required":false,"type":{"name":"(query: string) => void"}},"onSpotlightClose":{"defaultValue":null,"description":"Called when spotlight closes","name":"onSpotlightClose","required":false,"type":{"name":"() => void"}},"onSpotlightOpen":{"defaultValue":null,"description":"Called when spotlight opens","name":"onSpotlightOpen","required":false,"type":{"name":"() => void"}},"overlayProps":{"defaultValue":null,"description":"Props added to Overlay component, use configure opacity, background color, styles and other properties","name":"overlayProps","required":false,"type":{"name":"ModalBaseOverlayProps"}},"padding":{"defaultValue":null,"description":"Key of theme.spacing or any valid CSS value to set content, header and footer padding, \'md\' by default","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"query":{"defaultValue":null,"description":"Controlled search query","name":"query","required":false,"type":{"name":"string"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"returnFocus":{"defaultValue":null,"description":"Determines whether focus should be returned to the last active element onClose is called, true by default","name":"returnFocus","required":false,"type":{"name":"boolean"}},"scrollAreaComponent":{"defaultValue":null,"description":"Component used as scrollable container for actions list, defaults to ScrollArea.Autosize","name":"scrollAreaComponent","required":false,"type":{"name":"FC<{ children: ReactNode; }>"}},"searchIcon":{"defaultValue":null,"description":"Search input icon","name":"searchIcon","required":false,"type":{"name":"ReactNode"}},"searchInputProps":{"defaultValue":null,"description":"Props spread to search input","name":"searchInputProps","required":false,"type":{"name":"TextInputProps"}},"searchPlaceholder":{"defaultValue":null,"description":"Search input placeholder","name":"searchPlaceholder","required":false,"type":{"name":"string"}},"shadow":{"defaultValue":null,"description":"Key of theme.shadows or any valid css box-shadow value, \'xl\' by default","name":"shadow","required":false,"type":{"name":"MantineShadow"}},"shortcut":{"defaultValue":{"value":"mod + K"},"description":"Keyboard shortcut or list of shortcuts to trigger spotlight","name":"shortcut","required":false,"type":{"name":"string | string[]"}},"size":{"defaultValue":null,"description":"Controls content width, \'md\' by default","name":"size","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"tagsToIgnore":{"defaultValue":{"value":"[\'INPUT\', \'TEXTAREA\', \'SELECT\']"},"description":"Tags to ignore shortcut hotkeys on.","name":"tagsToIgnore","required":false,"type":{"name":"string[]"}},"target":{"defaultValue":null,"description":"Target element or selector where Portal should be rendered, by default new element is created and appended to the document.body","name":"target","required":false,"type":{"name":"string | HTMLElement"}},"transitionDuration":{"defaultValue":{"value":"150"},"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"transitionProps":{"defaultValue":null,"description":"Props added to Transition component that used to animate overlay and body, use to configure duration and animation type, { duration: 200, transition: \'pop\' } by default","name":"transitionProps","required":false,"type":{"name":"Partial<Omit<TransitionProps, \\"mounted\\">>"}},"trapFocus":{"defaultValue":null,"description":"Determines whether focus should be trapped, true by default","name":"trapFocus","required":false,"type":{"name":"boolean"}},"triggerOnContentEditable":{"defaultValue":{"value":"false"},"description":"Whether shortcuts should trigger based on contentEditable.","name":"triggerOnContentEditable","required":false,"type":{"name":"boolean"}},"withOverlay":{"defaultValue":null,"description":"Determines whether overlay should be rendered, true by default","name":"withOverlay","required":false,"type":{"name":"boolean"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered inside Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"xOffset":{"defaultValue":null,"description":"Left/right modal offset, 5vw by default","name":"xOffset","required":false,"type":{"name":"MarginLeft<string | number>"}},"yOffset":{"defaultValue":null,"description":"Top/bottom modal offset, 5vh by default","name":"yOffset","required":false,"type":{"name":"MarginTop<string | number>"}},"zIndex":{"defaultValue":null,"description":"z-index CSS property of root element, 200 by default","name":"zIndex","required":false,"type":{"name":"number"}}}},"ModalsProvider":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-modals/src/ModalsProvider.tsx","displayName":"ModalsProvider","props":{"children":{"defaultValue":null,"description":"Your app","name":"children","required":true,"type":{"name":"ReactNode"}},"labels":{"defaultValue":null,"description":"Confirm modal labels","name":"labels","required":false,"type":{"name":"ConfirmLabels"}},"modalProps":{"defaultValue":null,"description":"Shared Modal component props, applied for every modal","name":"modalProps","required":false,"type":{"name":"ModalSettings"}},"modals":{"defaultValue":null,"description":"Predefined modals","name":"modals","required":false,"type":{"name":"Record<string, FC<ContextModalProps<any>>>"}}}},"RichTextEditor":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-tiptap/src/RichTextEditor.tsx","displayName":"@mantine/tiptap/RichTextEditor","props":{"children":{"defaultValue":null,"description":"Child editor components","name":"children","required":true,"type":{"name":"ReactNode"}},"editor":{"defaultValue":null,"description":"Tiptap editor instance","name":"editor","required":true,"type":{"name":"Editor"}},"labels":{"defaultValue":null,"description":"Labels that are used in controls","name":"labels","required":false,"type":{"name":"Partial<RichTextEditorLabels>"}},"withCodeHighlightStyles":{"defaultValue":null,"description":"Determines whether code highlight styles should be added, true by default","name":"withCodeHighlightStyles","required":false,"type":{"name":"boolean"}},"withTypographyStyles":{"defaultValue":null,"description":"Determines whether typography styles should be added, true by default","name":"withTypographyStyles","required":false,"type":{"name":"boolean"}}}},"NavigationProgress":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-nprogress/src/NavigationProgress.tsx","displayName":"NavigationProgress","props":{"autoReset":{"defaultValue":{"value":"false"},"description":"Determines whether progress should be automatically reset when 100% is reached","name":"autoReset","required":false,"type":{"name":"boolean"}},"color":{"defaultValue":null,"description":"Key of theme.colors of any other valid CSS color","name":"color","required":false,"type":{"name":"MantineColor"}},"exitTimeout":{"defaultValue":{"value":"500"},"description":"Number of ms that should elapse before progressbar is hidden after reaching 100%","name":"exitTimeout","required":false,"type":{"name":"number"}},"exitTransitionDuration":{"defaultValue":{"value":"400"},"description":"Exit transition duration in ms","name":"exitTransitionDuration","required":false,"type":{"name":"number"}},"initialProgress":{"defaultValue":{"value":"0"},"description":"The default progress","name":"initialProgress","required":false,"type":{"name":"number"}},"onFinish":{"defaultValue":null,"description":"Called when the progressbar reaches 100%","name":"onFinish","required":false,"type":{"name":"() => void"}},"progressLabel":{"defaultValue":null,"description":"aria-label for `Progress`","name":"progressLabel","required":false,"type":{"name":"string"}},"size":{"defaultValue":{"value":"3"},"description":"Height of the progressbar","name":"size","required":false,"type":{"name":"number"}},"stepInterval":{"defaultValue":{"value":"500"},"description":"Step interval in ms","name":"stepInterval","required":false,"type":{"name":"number"}},"transitionDuration":{"defaultValue":{"value":"300"},"description":"Transition duration in ms","name":"transitionDuration","required":false,"type":{"name":"number"}},"withinPortal":{"defaultValue":{"value":"true"},"description":"Determines whether progressbar should be rendered within Portal, defaults to true","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":{"value":"getDefaultZIndex(\'max\')"},"description":"Progressbar z-index","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}},"Dropzone":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dropzone/src/Dropzone.tsx","displayName":"@mantine/dropzone/Dropzone","props":{"accept":{"defaultValue":null,"description":"File types to accept","name":"accept","required":false,"type":{"name":"string[] | Accept"}},"activateOnClick":{"defaultValue":null,"description":"If false, disables click to open the native file selection dialog","name":"activateOnClick","required":false,"type":{"name":"boolean"}},"activateOnDrag":{"defaultValue":null,"description":"If false, disables drag \'n\' drop","name":"activateOnDrag","required":false,"type":{"name":"boolean"}},"activateOnKeyboard":{"defaultValue":null,"description":"If false, disables Space/Enter to open the native file selection dialog. Note that it also stops tracking the focus state.","name":"activateOnKeyboard","required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"Set to true to autofocus the root element","name":"autoFocus","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Dropzone statues","name":"children","required":true,"type":{"name":"ReactNode"}},"disabled":{"defaultValue":null,"description":"Disable files capturing","name":"disabled","required":false,"type":{"name":"boolean"}},"dragEventsBubbling":{"defaultValue":null,"description":"If false, stops drag event propagation to parents","name":"dragEventsBubbling","required":false,"type":{"name":"boolean"}},"getFilesFromEvent":{"defaultValue":null,"description":"Use this to provide a custom file aggregator","name":"getFilesFromEvent","required":false,"type":{"name":"(event: DropEvent) => Promise<(File | DataTransferItem)[]>"}},"loading":{"defaultValue":null,"description":"Display loading overlay over dropzone","name":"loading","required":false,"type":{"name":"boolean"}},"maxFiles":{"defaultValue":null,"description":"Number of files that user can pick","name":"maxFiles","required":false,"type":{"name":"number"}},"maxSize":{"defaultValue":null,"description":"Set maximum file size in bytes","name":"maxSize","required":false,"type":{"name":"number"}},"multiple":{"defaultValue":null,"description":"Allow selection of multiple files","name":"multiple","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of the form control. Submitted with the form as part of a name/value pair.","name":"name","required":false,"type":{"name":"string"}},"onDragEnter":{"defaultValue":null,"description":"Called when the `dragenter` event occurs","name":"onDragEnter","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDragLeave":{"defaultValue":null,"description":"Called when the `dragleave` event occurs","name":"onDragLeave","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDragOver":{"defaultValue":null,"description":"Called when the `dragover` event occurs","name":"onDragOver","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDrop":{"defaultValue":null,"description":"Called when valid files are dropped into dropzone","name":"onDrop","required":true,"type":{"name":"(files: FileWithPath[]) => void"}},"onDropAny":{"defaultValue":null,"description":"Called when any files are dropped into dropzone","name":"onDropAny","required":false,"type":{"name":"(files: FileWithPath[], fileRejections: FileRejection[]) => void"}},"onFileDialogCancel":{"defaultValue":null,"description":"Called when user closes the file selection dialog with no selection","name":"onFileDialogCancel","required":false,"type":{"name":"() => void"}},"onFileDialogOpen":{"defaultValue":null,"description":"Called when user opens the file selection dialog","name":"onFileDialogOpen","required":false,"type":{"name":"() => void"}},"onReject":{"defaultValue":null,"description":"Called when selected files don\'t meet file restrictions","name":"onReject","required":false,"type":{"name":"(fileRejections: FileRejection[]) => void"}},"openRef":{"defaultValue":null,"description":"Get open function as ref","name":"openRef","required":false,"type":{"name":"ForwardedRef<() => void>"}},"padding":{"defaultValue":null,"description":"Padding from theme.spacing, or any valid CSS value to set padding","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"preventDropOnDocument":{"defaultValue":null,"description":"If false, allow dropped items to take over the current browser window","name":"preventDropOnDocument","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"useFsAccessApi":{"defaultValue":null,"description":"Set to true to use the File System Access API to open the file picker instead of using an <input type=\\"file\\"> click event, defaults to true","name":"useFsAccessApi","required":false,"type":{"name":"boolean"}},"validator":{"defaultValue":null,"description":"Custom validation function. It must return null if there\'s no errors.","name":"validator","required":false,"type":{"name":"<T extends File>(file: T) => FileError | FileError[]"}}}},"_Dropzone.Accept":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dropzone/src/Dropzone.tsx","description":"","displayName":"_Dropzone.Accept","props":{}},"_Dropzone.Reject":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dropzone/src/Dropzone.tsx","description":"","displayName":"_Dropzone.Reject","props":{}},"_Dropzone.Idle":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dropzone/src/Dropzone.tsx","description":"","displayName":"_Dropzone.Idle","props":{}},"DropzoneFullScreen":{"filePath":"/Users/vitalyrtishchev/code/mantine/src/mantine-dropzone/src/DropzoneFullScreen.tsx","displayName":"@mantine/dropzone/DropzoneFullScreen","props":{"accept":{"defaultValue":null,"description":"File types to accept","name":"accept","required":false,"type":{"name":"string[] | Accept"}},"activateOnClick":{"defaultValue":null,"description":"If false, disables click to open the native file selection dialog","name":"activateOnClick","required":false,"type":{"name":"boolean"}},"activateOnDrag":{"defaultValue":null,"description":"If false, disables drag \'n\' drop","name":"activateOnDrag","required":false,"type":{"name":"boolean"}},"activateOnKeyboard":{"defaultValue":null,"description":"If false, disables Space/Enter to open the native file selection dialog. Note that it also stops tracking the focus state.","name":"activateOnKeyboard","required":false,"type":{"name":"boolean"}},"active":{"defaultValue":null,"description":"Determines whether user can drop files to browser window, true by default","name":"active","required":false,"type":{"name":"boolean"}},"autoFocus":{"defaultValue":null,"description":"Set to true to autofocus the root element","name":"autoFocus","required":false,"type":{"name":"boolean"}},"children":{"defaultValue":null,"description":"Dropzone statues","name":"children","required":true,"type":{"name":"ReactNode"}},"disabled":{"defaultValue":null,"description":"Disable files capturing","name":"disabled","required":false,"type":{"name":"boolean"}},"dragEventsBubbling":{"defaultValue":null,"description":"If false, stops drag event propagation to parents","name":"dragEventsBubbling","required":false,"type":{"name":"boolean"}},"getFilesFromEvent":{"defaultValue":null,"description":"Use this to provide a custom file aggregator","name":"getFilesFromEvent","required":false,"type":{"name":"(event: DropEvent) => Promise<(File | DataTransferItem)[]>"}},"loading":{"defaultValue":null,"description":"Display loading overlay over dropzone","name":"loading","required":false,"type":{"name":"boolean"}},"maxFiles":{"defaultValue":null,"description":"Number of files that user can pick","name":"maxFiles","required":false,"type":{"name":"number"}},"maxSize":{"defaultValue":null,"description":"Set maximum file size in bytes","name":"maxSize","required":false,"type":{"name":"number"}},"multiple":{"defaultValue":null,"description":"Allow selection of multiple files","name":"multiple","required":false,"type":{"name":"boolean"}},"name":{"defaultValue":null,"description":"Name of the form control. Submitted with the form as part of a name/value pair.","name":"name","required":false,"type":{"name":"string"}},"onDragEnter":{"defaultValue":null,"description":"Called when the `dragenter` event occurs","name":"onDragEnter","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDragLeave":{"defaultValue":null,"description":"Called when the `dragleave` event occurs","name":"onDragLeave","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDragOver":{"defaultValue":null,"description":"Called when the `dragover` event occurs","name":"onDragOver","required":false,"type":{"name":"(event: DragEvent<HTMLElement>) => void"}},"onDrop":{"defaultValue":null,"description":"Called when valid files are dropped into dropzone","name":"onDrop","required":true,"type":{"name":"(files: FileWithPath[]) => void"}},"onDropAny":{"defaultValue":null,"description":"Called when any files are dropped into dropzone","name":"onDropAny","required":false,"type":{"name":"(files: FileWithPath[], fileRejections: FileRejection[]) => void"}},"onFileDialogCancel":{"defaultValue":null,"description":"Called when user closes the file selection dialog with no selection","name":"onFileDialogCancel","required":false,"type":{"name":"() => void"}},"onFileDialogOpen":{"defaultValue":null,"description":"Called when user opens the file selection dialog","name":"onFileDialogOpen","required":false,"type":{"name":"() => void"}},"onReject":{"defaultValue":null,"description":"Called when selected files don\'t meet file restrictions","name":"onReject","required":false,"type":{"name":"(fileRejections: FileRejection[]) => void"}},"openRef":{"defaultValue":null,"description":"Get open function as ref","name":"openRef","required":false,"type":{"name":"ForwardedRef<() => void>"}},"padding":{"defaultValue":null,"description":"Padding from theme.spacing, or any valid CSS value to set padding","name":"padding","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"preventDropOnDocument":{"defaultValue":null,"description":"If false, allow dropped items to take over the current browser window","name":"preventDropOnDocument","required":false,"type":{"name":"boolean"}},"radius":{"defaultValue":null,"description":"Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default","name":"radius","required":false,"type":{"name":"number | \\"xs\\" | \\"sm\\" | \\"md\\" | \\"lg\\" | \\"xl\\""}},"useFsAccessApi":{"defaultValue":null,"description":"Set to true to use the File System Access API to open the file picker instead of using an <input type=\\"file\\"> click event, defaults to true","name":"useFsAccessApi","required":false,"type":{"name":"boolean"}},"validator":{"defaultValue":null,"description":"Custom validation function. It must return null if there\'s no errors.","name":"validator","required":false,"type":{"name":"<T extends File>(file: T) => FileError | FileError[]"}},"withinPortal":{"defaultValue":null,"description":"Determines whether component should be rendered within Portal, true by default","name":"withinPortal","required":false,"type":{"name":"boolean"}},"zIndex":{"defaultValue":null,"description":"z-index value, 9999 by default","name":"zIndex","required":false,"type":{"name":"ZIndex"}}}}}');function fe(e){var a=e.component,t=e.query,n=(0,ae.rZ)();if(!ce[a])return null;var l=Object.keys(ce[a].props).filter((function(e){return ce[a].props[e].name.toLowerCase().includes(t.toLowerCase().trim())})).map((function(e){var l=ce[a].props[e];return r.createElement("tr",{key:e},r.createElement("td",{style:{whiteSpace:"nowrap"}},r.createElement(se.y,{highlight:t,component:"span",size:"sm"},l.name),l.required&&r.createElement(d.x,{component:"sup",color:"red",size:"xs"}," ","*")),r.createElement("td",{style:{verticalAlign:"middle"}},r.createElement(d.x,{color:"dark"===n.colorScheme?"red":"indigo",size:"xs",weight:500,sx:{fontFamily:"Menlo, Monaco, Lucida Console, monospace"}},l.type.name)),r.createElement("td",null,r.createElement(d.x,{component:"span",size:"sm"},l.description)))}));return 0===l.length?r.createElement(d.x,{color:"dimmed",mb:"xl"},"Nothing found"):r.createElement(me.Z,null,r.createElement("div",{style:{overflowX:"auto"}},r.createElement("div",{style:{minWidth:(0,s.h)(500)}},r.createElement(pe.i,null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Type"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,l)))))}var he=t(75780),ye=t(8850),be=t(49472),ge={item:"Accordion item wrapper",itemTitle:"Optional heading element wrapping control",control:"Control root",label:"Control label",icon:"Control icon",chevron:"Control chevron icon",panel:"Panel root",content:"Panel content"},ve={root:"Root element",wrapper:"Wraps body and icon",body:"Body element, wraps title and message",title:"Title element, contains label and icon",label:"Title label",message:"Alert message, defined by children",icon:"Icon wrapper",closeButton:"Close button, defined by withCloseButton prop"},qe={root:"Root element, wraps Navbar, Header and content",body:"AppShell body, contains Navbar and main element",main:"AppShell main element, contains content"},Ve={wrapper:"Root Input element",icon:"Input icon wrapper on the left side of the input, controlled by icon prop",input:"Main input element",rightSection:"Input right section, controlled by rightSection prop"},we={root:"Root element",label:"Label element styles, defined by label prop",error:"Error element styles, defined by error prop",description:"Description element styles, defined by description prop",required:"Required asterisk element styles, defined by required prop"};function De(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Ce(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Ce(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Ce(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var xe=Object.defineProperty,Pe=Object.getOwnPropertySymbols,Se=Object.prototype.hasOwnProperty,ke=Object.prototype.propertyIsEnumerable,Fe=function(e,a,t){return a in e?xe(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Re=function(e,a){for(var t in a||(a={}))Se.call(a,t)&&Fe(e,t,a[t]);if(Pe)for(var n,l=De(Pe(a));!(n=l()).done;){t=n.value;ke.call(a,t)&&Fe(e,t,a[t])}return e},Ae=Re(Re({dropdown:"Dropdown element",item:"Item element, rendered inside dropdown",nothingFound:"Nothing found label",separator:"Divider wrapper",separatorLabel:"Separator Label",itemsWrapper:"Wraps all items in dropdown"},Ve),we),Ne={root:"Root element",image:"Main img tag, rendered when src is set to valid image url",placeholder:"Placeholder element, rendered when src is null or image cannot be loaded",placeholderIcon:"Default placeholder icon"},Ie={root:"Root element",inner:"Badge label container, contains children",leftSection:"Left section, controlled by leftSectionProp",rightSection:"Right section, controlled by rightSectionProp"},Ee={root:"Root element",inner:"Blockquote inner flex container, contains children, icon and cite",body:"Contains blockquote content",icon:"Icon wrapper",cite:"Cite element"},Le={root:"Root element",breadcrumb:"Breadcrumb item wrapper",separator:"Separator element"},Oe={root:"Root button element",burger:"Burger icon"},Me=t(82772),Te={root:"Root button element",body:"Main element of checkbox",inner:"Includes input and label",labelWrapper:"Include label and description component",input:"Checkbox input element",icon:"Checked or indeterminate state icon",error:"Error message",description:"Description",label:"Label"},ze={root:"Root element",label:"Chip label, includes all other elements except input",input:"Chip input, hidden by default",iconWrapper:"Check icon wrapper",checkIcon:"Check icon, displayed when checkbox or radio is checked"},Be={wrapper:"Root element",body:"Includes hue and alpha sliders and color preview",preview:"Color preview",sliders:"Hue and alpha sliders wrapper",slider:"Alpha and hue sliders",sliderOverlay:"Hue and alpha sliders overlays",thumb:"Hue, alpha and saturation sliders thumbs",saturation:"Saturation slider",swatch:"ColorSwatch component in swatches list",swatches:"Wrapper around all swatches"},We={dropdown:"Dropdown root element",arrow:"Dropdown arrow"};function je(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Ue(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Ue(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Ue(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var He=Object.defineProperty,Ye=Object.getOwnPropertySymbols,Ke=Object.prototype.hasOwnProperty,Ge=Object.prototype.propertyIsEnumerable,Ze=function(e,a,t){return a in e?He(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},$e=function(e,a){for(var t in a||(a={}))Ke.call(a,t)&&Ze(e,t,a[t]);if(Ye)for(var n,l=je(Ye(a));!(n=l()).done;){t=n.value;Ge.call(a,t)&&Ze(e,t,a[t])}return e},Xe=$e($e($e($e({},Ve),we),Be),We),_e={root:"Root element",closeButton:"Close button"},Je={label:"Label element, horizontal orientation only"},Qe={root:"Root element",inner:"Element used to position drawer, has fixed position, takes entire screen",content:"Drawer.Content root element",header:"Contains title and close button",overlay:"Overlay displayed under the Drawer.Content",title:"Drawer title (h2 tag), displayed in header",body:"Drawer body, displayed after header",close:"Close button"};function ea(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return aa(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return aa(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function aa(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var ta,na=Object.defineProperty,la=Object.defineProperties,ra=Object.getOwnPropertyDescriptors,ia=Object.getOwnPropertySymbols,oa=Object.prototype.hasOwnProperty,ua=Object.prototype.propertyIsEnumerable,da=function(e,a,t){return a in e?na(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},sa=function(e,a){for(var t in a||(a={}))oa.call(a,t)&&da(e,t,a[t]);if(ia)for(var n,l=ea(ia(a));!(n=l()).done;){t=n.value;ua.call(a,t)&&da(e,t,a[t])}return e},pa=(ta=sa(sa({},Ve),we),la(ta,ra({placeholder:"Placeholder text"}))),ma=We,ca={root:"Root element",imageWrapper:"Wraps image and placeholder",placeholder:"Placeholder wrapper",figure:"figure element, wrap image and figcaption",image:"img element",caption:"figcaption element"},fa={root:"Root element",common:"Indicator Common",indicator:"Indicator badge",processing:"Indicator Processing"};function ha(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return ya(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ya(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function ya(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var ba=Object.defineProperty,ga=Object.getOwnPropertySymbols,va=Object.prototype.hasOwnProperty,qa=Object.prototype.propertyIsEnumerable,Va=function(e,a,t){return a in e?ba(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},wa=function(e,a){for(var t in a||(a={}))va.call(a,t)&&Va(e,t,a[t]);if(ga)for(var n,l=ha(ga(a));!(n=l()).done;){t=n.value;qa.call(a,t)&&Va(e,t,a[t])}return e},Da=wa(wa({},Ve),we),Ca={root:"Root element (ul or ol)",item:"List element (li)",itemWrapper:"Wraps icon and item item content, used to align custom icon with content",itemIcon:"Icon wrapper element"},xa={dropdown:"Menu.Dropdown element",label:"Menu.Label root element",item:"Menu.Item root element",arrow:"Menu.Dropdown arrow",divider:"Menu.Divider root element",itemIcon:"Menu.Item icon",itemLabel:"Menu.Item label",itemRightSection:"Menu.Item right section"},Pa={root:"Root element",inner:"Element used to center modal, has fixed position, takes entire screen",content:"Modal.Content root element",header:"Contains title and close button",overlay:"Overlay displayed under the Modal.Content",title:"Modal title (h2 tag), displayed in header",body:"Modal body, displayed after header",close:"Close button"};function Sa(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return ka(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ka(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function ka(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var Fa=Object.defineProperty,Ra=Object.getOwnPropertySymbols,Aa=Object.prototype.hasOwnProperty,Na=Object.prototype.propertyIsEnumerable,Ia=function(e,a,t){return a in e?Fa(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Ea=function(e,a){for(var t in a||(a={}))Aa.call(a,t)&&Ia(e,t,a[t]);if(Ra)for(var n,l=Sa(Ra(a));!(n=l()).done;){t=n.value;Na.call(a,t)&&Ia(e,t,a[t])}return e},La=Ea({},Ve);delete La.rightSection;var Oa=Ea(Ea({wrapper:"Wrapper around input and dropdown",dropdown:"Dropdown element",item:"Item element, rendered inside dropdown",nothingFound:"Nothing found label",values:"Values wrapper",value:"Value element",searchInput:"Search input, rendered after all values",defaultValue:"Default value component wrapper",defaultValueRemove:"Default value remove control",defaultValueLabel:"Default value label",separator:"Divider wrapper",separatorLabel:"Divider Label",itemsWrapper:"Wraps all items in dropdown"},La),we);function Ma(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Ta(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Ta(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Ta(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var za=Object.defineProperty,Ba=Object.getOwnPropertySymbols,Wa=Object.prototype.hasOwnProperty,ja=Object.prototype.propertyIsEnumerable,Ua=function(e,a,t){return a in e?za(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Ha=function(e,a){for(var t in a||(a={}))Wa.call(a,t)&&Ua(e,t,a[t]);if(Ba)for(var n,l=Ma(Ba(a));!(n=l()).done;){t=n.value;ja.call(a,t)&&Ua(e,t,a[t])}return e},Ya=Ha(Ha({},Ve),we),Ka={root:"Root element",body:"Contains label and description",icon:"Icon on the left side of the body",rightSection:"Section on the right side of the body",label:"Label",description:"Dimmed description displayed below the label",children:"Wrapper around nested links"},Ga={root:"Root element",body:"Notification body wrapper, contains title and description",loader:"Notification loader, controlled by loading prop",icon:"Notification icon on the left, controlled by icon prop",title:"Notification title, controlled by title prop",description:"Notification description, controlled by children",closeButton:"Close button"};function Za(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return $a(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return $a(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function $a(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var Xa=Object.defineProperty,_a=Object.defineProperties,Ja=Object.getOwnPropertyDescriptors,Qa=Object.getOwnPropertySymbols,et=Object.prototype.hasOwnProperty,at=Object.prototype.propertyIsEnumerable,tt=function(e,a,t){return a in e?Xa(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},nt=function(e,a){for(var t in a||(a={}))et.call(a,t)&&tt(e,t,a[t]);if(Qa)for(var n,l=Za(Qa(a));!(n=l()).done;){t=n.value;at.call(a,t)&&tt(e,t,a[t])}return e},lt=function(e,a){return _a(e,Ja(a))}(nt(nt({},Ve),we),{rightSection:"Right section with up and down controls",control:"Shared up and down controls styles",controlUp:"Up control styles",controlDown:"Down control styles"}),rt={root:"Root element",item:"Pagination items, dots and arrows"};function it(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return ot(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ot(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function ot(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var ut=Object.defineProperty,dt=Object.getOwnPropertySymbols,st=Object.prototype.hasOwnProperty,pt=Object.prototype.propertyIsEnumerable,mt=function(e,a,t){return a in e?ut(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},ct=function(e,a){for(var t in a||(a={}))st.call(a,t)&&mt(e,t,a[t]);if(dt)for(var n,l=it(dt(a));!(n=l()).done;){t=n.value;pt.call(a,t)&&mt(e,t,a[t])}return e},ft=ct(ct({},Ve),we);function ht(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return yt(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return yt(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function yt(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var bt=Object.defineProperty,gt=Object.defineProperties,vt=Object.getOwnPropertyDescriptors,qt=Object.getOwnPropertySymbols,Vt=Object.prototype.hasOwnProperty,wt=Object.prototype.propertyIsEnumerable,Dt=function(e,a,t){return a in e?bt(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Ct=function(e,a){return gt(e,vt(a))}(function(e,a){for(var t in a||(a={}))Vt.call(a,t)&&Dt(e,t,a[t]);if(qt)for(var n,l=ht(qt(a));!(n=l()).done;){t=n.value;wt.call(a,t)&&Dt(e,t,a[t])}return e}({},ft),{visibilityToggle:"Visibility toggle button",innerInput:"Actual input element"});function xt(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Pt(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Pt(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Pt(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var St=Object.defineProperty,kt=Object.getOwnPropertySymbols,Ft=Object.prototype.hasOwnProperty,Rt=Object.prototype.propertyIsEnumerable,At=function(e,a,t){return a in e?St(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Nt=function(e,a){for(var t in a||(a={}))Ft.call(a,t)&&At(e,t,a[t]);if(kt)for(var n,l=xt(kt(a));!(n=l()).done;){t=n.value;Rt.call(a,t)&&At(e,t,a[t])}return e}({root:"Root element"},Ve),It={root:"Root element",bar:"Filled bar",label:"Progress label"},Et=we,Lt={root:"root radio element",body:"Wrapper for label and radio button",labelWrapper:"Include label and description component",radio:"Radio button",inner:"Radio button inner, contains input and icon",icon:"Radio button icon",error:"Error message",description:"Description",label:"Label"},Ot={root:"Root element",symbolGroup:"Container for fraction symbols",input:"Input element",label:"Label element",symbolBody:"Element inside label that hold symbol icon"},Mt={root:"Root element",label:"Label element"},Tt={root:"Root element",corner:"Corner between horizontal and vertical scrollbars",viewport:"Children wrapper",scrollbar:"Scrollbar",thumb:"Scrollbar thumb"},zt={root:"Root element",label:"Input label element",input:"Radio input (visually hidden)",control:"Control wrapper, contains input and label",controlActive:"Active control wrapper",indicator:"Element which indicates current active item, positioned below controls"};function Bt(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Wt(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Wt(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Wt(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var jt=Object.defineProperty,Ut=Object.getOwnPropertySymbols,Ht=Object.prototype.hasOwnProperty,Yt=Object.prototype.propertyIsEnumerable,Kt=function(e,a,t){return a in e?jt(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Gt=function(e,a){for(var t in a||(a={}))Ht.call(a,t)&&Kt(e,t,a[t]);if(Ut)for(var n,l=Bt(Ut(a));!(n=l()).done;){t=n.value;Yt.call(a,t)&&Kt(e,t,a[t])}return e},Zt=Gt(Gt({dropdown:"Dropdown element",item:"Item element, rendered inside dropdown",nothingFound:"Nothing found label",separator:"Divider wrapper",separatorLabel:"Separator Label",itemsWrapper:"Wraps all items in dropdown"},Ve),we),$t=t(10644),Xt={root:"Root element",content:"Content wrapper",control:"Hide/show control"},_t={root:"Root element",steps:"Steps controls wrapper",separator:"Separator line between step controls",verticalSeparator:"Vertical separator line between step controls",separatorActive:"Separator active modifier",verticalSeparatorActive:"Vertical separator active modifier",content:"Current step content wrapper",stepWrapper:"Wrapper for the step icon and separator",step:"Step control button",stepIcon:"Step icon wrapper",stepCompletedIcon:"Completed step icon, rendered within stepIcon",stepBody:"Contains stepLabel and stepDescription",stepLabel:"Step label",stepDescription:"Step description",stepLoader:"Step loader"},Jt={root:"Root element",input:"Checkbox input",labelWrapper:"Include label and description component",body:"Container Of Switch",track:"Track",thumb:"Thumb of Switch",trackLabel:"onLabel and offLabel",error:"Error message",description:"Description",label:"Label"},Qt={root:"Root element",tabsList:"Controls list (Tabs.List component)",tab:"Tab control (Tabs.Tab component)",tabRightSection:"Tab control right section",tabLabel:"Tab control label",tabIcon:"Tab control icon",panel:"Tab panel (Tabs.Panel component)"},en=ft,an={root:"Root element",item:"Item root element",itemBody:"Item body, wraps title and content",itemTitle:"Item title, controlled by title prop",itemContent:"Item content, controlled by children prop",itemBullet:"Item bullet"},tn={tooltip:"Tooltip body",arrow:"Tooltip arrow"},nn={transferList:"One of list",transferListTitle:"Title",transferListBody:"Contains header and items list",transferListHeader:"Contains search and controls",transferListItems:"Items container",transferListItem:"List item",transferListItemHovered:"List item modifier with hovered state",transferListSearch:"Search field",transferListControl:"Controls to move items",separator:"Divider wrapper",separatorLabel:"Separator Label"};function ln(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return rn(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return rn(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function rn(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var on=Object.defineProperty,un=Object.defineProperties,dn=Object.getOwnPropertyDescriptors,sn=Object.getOwnPropertySymbols,pn=Object.prototype.hasOwnProperty,mn=Object.prototype.propertyIsEnumerable,cn=function(e,a,t){return a in e?on(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},fn=function(e,a){for(var t in a||(a={}))pn.call(a,t)&&cn(e,t,a[t]);if(sn)for(var n,l=ln(sn(a));!(n=l()).done;){t=n.value;mn.call(a,t)&&cn(e,t,a[t])}return e},hn=function(e,a){return un(e,dn(a))},yn={calendarHeader:"Calendar header root element",calendarHeaderControl:"Previous/next calendar header controls",calendarHeaderControlIcon:"Icon of previous/next calendar header controls",calendarHeaderLevel:"Level control (changes levels when clicked, month -> year -> decade)"},bn=hn(fn({},yn),{decadeLevelGroup:"Group of decades levels",decadeLevel:"Decade level root element",pickerControl:"Button used to pick months and years",yearsList:"Years list table element",yearsListRow:"Years list row element",yearsListCell:"Years list cell element"}),gn=hn(fn({},yn),{yearLevelGroup:"Group of year levels",yearLevel:"Year level root element",monthsList:"Months list table element",monthsListRow:"Months list table row element",monthsListCell:"Months list table cell element",pickerControl:"Button used to pick months and years"}),vn=hn(fn({},yn),{monthLevelGroup:"Group or month levels",monthLevel:"Month level root element",monthThead:"thead element of month table",monthRow:"tr element of month table",monthTbody:"tbody element of month table",monthCell:"td element of month table",month:"Month table element",weekdaysRow:"Weekdays tr element",weekday:"Weekday th element",day:"Month day control"}),qn={calendar:"Calendar root element"},Vn=fn(fn(fn(fn({},qn),bn),gn),vn),wn=fn(fn({},qn),bn),Dn=fn(fn(fn({},qn),bn),gn),Cn=fn(fn(fn(fn({},qn),bn),gn),vn),xn=fn(fn({},ft),wn),Pn=fn(fn({},ft),Dn),Sn=fn(fn({},ft),Cn),kn=fn(fn({},ft),Cn),Fn=hn(fn(fn({},ft),Cn),{placeholder:"Placeholder element",timeWrapper:"Wrapper around time input and submit button",timeInput:"TimeInput"}),Rn=ft;function An(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return Nn(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Nn(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function Nn(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var In=Object.defineProperty,En=Object.defineProperties,Ln=Object.getOwnPropertyDescriptors,On=Object.getOwnPropertySymbols,Mn=Object.prototype.hasOwnProperty,Tn=Object.prototype.propertyIsEnumerable,zn=function(e,a,t){return a in e?In(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t},Bn={root:"Root element",inner:"Inner element containing dropzone children"},Wn=function(e,a){return En(e,Ln(a))}(function(e,a){for(var t in a||(a={}))Mn.call(a,t)&&zn(e,t,a[t]);if(On)for(var n,l=An(On(a));!(n=l()).done;){t=n.value;Tn.call(a,t)&&zn(e,t,a[t])}return e}({},Bn),{wrapper:"Wrapper around dropzone"}),jn={root:"Root element",scrollArea:"ScrollArea component wrapping pre element",code:"Pre element which contains code",copy:"Copy button wrapper",line:"Line wrapper, contains line number and content",lineNumber:"Line number",lineContent:"Line content"},Un={root:"Root element",toolbar:"Toolbar element",content:"Content area",typographyStylesProvider:"TypographyStylesProvider component, wraps content",control:"RichTextEditor.Control root element, used as a base for all controls",controlsGroup:"RichTextEditor.ControlsGroup component root",linkEditor:"Link editor root element",linkEditorSave:"Link editor save button",linkEditorInput:"Link editor url input",linkEditorExternalControl:"Link editor external button"},Hn={root:"Root element",inner:"Element used to center spotlight, has fixed position, takes entire screen",content:"Spotlight content root element",overlay:"Overlay displayed under the Spotlight",body:"Spotlight body, displayed after header",searchInput:"Search input",nothingFound:"Nothing found message",actions:"Actions list",actionsGroup:"Actions group label",action:"Default action",actionIcon:"Default action icon wrapper",actionBody:"Default action body",actionDescription:"Default action description"},Yn={root:"Root element",slide:"Slide root element",container:"Slides container",viewport:"Main element, contains slides container and all controls",controls:"Next/previous controls container",control:"Next/previous control",indicators:"Indicators container",indicator:"Indicator button"},Kn=(0,g.k)((function(e){var a,t;return{title:{fontWeight:600,marginBottom:(0,s.h)(15),color:"dark"===e.colorScheme?e.white:e.black},codeSections:(a={display:"flex",marginTop:"calc("+e.spacing.xl+" * 1.5)"},a["@media (max-width: "+(0,s.em)(765)+")"]={flexDirection:"column"},a),codeSection:{flex:1,"& + &":(t={marginLeft:e.spacing.md},t["@media (max-width: "+(0,s.em)(765)+")"]={marginLeft:0},t)},root:{"& + &":{marginTop:"calc("+e.spacing.xl+" * 2)"}}}}));function Gn(e){var a=e.component,t=Kn().classes,l=n[a.replace(".","")];if(!l||"object"!=typeof l)return null;var i=Object.keys(l).map((function(e){return r.createElement("tr",{key:e},r.createElement("td",null,e),r.createElement("td",null,".mantine-"+a+"-"+e),r.createElement("td",null,l[e]))}));return r.createElement("div",{className:t.root},r.createElement(o.D,{order:3,className:t.title},a," component Styles API"),r.createElement(pe.i,null,r.createElement("thead",null,r.createElement("tr",null,r.createElement("th",null,"Name"),r.createElement("th",null,"Static selector"),r.createElement("th",null,"Description"))),r.createElement("tbody",null,i)))}function Zn(e){var a=e.components;if(!Array.isArray(a))return null;var t=a.map((function(e){return r.createElement(Gn,{key:e,component:e})}));return r.createElement(r.Fragment,null,t,r.createElement(he.x,{mt:"xl"},r.createElement(be.Z,{to:"/styles/styles-api/"},r.createElement(ye.Z,{spacing:4},r.createElement("span",null,"Learn more about Styles API"),r.createElement(K.Z,{size:(0,s.h)(14),stroke:1.5})))))}var $n=(0,g.k)((function(e){var a,t,n,l,r,i;return{tabsWrapper:(a={background:"dark"===e.colorScheme?e.colors.dark[8]:e.colors.gray[0],borderBottom:(0,s.h)(1)+" solid "+("dark"===e.colorScheme?e.colors.dark[8]:e.colors.gray[3]),paddingLeft:"calc("+e.spacing.xl+" * 2)"},a["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.xl},a["@media (min-width: "+(0,s.em)(1380)+")"]={paddingLeft:0},a),tabsList:(t={maxWidth:(0,s.h)(1082),marginLeft:"auto",marginRight:"auto",borderBottom:0},t["@media (max-width: "+(0,s.em)(L.Bs)+")"]={maxWidth:"100%",paddingRight:0},t),tab:(n={fontSize:(0,s.h)(16),fontWeight:500,height:(0,s.h)(L.s$),paddingLeft:e.spacing.lg,paddingRight:e.spacing.lg,marginBottom:(0,s.h)(-1),borderColor:"dark"===e.colorScheme?e.colors.dark[8]+" !important":void 0,backgroundColor:"transparent"},n["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.lg,paddingRight:e.spacing.lg,fontSize:e.fontSizes.sm,height:(0,s.h)(L.v_)},n["&[data-active]"]={backgroundColor:"dark"===e.colorScheme?e.colors.dark[7]:e.white,color:"dark"===e.colorScheme?e.white:e.black},n),tabContent:(l={paddingLeft:"calc("+e.spacing.xl+" * 2)",paddingRight:"calc("+e.spacing.xl+" * 2)",paddingTop:e.spacing.xs},l["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.xl,paddingRight:e.spacing.xl},l),main:(r={width:"calc(100% - "+(0,s.h)(L.x6)+")",maxWidth:(0,s.h)(L.pp),marginLeft:"auto",marginRight:"auto"},r["@media (max-width: "+(0,s.em)(L.Bs)+")"]={width:"100%",paddingRight:0},r),tableOfContents:(i={flex:"0 0 "+(0,s.h)(L.x6),marginTop:e.spacing.xl},i["@media (max-width: "+(0,s.em)(L.Bs)+")"]={display:"none"},i),title:{color:"dark"===e.colorScheme?e.white:e.black}}}));function Xn(e){var a=e.body,t=e.frontmatter,n=e.headings,l=e.siblings,i=(0,r.useState)(""),u=i[0],d=i[1],p=$n().classes,m=(0,D.a)("(max-width: "+(0,s.em)(500)+")"),c=(0,T.useLocation)(),f=(0,r.useState)("docs"),h=f[0],y=f[1],g=Array.isArray(t.props),v=Array.isArray(t.styles);if((0,r.useEffect)((function(){y(c.search.replace("?t=","")||"docs")}),[]),!g&&!v)return null;var q=g?t.props.map((function(e){var a=t.componentPrefix,n=a?a===e?e:a+"."+e.replace(a,""):e;return r.createElement("div",{key:e},r.createElement(o.D,{order:2,sx:{fontWeight:600},mb:20,className:p.title},n," component props"),r.createElement(fe,{key:e,component:e,query:u}))})):null;return r.createElement(de,null,r.createElement(z.m,{variant:"outline",value:h,onTabChange:function(e){var a="docs"===e?c.pathname:c.pathname+"?t="+e;(0,b.navigate)(a,{replace:!0}),y(e)},classNames:{tabsList:p.tabsList,tab:p.tab}},r.createElement("div",{className:p.tabsWrapper},r.createElement(z.m.List,null,r.createElement(z.m.Tab,{value:"docs"},"Documentation"),g&&r.createElement(z.m.Tab,{value:"props"},m?"Props":"Component props"),v&&r.createElement(z.m.Tab,{value:"styles-api"},m?"Styles":"Styles API"))),r.createElement(z.m.Panel,{value:"docs"},r.createElement("div",{className:p.tabContent,style:{display:"flex",position:"relative",justifyContent:"space-between"}},r.createElement("div",{className:p.main},r.createElement(j.MDXRenderer,null,a),r.createElement(J,{siblings:l})),r.createElement("div",{className:p.tableOfContents},r.createElement(ie,{headings:n,withTabs:!0})))),r.createElement(z.m.Panel,{value:"props"},r.createElement("div",{style:{maxWidth:(0,s.h)(1178),marginLeft:"auto",marginRight:"auto",marginTop:(0,s.h)(24)},className:p.tabContent},r.createElement(B.o,{autoFocus:!0,icon:r.createElement(W.Z,{size:(0,s.h)(16),stroke:1.5}),placeholder:"Search props",mb:20,value:u,onChange:function(e){return d(e.currentTarget.value)}}),q)),r.createElement(z.m.Panel,{value:"styles-api"},r.createElement("div",{style:{maxWidth:(0,s.h)(1178),marginLeft:"auto",marginRight:"auto",marginTop:(0,s.h)(24)},className:p.tabContent},r.createElement(Zn,{components:t.styles})))))}var _n=(0,g.k)((function(e,a){var t,n,l,r=a.withToc;return{wrapper:(t={backgroundColor:"dark"===e.colorScheme?e.colors.dark[7]:e.white,zIndex:1,display:"flex",position:"relative",justifyContent:"space-between",paddingLeft:"calc("+e.spacing.xl+" * 2)",paddingRight:"calc("+e.spacing.xl+" * 2)"},t["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.xl,paddingRight:e.spacing.xl},t),container:(n={marginTop:e.spacing.xl,width:r?"calc(100% - "+(0,s.h)(L.x6)+")":"100%",maxWidth:(0,s.h)(r?L.pp:L.pp+L.x6),marginLeft:"auto",marginRight:"auto"},n["@media (max-width: "+(0,s.em)(L.Bs)+")"]={width:"100%",paddingRight:0},n),tableOfContents:(l={flex:"0 0 "+(0,s.h)(L.x6)},l["@media (max-width: "+(0,s.em)(L.Bs)+")"]={display:"none"},l)}}));function Jn(e){var a=e.body,t=e.headings,n=e.siblings,l=e.frontmatter,i=_n({withToc:!l.hideToc}).classes;return r.createElement(de,null,r.createElement("div",{className:i.wrapper},r.createElement("div",{className:i.container},r.createElement(j.MDXRenderer,null,a),!l.hideToc&&r.createElement(J,{siblings:n})),!l.hideToc&&r.createElement("div",{className:i.tableOfContents},r.createElement(ie,{headings:t,withTabs:!1}))))}var Qn=t(11615),el=t(96549),al=(0,g.k)((function(e){var a,t;return{wrapper:(a={backgroundColor:"dark"===e.colorScheme?e.colors.dark[7]:e.white,zIndex:1,display:"flex",position:"relative",justifyContent:"space-between",paddingLeft:"calc("+e.spacing.xl+" * 2)",paddingRight:"calc("+e.spacing.xl+" * 2)"},a["@media (max-width: "+(0,s.em)(L.Bs)+")"]={paddingLeft:e.spacing.xl,paddingRight:e.spacing.xl},a),container:(t={marginTop:e.spacing.xl,width:"calc(100% - "+(0,s.h)(L.x6)+")",maxWidth:(0,s.h)(L.pp),marginLeft:"auto",marginRight:"auto"},t["@media (max-width: "+(0,s.em)(L.Bs)+")"]={width:"100%",paddingRight:0},t),error:{}}}));function tl(e){var a=e.body,t=e.frontmatter,n=al().classes;return r.createElement(de,null,r.createElement("div",{className:n.wrapper},r.createElement("div",{className:n.container},r.createElement(el.Z,{order:1},t.title),r.createElement(Qn.b,{className:n.error,color:"red",title:"Error message"},t.error),r.createElement(j.MDXRenderer,null,a))))}function nl(e){return e.frontmatter.error?r.createElement(tl,e):r.createElement(r.Fragment,null,r.createElement(M,e),Array.isArray(e.frontmatter.props)?r.createElement(Xn,e):r.createElement(Jn,e))}var ll=t(88834);function rl(e){var a=e.data,t=e.location,n=a.mdx,i=function(e,a){var t=e.reduce((function(e,a){var t=a.groups.reduce((function(e,a){return[].concat((0,l.Z)(e),(0,l.Z)(a.pages))}),[]);return[].concat((0,l.Z)(e),(0,l.Z)(a.uncategorized),(0,l.Z)(t))}),[]),n=t.findIndex((function(e){return e.slug===a}));return{next:t[n+1]||null,prev:t[n-1]||null}}((0,ll.u)(a),t.pathname);return r.createElement("article",null,r.createElement(nl,Object.assign({},n,{siblings:i})))}var il=function(e){var a=e.data.mdx;return r.createElement(i.y,{title:a.frontmatter.title,description:a.frontmatter.description})}},21955:function(e,a,t){var n=t(47927);e.exports={MDXRenderer:n}},47927:function(e,a,t){var n=t(69100),l=t(319),r=t(59713),i=t(37316),o=["scope","children"];function u(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function d(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?u(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}var s=t(27378),p=t(64983).mdx,m=t(32174).useMDXScope;e.exports=function(e){var a=e.scope,t=e.children,r=i(e,o),u=m(a),c=s.useMemo((function(){if(!t)return null;var e=d({React:s,mdx:p},u),a=Object.keys(e),r=a.map((function(a){return e[a]}));return n(Function,["_fn"].concat(l(a),[""+t])).apply(void 0,[{}].concat(l(r)))}),[t,a]);return s.createElement(c,d({},r))}},21221:function(e,a,t){"use strict";t.d(a,{Z:function(){return m}});var n=t(27378),l=t(6057);function r(e,a){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(t)return(t=t.call(e)).next.bind(t);if(Array.isArray(e)||(t=function(e,a){if(!e)return;if("string"==typeof e)return i(e,a);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return i(e,a)}(e))||a&&e&&"number"==typeof e.length){t&&(e=t);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e,a){(null==a||a>e.length)&&(a=e.length);for(var t=0,n=new Array(a);t<a;t++)n[t]=e[t];return n}var o=Object.defineProperty,u=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=function(e,a,t){return a in e?o(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t};function m(e){var a=e,t=a.size,i=function(e,a){var t={};for(var n in e)d.call(e,n)&&a.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&u)for(var l,i=r(u(e));!(l=i()).done;)n=l.value,a.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t}(a,["size"]);return n.createElement("svg",function(e,a){for(var t in a||(a={}))d.call(a,t)&&p(e,t,a[t]);if(u)for(var n,l=r(u(a));!(n=l()).done;)t=n.value,s.call(a,t)&&p(e,t,a[t]);return e}({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 256 209",fill:"currentColor",width:(0,l.h)(t),height:(0,l.h)(t)},i),n.createElement("path",{fillRule:"nonzero",d:"M256 25.45c-9.42 4.177-19.542 7-30.166 8.27 10.845-6.5 19.172-16.793 23.093-29.057a105.183 105.183 0 01-33.351 12.745C205.995 7.201 192.346.822 177.239.822c-29.006 0-52.523 23.516-52.523 52.52 0 4.117.465 8.125 1.36 11.97-43.65-2.191-82.35-23.1-108.255-54.876-4.52 7.757-7.11 16.78-7.11 26.404 0 18.222 9.273 34.297 23.365 43.716a52.312 52.312 0 01-23.79-6.57c-.003.22-.003.44-.003.661 0 25.447 18.104 46.675 42.13 51.5a52.592 52.592 0 01-23.718.9c6.683 20.866 26.08 36.05 49.062 36.475-17.975 14.086-40.622 22.483-65.228 22.483-4.24 0-8.42-.249-12.529-.734 23.243 14.902 50.85 23.597 80.51 23.597 96.607 0 149.434-80.031 149.434-149.435 0-2.278-.05-4.543-.152-6.795A106.748 106.748 0 00256 25.45"}))}}}]);
//# sourceMappingURL=component---src-pages-mdx-slug-tsx-f45fe4a6759e09e76531.js.map